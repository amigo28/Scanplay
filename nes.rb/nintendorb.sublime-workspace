{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"emp",
				"emphTable"
			],
			[
				"attr",
				"attr_accessor"
			]
		]
	},
	"buffers":
	[
		{
			"file": "nintendo.rb",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/ppu.rb",
			"settings":
			{
				"buffer_size": 62454,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/rexstjohn/Desktop/ruby.rb",
			"settings":
			{
				"buffer_size": 74,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 1 file for \"this.spriteMem\"\n\n/Users/rexstjohn/Desktop/NES/nes.rb/source/ppu.rb:\n   45          # Memory\n   46          @vram_mem =  Array.new(0x8000)\n   47:         this.spriteMem =  Array.new(0x100)\n   48  \n   49          for (i=0 i<@vram_mem.length i++) \n   ..\n   51          end\n   52  \n   53:         for (i=0 i<this.spriteMem.length i++)\n   54:             this.spriteMem[i] = 0\n   55          end\n   56          \n   ..\n  582          sramAddress%=0x100\n  583          return tmp=end\n  584:         return this.spriteMem[this.sramAddress]\n  585      },\n  586      \n  ...\n  589      # The address should be set first.\n  590      sramWrite: function(value){\n  591:         this.spriteMem[this.sramAddress] = value\n  592          this.spriteRamWriteUpdate(this.sramAddress,value)\n  593          this.sramAddress++ # Increment address\n  ...\n  739          for (var i=this.sramAddress i < 256 i++) {\n  740              data = this.nes.cpu.mem[baseAddress+i]\n  741:             this.spriteMem[i] = data\n  742              this.spriteRamWriteUpdate(i, data)\n  743          }\n  ...\n 1476          \n 1477          # Sprite data:\n 1478:         for (i = 0 i < this.spriteMem.length i++) {\n 1479:             this.spriteRamWriteUpdate(i, this.spriteMem[i])\n 1480          }\n 1481      }\n\n8 matches in 1 file\n",
			"settings":
			{
				"buffer_size": 1312,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"contents": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html charset=utf-8\">\n    <title>JSNES: A JavaScript NES emulator</title>\n</head>\n\n<body>\n    <h1>JSNES</h1>\n    \n    <div id=\"emulator\"></div>\n    \n    <h2>Controls</h2>\n    <table id=\"controls\">\n        <tr>\n            <th>Button</th>\n            <th>Player 1</th>\n            <th>Player 2</th>\n        </tr>\n        <tr>\n            <td>Left</td>\n            <td>Left</td>\n            <td>Num-4</td>\n        <tr>\n            <td>Right</td>\n            <td>Right</td>\n            <td>Num-6</td>\n        </tr>\n        <tr>\n            <td>Up</td>\n            <td>Up</td>\n            <td>Num-8</td>\n        </tr>\n        <tr>\n            <td>Down</td>\n            <td>Down</td>\n            <td>Num-2</td>\n        </tr>\n        <tr>\n            <td>A</td>\n            <td>X</td>\n            <td>Num-7</td>\n        </tr>\n        <tr>\n            <td>B</td>\n            <td>Z</td>\n            <td>Num-9</td>\n        </tr>\n        <tr>\n            <td>Start</td>\n            <td>Enter</td>\n            <td>Num-1</td>\n        </tr>\n        <tr>\n            <td>Select</td>\n            <td>Ctrl</td>\n            <td>Num-3</td>\n        </tr>\n    </table>\n\n    <script src=\"lib/jquery-1.4.2.min.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n    <script src=\"lib/dynamicaudio-min.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n    <script src=\"source/nes.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n    <script src=\"source/utils.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n    <script src=\"source/cpu.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n    <script src=\"source/keyboard.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n    <script src=\"source/mappers.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n    <script src=\"source/papu.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n    <script src=\"source/ppu.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n    <script src=\"source/rom.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n    <script src=\"source/ui.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n    <script type=\"text/javascript\" charset=\"utf-8\">\n        var nes\n        $(function() {\n            nes = new JSNES({\n                'ui': $('#emulator').JSNESUI({\n                    \"Homebrew\": [\n                        ['Concentration Room', 'roms/croom/croom.nes'],\n                        ['LJ65', 'roms/lj65/lj65.nes'],\n                    ],\n                    \"Working\": [\n                        ['Bubble Bobble', 'local-roms/Bubble Bobble (U).nes'],\n                        \n                        ['Contra', 'local-roms/Contra (U) [!].nes'],\n                        ['Donkey Kong', 'local-roms/Donkey Kong (JU).nes'],\n                        ['Dr. Mario', 'local-roms/Dr. Mario (JU).nes'],\n                        ['Golf', 'local-roms/Golf (JU).nes'],\n                        ['The Legend of Zelda', 'local-roms/Legend of Zelda, The (U) (PRG1).nes'],\n                        ['Lemmings', 'local-roms/Lemmings (U).nes'],\n                        ['Lifeforce', 'local-roms/Lifeforce (U).nes'],\n                        \n                        ['Mario Bros.', 'local-roms/Mario Bros. (JU) [!].nes'],\n                        ['Mega Man', 'local-roms/Mega Man (U).nes'],\n                        ['Pac-Man', 'local-roms/Pac-Man (U) [!].nes'],\n                        ['Super Mario Bros.', 'local-roms/Super Mario Bros. (JU) (PRG0) [!].nes'],\n                        ['Tennis', 'local-roms/Tennis (JU) [!].nes'],\n                        ['Tetris', 'local-roms/Tetris (U) [!].nes'],\n                        ['Tetris 2', 'local-roms/Tetris 2 (U) [!].nes'],\n                        ['Zelda II - The Adventure of Link', 'local-roms/Zelda II - The Adventure of Link (U).nes']\n                    ],\n\n                    \"Nearly Working\": [\n                        ['Duck Hunt', 'local-roms/Duck Hunt (JUE) [!].nes'],\n                        ['Super Mario Bros. 3', 'local-roms/Super Mario Bros. 3 (U) (PRG1) [!].nes']\n                    ]\n                })\n            })\n        })\n    </script>\n    <!--[if IE]>\n        <script type=\"text/vbscript\" src=\"source/jsnes-ie-hacks.vbscript\"></script>\n    <![endif]-->\n\n</body>\n</html>\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/index.html",
			"file_size": 4303,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 4299,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code\nkeep intact all notices of the absence of any warranty and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/LICENSE",
			"file_size": 32471,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 32459,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var swfobject=function(){var m=\"undefined\",t=\"object\",W=\"Shockwave Flash\",bh=\"ShockwaveFlash.ShockwaveFlash\",F=\"application/x-shockwave-flash\",X=\"SWFObjectExprInst\",Y=\"onreadystatechange\",r=window,i=document,w=navigator,Z=false,G=[bi],x=[],H=[],B=[],D,I,O,ba,z=false,J=false,u,P,bb=true,f=function(){var a=typeof i.getElementById!=m&&typeof i.getElementsByTagName!=m&&typeof i.createElement!=m,c=w.userAgent.toLowerCase(),b=w.platform.toLowerCase(),d=b?/win/.test(b):/win/.test(c),g=b?/mac/.test(b):/mac/.test(c),j=/webkit/.test(c)?parseFloat(c.replace(/^.*webkit\\/(\\d+(\\.\\d+)?).*$/,\"$1\")):false,h=!+\"\\v1\",o=[0,0,0],l=nullif(typeof w.plugins!=m&&typeof w.plugins[W]==t){l=w.plugins[W].descriptionif(l&&!(typeof w.mimeTypes!=m&&w.mimeTypes[F]&&!w.mimeTypes[F].enabledPlugin)){Z=trueh=falsel=l.replace(/^.*\\s+(\\S+\\s+\\S+$)/,\"$1\")o[0]=parseInt(l.replace(/^(.*)\\..*$/,\"$1\"),10)o[1]=parseInt(l.replace(/^.*\\.(.*)\\s.*$/,\"$1\"),10)o[2]=/[a-zA-Z]/.test(l)?parseInt(l.replace(/^.*[a-zA-Z]+(.*)$/,\"$1\"),10):0}}else if(typeof r.ActiveXObject!=m){try{var q=new ActiveXObject(bh)if(q){l=q.GetVariable(\"$version\")if(l){h=truel=l.split(\" \")[1].split(\",\")o=[parseInt(l[0],10),parseInt(l[1],10),parseInt(l[2],10)]}}}catch(e){}}return{w3:a,pv:o,wk:j,ie:h,win:d,mac:g}}(),bo=function(){if(!f.w3){return}if((typeof i.readyState!=m&&i.readyState==\"complete\")||(typeof i.readyState==m&&(i.getElementsByTagName(\"body\")[0]||i.body))){C()}if(!z){if(typeof i.addEventListener!=m){i.addEventListener(\"DOMContentLoaded\",C,false)}if(f.ie&&f.win){i.attachEvent(Y,function(){if(i.readyState==\"complete\"){i.detachEvent(Y,arguments.callee)C()}})if(r==top){(function(){if(z){return}try{i.documentElement.doScroll(\"left\")}catch(e){setTimeout(arguments.callee,0)return}C()})()}}if(f.wk){(function(){if(z){return}if(!/loaded|complete/.test(i.readyState)){setTimeout(arguments.callee,0)return}C()})()}bc(C)}}()function C(){if(z){return}try{var a=i.getElementsByTagName(\"body\")[0].appendChild(y(\"span\"))a.parentNode.removeChild(a)}catch(e){return}z=truevar c=G.lengthfor(var b=0b<cb++){G[b]()}}function bd(a){if(z){a()}else{G[G.length]=a}}function bc(a){if(typeof r.addEventListener!=m){r.addEventListener(\"load\",a,false)}else if(typeof i.addEventListener!=m){i.addEventListener(\"load\",a,false)}else if(typeof r.attachEvent!=m){bj(r,\"onload\",a)}else if(typeof r.onload==\"function\"){var c=r.onloadr.onload=function(){c()a()}}else{r.onload=a}}function bi(){if(Z){bk()}else{Q()}}function bk(){var c=i.getElementsByTagName(\"body\")[0]var b=y(t)b.setAttribute(\"type\",F)var d=c.appendChild(b)if(d){var g=0(function(){if(typeof d.GetVariable!=m){var a=d.GetVariable(\"$version\")if(a){a=a.split(\" \")[1].split(\",\")f.pv=[parseInt(a[0],10),parseInt(a[1],10),parseInt(a[2],10)]}}else if(g<10){g++setTimeout(arguments.callee,10)return}c.removeChild(b)d=nullQ()})()}else{Q()}}function Q(){var a=x.lengthif(a>0){for(var c=0c<ac++){var b=x[c].idvar d=x[c].callbackFnvar g={success:false,id:b}if(f.pv[0]>0){var j=s(b)if(j){if(K(x[c].swfVersion)&&!(f.wk&&f.wk<312)){A(b,true)if(d){g.success=trueg.ref=R(b)d(g)}}else if(x[c].expressInstall&&S()){var h={}h.data=x[c].expressInstallh.width=j.getAttribute(\"width\")||\"0\"h.height=j.getAttribute(\"height\")||\"0\"if(j.getAttribute(\"class\")){h.styleclass=j.getAttribute(\"class\")}if(j.getAttribute(\"align\")){h.align=j.getAttribute(\"align\")}var o={}var l=j.getElementsByTagName(\"param\")var q=l.lengthfor(var p=0p<qp++){if(l[p].getAttribute(\"name\").toLowerCase()!=\"movie\"){o[l[p].getAttribute(\"name\")]=l[p].getAttribute(\"value\")}}T(h,o,b,d)}else{bl(j)if(d){d(g)}}}}else{A(b,true)if(d){var v=R(b)if(v&&typeof v.SetVariable!=m){g.success=trueg.ref=v}d(g)}}}}}function R(a){var c=nullvar b=s(a)if(b&&b.nodeName==\"OBJECT\"){if(typeof b.SetVariable!=m){c=b}else{var d=b.getElementsByTagName(t)[0]if(d){c=d}}}return c}function S(){return!J&&K(\"6.0.65\")&&(f.win||f.mac)&&!(f.wk&&f.wk<312)}function T(a,c,b,d){J=trueO=d||nullba={success:false,id:b}var g=s(b)if(g){if(g.nodeName==\"OBJECT\"){D=U(g)I=null}else{D=gI=b}a.id=Xif(typeof a.width==m||(!/%$/.test(a.width)&&parseInt(a.width,10)<310)){a.width=\"310\"}if(typeof a.height==m||(!/%$/.test(a.height)&&parseInt(a.height,10)<137)){a.height=\"137\"}i.title=i.title.slice(0,47)+\" - Flash Player Installation\"var j=f.ie&&f.win?\"ActiveX\":\"PlugIn\",h=\"MMredirectURL=\"+r.location.toString().replace(/&/g,\"%26\")+\"&MMplayerType=\"+j+\"&MMdoctitle=\"+i.titleif(typeof c.flashvars!=m){c.flashvars+=\"&\"+h}else{c.flashvars=h}if(f.ie&&f.win&&g.readyState!=4){var o=y(\"div\")b+=\"SWFObjectNew\"o.setAttribute(\"id\",b)g.parentNode.insertBefore(o,g)g.style.display=\"none\"(function(){if(g.readyState==4){g.parentNode.removeChild(g)}else{setTimeout(arguments.callee,10)}})()}V(a,c,b)}}function bl(a){if(f.ie&&f.win&&a.readyState!=4){var c=y(\"div\")a.parentNode.insertBefore(c,a)c.parentNode.replaceChild(U(a),c)a.style.display=\"none\"(function(){if(a.readyState==4){a.parentNode.removeChild(a)}else{setTimeout(arguments.callee,10)}})()}else{a.parentNode.replaceChild(U(a),a)}}function U(a){var c=y(\"div\")if(f.win&&f.ie){c.innerHTML=a.innerHTML}else{var b=a.getElementsByTagName(t)[0]if(b){var d=b.childNodesif(d){var g=d.lengthfor(var j=0j<gj++){if(!(d[j].nodeType==1&&d[j].nodeName==\"PARAM\")&&!(d[j].nodeType==8)){c.appendChild(d[j].cloneNode(true))}}}}}return c}function V(a,c,b){var d,g=s(b)if(f.wk&&f.wk<312){return d}if(g){if(typeof a.id==m){a.id=b}if(f.ie&&f.win){var j=\"\"for(var h in a){if(a[h]!=Object.prototype[h]){if(h.toLowerCase()==\"data\"){c.movie=a[h]}else if(h.toLowerCase()==\"styleclass\"){j+=' class=\"'+a[h]+'\"'}else if(h.toLowerCase()!=\"classid\"){j+=' '+h+'=\"'+a[h]+'\"'}}}var o=\"\"for(var l in c){if(c[l]!=Object.prototype[l]){o+='<param name=\"'+l+'\" value=\"'+c[l]+'\" />'}}g.outerHTML='<object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"'+j+'>'+o+'</object>'H[H.length]=a.idd=s(a.id)}else{var q=y(t)q.setAttribute(\"type\",F)for(var p in a){if(a[p]!=Object.prototype[p]){if(p.toLowerCase()==\"styleclass\"){q.setAttribute(\"class\",a[p])}else if(p.toLowerCase()!=\"classid\"){q.setAttribute(p,a[p])}}}for(var n in c){if(c[n]!=Object.prototype[n]&&n.toLowerCase()!=\"movie\"){bm(q,n,c[n])}}g.parentNode.replaceChild(q,g)d=q}}return d}function bm(a,c,b){var d=y(\"param\")d.setAttribute(\"name\",c)d.setAttribute(\"value\",b)a.appendChild(d)}function be(a){var c=s(a)if(c&&c.nodeName==\"OBJECT\"){if(f.ie&&f.win){c.style.display=\"none\"(function(){if(c.readyState==4){bn(a)}else{setTimeout(arguments.callee,10)}})()}else{c.parentNode.removeChild(c)}}}function bn(a){var c=s(a)if(c){for(var b in c){if(typeof c[b]==\"function\"){c[b]=null}}c.parentNode.removeChild(c)}}function s(a){var c=nulltry{c=i.getElementById(a)}catch(e){}return c}function y(a){return i.createElement(a)}function bj(a,c,b){a.attachEvent(c,b)B[B.length]=[a,c,b]}function K(a){var c=f.pv,b=a.split(\".\")b[0]=parseInt(b[0],10)b[1]=parseInt(b[1],10)||0b[2]=parseInt(b[2],10)||0return(c[0]>b[0]||(c[0]==b[0]&&c[1]>b[1])||(c[0]==b[0]&&c[1]==b[1]&&c[2]>=b[2]))?true:false}function bf(a,c,b,d){if(f.ie&&f.mac){return}var g=i.getElementsByTagName(\"head\")[0]if(!g){return}var j=(b&&typeof b==\"string\")?b:\"screen\"if(d){u=nullP=null}if(!u||P!=j){var h=y(\"style\")h.setAttribute(\"type\",\"text/css\")h.setAttribute(\"media\",j)u=g.appendChild(h)if(f.ie&&f.win&&typeof i.styleSheets!=m&&i.styleSheets.length>0){u=i.styleSheets[i.styleSheets.length-1]}P=j}if(f.ie&&f.win){if(u&&typeof u.addRule==t){u.addRule(a,c)}}else{if(u&&typeof i.createTextNode!=m){u.appendChild(i.createTextNode(a+\" {\"+c+\"}\"))}}}function A(a,c){if(!bb){return}var b=c?\"visible\":\"hidden\"if(z&&s(a)){s(a).style.visibility=b}else{bf(\"#\"+a,\"visibility:\"+b)}}function bg(a){var c=/[\\\\\\\"<>\\.]/var b=c.exec(a)!=nullreturn b&&typeof encodeURIComponent!=m?encodeURIComponent(a):a}var bp=function(){if(f.ie&&f.win){window.attachEvent(\"onunload\",function(){var a=B.lengthfor(var c=0c<ac++){B[c][0].detachEvent(B[c][1],B[c][2])}var b=H.lengthfor(var d=0d<bd++){be(H[d])}for(var g in f){f[g]=null}f=nullfor(var j in swfobject){swfobject[j]=null}swfobject=null})}}()return{registerObject:function(a,c,b,d){if(f.w3&&a&&c){var g={}g.id=ag.swfVersion=cg.expressInstall=bg.callbackFn=dx[x.length]=gA(a,false)}else if(d){d({success:false,id:a})}},getObjectById:function(a){if(f.w3){return R(a)}},embedSWF:function(j,h,o,l,q,p,v,L,M,E){var N={success:false,id:h}if(f.w3&&!(f.wk&&f.wk<312)&&j&&h&&o&&l&&q){A(h,false)bd(function(){o+=\"\"l+=\"\"var a={}if(M&&typeof M===t){for(var c in M){a[c]=M[c]}}a.data=ja.width=oa.height=lvar b={}if(L&&typeof L===t){for(var d in L){b[d]=L[d]}}if(v&&typeof v===t){for(var k in v){if(typeof b.flashvars!=m){b.flashvars+=\"&\"+k+\"=\"+v[k]}else{b.flashvars=k+\"=\"+v[k]}}}if(K(q)){var g=V(a,b,h)if(a.id==h){A(h,true)}N.success=trueN.ref=g}else if(p&&S()){a.data=pT(a,b,h,E)return}else{A(h,true)}if(E){E(N)}})}else if(E){E(N)}},switchOffAutoHideShow:function(){bb=false},ua:f,getFlashPlayerVersion:function(){return{major:f.pv[0],minor:f.pv[1],release:f.pv[2]}},hasFlashPlayerVersion:K,createSWF:function(a,c,b){if(f.w3){return V(a,c,b)}else{return undefined}},showExpressInstall:function(a,c,b,d){if(f.w3&&S()){T(a,c,b,d)}},removeSWF:function(a){if(f.w3){be(a)}},createCSS:function(a,c,b,d){if(f.w3){bf(a,c,b,d)}},addDomLoadEvent:bd,addLoadEvent:bc,getQueryParamValue:function(a){var c=i.location.search||i.location.hashif(c){if(/\\?/.test(c)){c=c.split(\"?\")[1]}if(a==null){return bg(c)}var b=c.split(\"&\")for(var d=0d<b.lengthd++){if(b[d].substring(0,b[d].indexOf(\"=\"))==a){return bg(b[d].substring((b[d].indexOf(\"=\")+1)))}}}return\"\"},expressInstallCallback:function(){if(J){var a=s(X)if(a&&D){a.parentNode.replaceChild(D,a)if(I){A(I,true)if(f.ie&&f.win){D.style.display=\"block\"}}if(O){O(ba)}}J=false}}}}()function DynamicAudio(a){if(this instanceof arguments.callee){if(typeof this.init==\"function\"){this.init.apply(this,(a&&a.callee)?a:arguments)}}else{return new arguments.callee(arguments)}}DynamicAudio.nextId=1DynamicAudio.prototype={nextId:null,swf:'dynamicaudio.swf',audioElement:null,flashWrapper:null,flashElement:null,init:function(c){var b=thisb.id=DynamicAudio.nextId++if(c&&typeof c['swf']!='undefined'){b.swf=c['swf']}if(typeof Audio!='undefined'){b.audioElement=new Audio()if(b.audioElement.mozSetup){b.audioElement.mozSetup(2,44100,1)return}}b.audioElement=nullb.flashWrapper=document.createElement('div')b.flashWrapper.id='dynamicaudio-flashwrapper-'+b.idvar d=b.flashWrapper.styled['position']='fixed'd['width']=d['height']='8px'd['bottom']=d['left']='0px'd['overflow']='hidden'b.flashElement=document.createElement('div')b.flashElement.id='dynamicaudio-flashelement-'+b.idb.flashWrapper.appendChild(b.flashElement)document.body.appendChild(b.flashWrapper)swfobject.embedSWF(b.swf,b.flashElement.id,\"8\",\"8\",\"9.0.0\",null,null,{'allowScriptAccess':'always'},null,function(a){b.flashElement=a.ref})},write:function(a){if(this.audioElement!=null){this.audioElement.mozWriteAudio(a.length,a)}else if(this.flashElement!=null){var c=new Array(a.length)for(var b=a.length-1b!=0b--){c[b]=Math.floor(a[b]*32768)}this.flashElement.write(c.join(' '))}},writeInt:function(a){if(this.audioElement!=null){var c=new Array(a.length)for(var b=a.length-1b!=0b--){c[b]=Math.floor(a[b]/32768)}this.audioElement.mozWriteAudio(c.length,c)}else if(this.flashElement!=null){this.flashElement.write(a.join(' '))}}}",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/lib/dynamicaudio-min.js",
			"file_size": 11393,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 11219,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin!\n * jQuery JavaScript Library v1.4.2\n * http://jquery.com/\n *\n * Copyright 2010, John Resig\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http://jquery.org/license\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n * Copyright 2010, The Dojo Foundation\n * Released under the MIT, BSD, and GPL Licenses.\n *\n * Date: Sat Feb 13 22:33:48 2010 -0500\n =end\n(function(A,w){function ma(){if(!c.isReady){try{s.documentElement.doScroll(\"left\")}catch(a){setTimeout(ma,1)return}c.ready()}}function Qa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:\"script\"}):c.globalEval(b.text||b.textContent||b.innerHTML||\"\")b.parentNode&&b.parentNode.removeChild(b)}function X(a,b,d,f,e,j){var i=a.lengthif(typeof b===\"object\"){for(var o in b)X(a,o,b[o],f,e,d)return a}if(d!==w){f=!j&&f&&c.isFunction(d)for(o=0o<io++)e(a[o],b,f?d.call(a[o],o,e(a[o],b)):d,j)return a}return i?\ne(a[0],b):w}function J(){return(new Date).getTime()}function Y(){return false}function Z(){return true}function na(a,b,d){d[0].type=areturn c.event.handle.apply(b,d)}function oa(a){var b,d=[],f=[],e=arguments,j,i,o,k,n,ri=c.data(this,\"events\")if(!(a.liveFired===this||!i||!i.live||a.button&&a.type===\"click\")){a.liveFired=thisvar u=i.live.slice(0)for(k=0k<u.lengthk++){i=u[k]i.origType.replace(O,\"\")===a.type?f.push(i.selector):u.splice(k--,1)}j=c(a.target).closest(f,a.currentTarget)n=0for(r=\nj.lengthn<rn++)for(k=0k<u.lengthk++){i=u[k]if(j[n].selector===i.selector){o=j[n].elemf=nullif(i.preType===\"mouseenter\"||i.preType===\"mouseleave\")f=c(a.relatedTarget).closest(i.selector)[0]if(!f||f!==o)d.push({elem:o,handleObj:i})}}n=0for(r=d.lengthn<rn++){j=d[n]a.currentTarget=j.elema.data=j.handleObj.dataa.handleObj=j.handleObjif(j.handleObj.origHandler.apply(j.elem,e)===false){b=falsebreak}}return b}}function pa(a,b){return\"live.\"+(a&&a!==\"*\"?a+\".\":\"\")+b.replace(/\\./g,\"`\").replace(/ /g,\n\"&\")}function qa(a){return!a||!a.parentNode||a.parentNode.nodeType===11}function ra(a,b){var d=0b.each(function(){if(this.nodeName===(a[d]&&a[d].nodeName)){var f=c.data(a[d++]),e=c.data(this,f)if(f=f&&f.events){delete e.handlee.events={}for(var j in f)for(var i in f[j])c.event.add(this,j,f[j][i],f[j][i].data)}}})}function sa(a,b,d){var f,e,jb=b&&b[0]?b[0].ownerDocument||b[0]:sif(a.length===1&&typeof a[0]===\"string\"&&a[0].length<512&&b===s&&!ta.test(a[0])&&(c.support.checkClone||!ua.test(a[0]))){e=\ntrueif(j=c.fragments[a[0]])if(j!==1)f=j}if(!f){f=b.createDocumentFragment()c.clean(a,b,f,d)}if(e)c.fragments[a[0]]=j?f:1return{fragment:f,cacheable:e}}function K(a,b){var d={}c.each(va.concat.apply([],va.slice(0,b)),function(){d[this]=a})return d}function wa(a){return\"scrollTo\"in a&&a.document?a:a.nodeType===9?a.defaultView||a.parentWindow:false}var c=function(a,b){return new c.fn.init(a,b)},Ra=A.jQuery,Sa=A.$,s=A.document,T,Ta=/^[^<]*(<[\\w\\W]+>)[^>]*$|^#([\\w-]+)$/,Ua=/^.[^:#\\[\\.,]*$/,Va=/\\S/,\nWa=/^(\\s|\\u00A0)+|(\\s|\\u00A0)+$/g,Xa=/^<(\\w+)\\s*\\/?>(?:<\\/\\1>)?$/,P=navigator.userAgent,xa=false,Q=[],L,$=Object.prototype.toString,aa=Object.prototype.hasOwnProperty,ba=Array.prototype.push,R=Array.prototype.slice,ya=Array.prototype.indexOfc.fn=c.prototype={init:function(a,b){var d,fif(!a)return thisif(a.nodeType){this.context=this[0]=athis.length=1return this}if(a===\"body\"&&!b){this.context=sthis[0]=s.bodythis.selector=\"body\"this.length=1return this}if(typeof a===\"string\")if((d=Ta.exec(a))&&\n(d[1]||!b))if(d[1]){f=b?b.ownerDocument||b:sif(a=Xa.exec(a))if(c.isPlainObject(b)){a=[s.createElement(a[1])]c.fn.attr.call(a,b,true)}else a=[f.createElement(a[1])]else{a=sa([d[1]],[f])a=(a.cacheable?a.fragment.cloneNode(true):a.fragment).childNodes}return c.merge(this,a)}else{if(b=s.getElementById(d[2])){if(b.id!==d[2])return T.find(a)this.length=1this[0]=b}this.context=sthis.selector=areturn this}else if(!b&&/^\\w+$/.test(a)){this.selector=athis.context=sa=s.getElementsByTagName(a)return c.merge(this,\na)}else return!b||b.jquery?(b||T).find(a):c(b).find(a)else if(c.isFunction(a))return T.ready(a)if(a.selector!==w){this.selector=a.selectorthis.context=a.context}return c.makeArray(a,this)},selector:\"\",jquery:\"1.4.2\",length:0,size:function(){return this.length},toArray:function(){return R.call(this,0)},get:function(a){return a==null?this.toArray():a<0?this.slice(a)[0]:this[a]},pushStack:function(a,b,d){var f=c()c.isArray(a)?ba.apply(f,a):c.merge(f,a)f.prevObject=thisf.context=this.contextif(b===\n\"find\")f.selector=this.selector+(this.selector?\" \":\"\")+delse if(b)f.selector=this.selector+\".\"+b+\"(\"+d+\")\"return f},each:function(a,b){return c.each(this,a,b)},ready:function(a){c.bindReady()if(c.isReady)a.call(s,c)else Q&&Q.push(a)return this},eq:function(a){return a===-1?this.slice(a):this.slice(a,+a+1)},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return this.pushStack(R.apply(this,arguments),\"slice\",R.call(arguments).join(\",\"))},map:function(a){return this.pushStack(c.map(this,\nfunction(b,d){return a.call(b,d,b)}))},end:function(){return this.prevObject||c(null)},push:ba,sort:[].sort,splice:[].splice}c.fn.init.prototype=c.fnc.extend=c.fn.extend=function(){var a=arguments[0]||{},b=1,d=arguments.length,f=false,e,j,i,oif(typeof a===\"boolean\"){f=aa=arguments[1]||{}b=2}if(typeof a!==\"object\"&&!c.isFunction(a))a={}if(d===b){a=this--b}for(b<db++)if((e=arguments[b])!=null)for(j in e){i=a[j]o=e[j]if(a!==o)if(f&&o&&(c.isPlainObject(o)||c.isArray(o))){i=i&&(c.isPlainObject(i)||\nc.isArray(i))?i:c.isArray(o)?[]:{}a[j]=c.extend(f,i,o)}else if(o!==w)a[j]=o}return a}c.extend({noConflict:function(a){A.$=Saif(a)A.jQuery=Rareturn c},isReady:false,ready:function(){if(!c.isReady){if(!s.body)return setTimeout(c.ready,13)c.isReady=trueif(Q){for(var a,b=0a=Q[b++])a.call(s,c)Q=null}c.fn.triggerHandler&&c(s).triggerHandler(\"ready\")}},bindReady:function(){if(!xa){xa=trueif(s.readyState===\"complete\")return c.ready()if(s.addEventListener){s.addEventListener(\"DOMContentLoaded\",\nL,false)A.addEventListener(\"load\",c.ready,false)}else if(s.attachEvent){s.attachEvent(\"onreadystatechange\",L)A.attachEvent(\"onload\",c.ready)var a=falsetry{a=A.frameElement==null}catch(b){}s.documentElement.doScroll&&a&&ma()}}},isFunction:function(a){return $.call(a)===\"[object Function]\"},isArray:function(a){return $.call(a)===\"[object Array]\"},isPlainObject:function(a){if(!a||$.call(a)!==\"[object Object]\"||a.nodeType||a.setInterval)return falseif(a.constructor&&!aa.call(a,\"constructor\")&&!aa.call(a.constructor.prototype,\n\"isPrototypeOf\"))return falsevar bfor(b in a)return b===w||aa.call(a,b)},isEmptyObject:function(a){for(var b in a)return falsereturn true},error:function(a){throw a},parseJSON:function(a){if(typeof a!==\"string\"||!a)return nulla=c.trim(a)if(/^[\\],:{}\\s]*$/.test(a.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g,\"@\").replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g,\"]\").replace(/(?:^|:|,)(?:\\s*\\[)+/g,\"\")))return A.JSON&&A.JSON.parse?A.JSON.parse(a):(new Function(\"return \"+\na))()else c.error(\"Invalid JSON: \"+a)},noop:function(){},globalEval:function(a){if(a&&Va.test(a)){var b=s.getElementsByTagName(\"head\")[0]||s.documentElement,d=s.createElement(\"script\")d.type=\"text/javascript\"if(c.support.scriptEval)d.appendChild(s.createTextNode(a))else d.text=ab.insertBefore(d,b.firstChild)b.removeChild(d)}},nodeName:function(a,b){return a.nodeName&&a.nodeName.toUpperCase()===b.toUpperCase()},each:function(a,b,d){var f,e=0,j=a.length,i=j===w||c.isFunction(a)if(d)if(i)for(f in a){if(b.apply(a[f],\nd)===false)break}else for(e<j){if(b.apply(a[e++],d)===false)break}else if(i)for(f in a){if(b.call(a[f],f,a[f])===false)break}else for(d=a[0]e<j&&b.call(d,e,d)!==falsed=a[++e])return a},trim:function(a){return(a||\"\").replace(Wa,\"\")},makeArray:function(a,b){b=b||[]if(a!=null)a.length==null||typeof a===\"string\"||c.isFunction(a)||typeof a!==\"function\"&&a.setInterval?ba.call(b,a):c.merge(b,a)return b},inArray:function(a,b){if(b.indexOf)return b.indexOf(a)for(var d=0,f=b.lengthd<fd++)if(b[d]===\na)return dreturn-1},merge:function(a,b){var d=a.length,f=0if(typeof b.length===\"number\")for(var e=b.lengthf<ef++)a[d++]=b[f]else for(b[f]!==w)a[d++]=b[f++]a.length=dreturn a},grep:function(a,b,d){for(var f=[],e=0,j=a.lengthe<je++)!d!==!b(a[e],e)&&f.push(a[e])return f},map:function(a,b,d){for(var f=[],e,j=0,i=a.lengthj<ij++){e=b(a[j],j,d)if(e!=null)f[f.length]=e}return f.concat.apply([],f)},guid:1,proxy:function(a,b,d){if(arguments.length===2)if(typeof b===\"string\"){d=aa=d[b]b=w}else if(b&&\n!c.isFunction(b)){d=bb=w}if(!b&&a)b=function(){return a.apply(d||this,arguments)}if(a)b.guid=a.guid=a.guid||b.guid||c.guid++return b},uaMatch:function(a){a=a.toLowerCase()a=/(webkit)[ \\/]([\\w.]+)/.exec(a)||/(opera)(?:.*version)?[ \\/]([\\w.]+)/.exec(a)||/(msie) ([\\w.]+)/.exec(a)||!/compatible/.test(a)&&/(mozilla)(?:.*? rv:([\\w.]+))?/.exec(a)||[]return{browser:a[1]||\"\",version:a[2]||\"0\"}},browser:{}})P=c.uaMatch(P)if(P.browser){c.browser[P.browser]=truec.browser.version=P.version}if(c.browser.webkit)c.browser.safari=\ntrueif(ya)c.inArray=function(a,b){return ya.call(b,a)}T=c(s)if(s.addEventListener)L=function(){s.removeEventListener(\"DOMContentLoaded\",L,false)c.ready()}else if(s.attachEvent)L=function(){if(s.readyState===\"complete\"){s.detachEvent(\"onreadystatechange\",L)c.ready()}}(function(){c.support={}var a=s.documentElement,b=s.createElement(\"script\"),d=s.createElement(\"div\"),f=\"script\"+J()d.style.display=\"none\"d.innerHTML=\"   <link/><table></table><a href='/a' style='color:redfloat:leftopacity:.55'>a</a><input type='checkbox'/>\"\nvar e=d.getElementsByTagName(\"*\"),j=d.getElementsByTagName(\"a\")[0]if(!(!e||!e.length||!j)){c.support={leadingWhitespace:d.firstChild.nodeType===3,tbody:!d.getElementsByTagName(\"tbody\").length,htmlSerialize:!!d.getElementsByTagName(\"link\").length,style:/red/.test(j.getAttribute(\"style\")),hrefNormalized:j.getAttribute(\"href\")===\"/a\",opacity:/^0.55$/.test(j.style.opacity),cssFloat:!!j.style.cssFloat,checkOn:d.getElementsByTagName(\"input\")[0].value===\"on\",optSelected:s.createElement(\"select\").appendChild(s.createElement(\"option\")).selected,\nparentNode:d.removeChild(d.appendChild(s.createElement(\"div\"))).parentNode===null,deleteExpando:true,checkClone:false,scriptEval:false,noCloneEvent:true,boxModel:null}b.type=\"text/javascript\"try{b.appendChild(s.createTextNode(\"window.\"+f+\"=1\"))}catch(i){}a.insertBefore(b,a.firstChild)if(A[f]){c.support.scriptEval=truedelete A[f]}try{delete b.test}catch(o){c.support.deleteExpando=false}a.removeChild(b)if(d.attachEvent&&d.fireEvent){d.attachEvent(\"onclick\",function k(){c.support.noCloneEvent=\nfalsed.detachEvent(\"onclick\",k)})d.cloneNode(true).fireEvent(\"onclick\")}d=s.createElement(\"div\")d.innerHTML=\"<input type='radio' name='radiotest' checked='checked'/>\"a=s.createDocumentFragment()a.appendChild(d.firstChild)c.support.checkClone=a.cloneNode(true).cloneNode(true).lastChild.checkedc(function(){var k=s.createElement(\"div\")k.style.width=k.style.paddingLeft=\"1px\"s.body.appendChild(k)c.boxModel=c.support.boxModel=k.offsetWidth===2s.body.removeChild(k).style.display=\"none\"})a=function(k){var n=\ns.createElement(\"div\")k=\"on\"+kvar r=k in nif(!r){n.setAttribute(k,\"return\")r=typeof n[k]===\"function\"}return r}c.support.submitBubbles=a(\"submit\")c.support.changeBubbles=a(\"change\")a=b=d=e=j=null}})()c.props={\"for\":\"htmlFor\",\"class\":\"className\",readonly:\"readOnly\",maxlength:\"maxLength\",cellspacing:\"cellSpacing\",rowspan:\"rowSpan\",colspan:\"colSpan\",tabindex:\"tabIndex\",usemap:\"useMap\",frameborder:\"frameBorder\"}var G=\"jQuery\"+J(),Ya=0,za={}c.extend({cache:{},expando:G,noData:{embed:true,object:true,\napplet:true},data:function(a,b,d){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:avar f=a[G],e=c.cacheif(!f&&typeof b===\"string\"&&d===w)return nullf||(f=++Ya)if(typeof b===\"object\"){a[G]=fe[f]=c.extend(true,{},b)}else if(!e[f]){a[G]=fe[f]={}}a=e[f]if(d!==w)a[b]=dreturn typeof b===\"string\"?a[b]:a}},removeData:function(a,b){if(!(a.nodeName&&c.noData[a.nodeName.toLowerCase()])){a=a==A?za:avar d=a[G],f=c.cache,e=f[d]if(b){if(e){delete e[b]c.isEmptyObject(e)&&c.removeData(a)}}else{if(c.support.deleteExpando)delete a[c.expando]\nelse a.removeAttribute&&a.removeAttribute(c.expando)delete f[d]}}}})c.fn.extend({data:function(a,b){if(typeof a===\"undefined\"&&this.length)return c.data(this[0])else if(typeof a===\"object\")return this.each(function(){c.data(this,a)})var d=a.split(\".\")d[1]=d[1]?\".\"+d[1]:\"\"if(b===w){var f=this.triggerHandler(\"getData\"+d[1]+\"!\",[d[0]])if(f===w&&this.length)f=c.data(this[0],a)return f===w&&d[1]?this.data(d[0]):f}else return this.trigger(\"setData\"+d[1]+\"!\",[d[0],b]).each(function(){c.data(this,\na,b)})},removeData:function(a){return this.each(function(){c.removeData(this,a)})}})c.extend({queue:function(a,b,d){if(a){b=(b||\"fx\")+\"queue\"var f=c.data(a,b)if(!d)return f||[]if(!f||c.isArray(d))f=c.data(a,b,c.makeArray(d))else f.push(d)return f}},dequeue:function(a,b){b=b||\"fx\"var d=c.queue(a,b),f=d.shift()if(f===\"inprogress\")f=d.shift()if(f){b===\"fx\"&&d.unshift(\"inprogress\")f.call(a,function(){c.dequeue(a,b)})}}})c.fn.extend({queue:function(a,b){if(typeof a!==\"string\"){b=aa=\"fx\"}if(b===\nw)return c.queue(this[0],a)return this.each(function(){var d=c.queue(this,a,b)a===\"fx\"&&d[0]!==\"inprogress\"&&c.dequeue(this,a)})},dequeue:function(a){return this.each(function(){c.dequeue(this,a)})},delay:function(a,b){a=c.fx?c.fx.speeds[a]||a:ab=b||\"fx\"return this.queue(b,function(){var d=thissetTimeout(function(){c.dequeue(d,b)},a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])}})var Aa=/[\\n\\t]/g,ca=/\\s+/,Za=/\\r/g,$a=/href|src|style/,ab=/(button|input)/i,bb=/(button|input|object|select|textarea)/i,\ncb=/^(a|area)$/i,Ba=/radio|checkbox/c.fn.extend({attr:function(a,b){return X(this,a,b,true,c.attr)},removeAttr:function(a){return this.each(function(){c.attr(this,a,\"\")this.nodeType===1&&this.removeAttribute(a)})},addClass:function(a){if(c.isFunction(a))return this.each(function(n){var r=c(this)r.addClass(a.call(this,n,r.attr(\"class\")))})if(a&&typeof a===\"string\")for(var b=(a||\"\").split(ca),d=0,f=this.lengthd<fd++){var e=this[d]if(e.nodeType===1)if(e.className){for(var j=\" \"+e.className+\" \",\ni=e.className,o=0,k=b.lengtho<ko++)if(j.indexOf(\" \"+b[o]+\" \")<0)i+=\" \"+b[o]e.className=c.trim(i)}else e.className=a}return this},removeClass:function(a){if(c.isFunction(a))return this.each(function(k){var n=c(this)n.removeClass(a.call(this,k,n.attr(\"class\")))})if(a&&typeof a===\"string\"||a===w)for(var b=(a||\"\").split(ca),d=0,f=this.lengthd<fd++){var e=this[d]if(e.nodeType===1&&e.className)if(a){for(var j=(\" \"+e.className+\" \").replace(Aa,\" \"),i=0,o=b.lengthi<oi++)j=j.replace(\" \"+b[i]+\" \",\n\" \")e.className=c.trim(j)}else e.className=\"\"}return this},toggleClass:function(a,b){var d=typeof a,f=typeof b===\"boolean\"if(c.isFunction(a))return this.each(function(e){var j=c(this)j.toggleClass(a.call(this,e,j.attr(\"class\"),b),b)})return this.each(function(){if(d===\"string\")for(var e,j=0,i=c(this),o=b,k=a.split(ca)e=k[j++]){o=f?o:!i.hasClass(e)i[o?\"addClass\":\"removeClass\"](e)}else if(d===\"undefined\"||d===\"boolean\"){this.className&&c.data(this,\"__className__\",this.className)this.className=\nthis.className||a===false?\"\":c.data(this,\"__className__\")||\"\"}})},hasClass:function(a){a=\" \"+a+\" \"for(var b=0,d=this.lengthb<db++)if((\" \"+this[b].className+\" \").replace(Aa,\" \").indexOf(a)>-1)return truereturn false},val:function(a){if(a===w){var b=this[0]if(b){if(c.nodeName(b,\"option\"))return(b.attributes.value||{}).specified?b.value:b.textif(c.nodeName(b,\"select\")){var d=b.selectedIndex,f=[],e=b.optionsb=b.type===\"select-one\"if(d<0)return nullvar j=b?d:0for(d=b?d+1:e.lengthj<dj++){var i=\ne[j]if(i.selected){a=c(i).val()if(b)return af.push(a)}}return f}if(Ba.test(b.type)&&!c.support.checkOn)return b.getAttribute(\"value\")===null?\"on\":b.valuereturn(b.value||\"\").replace(Za,\"\")}return w}var o=c.isFunction(a)return this.each(function(k){var n=c(this),r=aif(this.nodeType===1){if(o)r=a.call(this,k,n.val())if(typeof r===\"number\")r+=\"\"if(c.isArray(r)&&Ba.test(this.type))this.checked=c.inArray(n.val(),r)>=0else if(c.nodeName(this,\"select\")){var u=c.makeArray(r)c(\"option\",this).each(function(){this.selected=\nc.inArray(c(this).val(),u)>=0})if(!u.length)this.selectedIndex=-1}else this.value=r}})}})c.extend({attrFn:{val:true,css:true,html:true,text:true,data:true,width:true,height:true,offset:true},attr:function(a,b,d,f){if(!a||a.nodeType===3||a.nodeType===8)return wif(f&&b in c.attrFn)return c(a)[b](d)f=a.nodeType!==1||!c.isXMLDoc(a)var e=d!==wb=f&&c.props[b]||bif(a.nodeType===1){var j=$a.test(b)if(b in a&&f&&!j){if(e){b===\"type\"&&ab.test(a.nodeName)&&a.parentNode&&c.error(\"type property can't be changed\")\na[b]=d}if(c.nodeName(a,\"form\")&&a.getAttributeNode(b))return a.getAttributeNode(b).nodeValueif(b===\"tabIndex\")return(b=a.getAttributeNode(\"tabIndex\"))&&b.specified?b.value:bb.test(a.nodeName)||cb.test(a.nodeName)&&a.href?0:wreturn a[b]}if(!c.support.style&&f&&b===\"style\"){if(e)a.style.cssText=\"\"+dreturn a.style.cssText}e&&a.setAttribute(b,\"\"+d)a=!c.support.hrefNormalized&&f&&j?a.getAttribute(b,2):a.getAttribute(b)return a===null?w:a}return c.style(a,b,d)}})var O=/\\.(.*)$/,db=function(a){return a.replace(/[^\\w\\s\\.\\|`]/g,\nfunction(b){return\"\\\\\"+b})}c.event={add:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){if(a.setInterval&&a!==A&&!a.frameElement)a=Avar e,jif(d.handler){e=dd=e.handler}if(!d.guid)d.guid=c.guid++if(j=c.data(a)){var i=j.events=j.events||{},o=j.handleif(!o)j.handle=o=function(){return typeof c!==\"undefined\"&&!c.event.triggered?c.event.handle.apply(o.elem,arguments):w}o.elem=ab=b.split(\" \")for(var k,n=0,rk=b[n++]){j=e?c.extend({},e):{handler:d,data:f}if(k.indexOf(\".\")>-1){r=k.split(\".\")\nk=r.shift()j.namespace=r.slice(0).sort().join(\".\")}else{r=[]j.namespace=\"\"}j.type=kj.guid=d.guidvar u=i[k],z=c.event.special[k]||{}if(!u){u=i[k]=[]if(!z.setup||z.setup.call(a,f,r,o)===false)if(a.addEventListener)a.addEventListener(k,o,false)else a.attachEvent&&a.attachEvent(\"on\"+k,o)}if(z.add){z.add.call(a,j)if(!j.handler.guid)j.handler.guid=d.guid}u.push(j)c.event.global[k]=true}a=null}}},global:{},remove:function(a,b,d,f){if(!(a.nodeType===3||a.nodeType===8)){var e,j=0,i,o,k,n,r,u,z=c.data(a),\nC=z&&z.eventsif(z&&C){if(b&&b.type){d=b.handlerb=b.type}if(!b||typeof b===\"string\"&&b.charAt(0)===\".\"){b=b||\"\"for(e in C)c.event.remove(a,e+b)}else{for(b=b.split(\" \")e=b[j++]){n=ei=e.indexOf(\".\")<0o=[]if(!i){o=e.split(\".\")e=o.shift()k=new RegExp(\"(^|\\\\.)\"+c.map(o.slice(0).sort(),db).join(\"\\\\.(?:.*\\\\.)?\")+\"(\\\\.|$)\")}if(r=C[e])if(d){n=c.event.special[e]||{}for(B=f||0B<r.lengthB++){u=r[B]if(d.guid===u.guid){if(i||k.test(u.namespace)){f==null&&r.splice(B--,1)n.remove&&n.remove.call(a,u)}if(f!=\nnull)break}}if(r.length===0||f!=null&&r.length===1){if(!n.teardown||n.teardown.call(a,o)===false)Ca(a,e,z.handle)delete C[e]}}else for(var B=0B<r.lengthB++){u=r[B]if(i||k.test(u.namespace)){c.event.remove(a,n,u.handler,B)r.splice(B--,1)}}}if(c.isEmptyObject(C)){if(b=z.handle)b.elem=nulldelete z.eventsdelete z.handlec.isEmptyObject(z)&&c.removeData(a)}}}}},trigger:function(a,b,d,f){var e=a.type||aif(!f){a=typeof a===\"object\"?a[G]?a:c.extend(c.Event(e),a):c.Event(e)if(e.indexOf(\"!\")>=0){a.type=\ne=e.slice(0,-1)a.exclusive=true}if(!d){a.stopPropagation()c.event.global[e]&&c.each(c.cache,function(){this.events&&this.events[e]&&c.event.trigger(a,b,this.handle.elem)})}if(!d||d.nodeType===3||d.nodeType===8)return wa.result=wa.target=db=c.makeArray(b)b.unshift(a)}a.currentTarget=d(f=c.data(d,\"handle\"))&&f.apply(d,b)f=d.parentNode||d.ownerDocumenttry{if(!(d&&d.nodeName&&c.noData[d.nodeName.toLowerCase()]))if(d[\"on\"+e]&&d[\"on\"+e].apply(d,b)===false)a.result=false}catch(j){}if(!a.isPropagationStopped()&&\nf)c.event.trigger(a,b,f,true)else if(!a.isDefaultPrevented()){f=a.targetvar i,o=c.nodeName(f,\"a\")&&e===\"click\",k=c.event.special[e]||{}if((!k._default||k._default.call(d,a)===false)&&!o&&!(f&&f.nodeName&&c.noData[f.nodeName.toLowerCase()])){try{if(f[e]){if(i=f[\"on\"+e])f[\"on\"+e]=nullc.event.triggered=truef[e]()}}catch(n){}if(i)f[\"on\"+e]=ic.event.triggered=false}}},handle:function(a){var b,d,f,ea=arguments[0]=c.event.fix(a||A.event)a.currentTarget=thisb=a.type.indexOf(\".\")<0&&!a.exclusive\nif(!b){d=a.type.split(\".\")a.type=d.shift()f=new RegExp(\"(^|\\\\.)\"+d.slice(0).sort().join(\"\\\\.(?:.*\\\\.)?\")+\"(\\\\.|$)\")}e=c.data(this,\"events\")d=e[a.type]if(e&&d){d=d.slice(0)e=0for(var j=d.lengthe<je++){var i=d[e]if(b||f.test(i.namespace)){a.handler=i.handlera.data=i.dataa.handleObj=ii=i.handler.apply(this,arguments)if(i!==w){a.result=iif(i===false){a.preventDefault()a.stopPropagation()}}if(a.isImmediatePropagationStopped())break}}}return a.result},props:\"altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY originalTarget pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which\".split(\" \"),\nfix:function(a){if(a[G])return avar b=aa=c.Event(b)for(var d=this.props.length,fd){f=this.props[--d]a[f]=b[f]}if(!a.target)a.target=a.srcElement||sif(a.target.nodeType===3)a.target=a.target.parentNodeif(!a.relatedTarget&&a.fromElement)a.relatedTarget=a.fromElement===a.target?a.toElement:a.fromElementif(a.pageX==null&&a.clientX!=null){b=s.documentElementd=s.bodya.pageX=a.clientX+(b&&b.scrollLeft||d&&d.scrollLeft||0)-(b&&b.clientLeft||d&&d.clientLeft||0)a.pageY=a.clientY+(b&&b.scrollTop||\nd&&d.scrollTop||0)-(b&&b.clientTop||d&&d.clientTop||0)}if(!a.which&&(a.charCode||a.charCode===0?a.charCode:a.keyCode))a.which=a.charCode||a.keyCodeif(!a.metaKey&&a.ctrlKey)a.metaKey=a.ctrlKeyif(!a.which&&a.button!==w)a.which=a.button&1?1:a.button&2?3:a.button&4?2:0return a},guid:1E8,proxy:c.proxy,special:{ready:{setup:c.bindReady,teardown:c.noop},live:{add:function(a){c.event.add(this,a.origType,c.extend({},a,{handler:oa}))},remove:function(a){var b=true,d=a.origType.replace(O,\"\")c.each(c.data(this,\n\"events\").live||[],function(){if(d===this.origType.replace(O,\"\"))return b=false})b&&c.event.remove(this,a.origType,oa)}},beforeunload:{setup:function(a,b,d){if(this.setInterval)this.onbeforeunload=dreturn false},teardown:function(a,b){if(this.onbeforeunload===b)this.onbeforeunload=null}}}}var Ca=s.removeEventListener?function(a,b,d){a.removeEventListener(b,d,false)}:function(a,b,d){a.detachEvent(\"on\"+b,d)}c.Event=function(a){if(!this.preventDefault)return new c.Event(a)if(a&&a.type){this.originalEvent=\nathis.type=a.type}else this.type=athis.timeStamp=J()this[G]=true}c.Event.prototype={preventDefault:function(){this.isDefaultPrevented=Zvar a=this.originalEventif(a){a.preventDefault&&a.preventDefault()a.returnValue=false}},stopPropagation:function(){this.isPropagationStopped=Zvar a=this.originalEventif(a){a.stopPropagation&&a.stopPropagation()a.cancelBubble=true}},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=Zthis.stopPropagation()},isDefaultPrevented:Y,isPropagationStopped:Y,\nisImmediatePropagationStopped:Y}var Da=function(a){var b=a.relatedTargettry{for(b&&b!==this)b=b.parentNodeif(b!==this){a.type=a.datac.event.handle.apply(this,arguments)}}catch(d){}},Ea=function(a){a.type=a.datac.event.handle.apply(this,arguments)}c.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(a,b){c.event.special[a]={setup:function(d){c.event.add(this,b,d&&d.selector?Ea:Da,a)},teardown:function(d){c.event.remove(this,b,d&&d.selector?Ea:Da)}}})if(!c.support.submitBubbles)c.event.special.submit=\n{setup:function(){if(this.nodeName.toLowerCase()!==\"form\"){c.event.add(this,\"click.specialSubmit\",function(a){var b=a.target,d=b.typeif((d===\"submit\"||d===\"image\")&&c(b).closest(\"form\").length)return na(\"submit\",this,arguments)})c.event.add(this,\"keypress.specialSubmit\",function(a){var b=a.target,d=b.typeif((d===\"text\"||d===\"password\")&&c(b).closest(\"form\").length&&a.keyCode===13)return na(\"submit\",this,arguments)})}else return false},teardown:function(){c.event.remove(this,\".specialSubmit\")}}\nif(!c.support.changeBubbles){var da=/textarea|input|select/i,ea,Fa=function(a){var b=a.type,d=a.valueif(b===\"radio\"||b===\"checkbox\")d=a.checkedelse if(b===\"select-multiple\")d=a.selectedIndex>-1?c.map(a.options,function(f){return f.selected}).join(\"-\"):\"\"else if(a.nodeName.toLowerCase()===\"select\")d=a.selectedIndexreturn d},fa=function(a,b){var d=a.target,f,eif(!(!da.test(d.nodeName)||d.readOnly)){f=c.data(d,\"_change_data\")e=Fa(d)if(a.type!==\"focusout\"||d.type!==\"radio\")c.data(d,\"_change_data\",\ne)if(!(f===w||e===f))if(f!=null||e){a.type=\"change\"return c.event.trigger(a,b,d)}}}c.event.special.change={filters:{focusout:fa,click:function(a){var b=a.target,d=b.typeif(d===\"radio\"||d===\"checkbox\"||b.nodeName.toLowerCase()===\"select\")return fa.call(this,a)},keydown:function(a){var b=a.target,d=b.typeif(a.keyCode===13&&b.nodeName.toLowerCase()!==\"textarea\"||a.keyCode===32&&(d===\"checkbox\"||d===\"radio\")||d===\"select-multiple\")return fa.call(this,a)},beforeactivate:function(a){a=a.targetc.data(a,\n\"_change_data\",Fa(a))}},setup:function(){if(this.type===\"file\")return falsefor(var a in ea)c.event.add(this,a+\".specialChange\",ea[a])return da.test(this.nodeName)},teardown:function(){c.event.remove(this,\".specialChange\")return da.test(this.nodeName)}}ea=c.event.special.change.filters}s.addEventListener&&c.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){function d(f){f=c.event.fix(f)f.type=breturn c.event.handle.call(this,f)}c.event.special[b]={setup:function(){this.addEventListener(a,\nd,true)},teardown:function(){this.removeEventListener(a,d,true)}}})c.each([\"bind\",\"one\"],function(a,b){c.fn[b]=function(d,f,e){if(typeof d===\"object\"){for(var j in d)this[b](j,f,d[j],e)return this}if(c.isFunction(f)){e=ff=w}var i=b===\"one\"?c.proxy(e,function(k){c(this).unbind(k,i)return e.apply(this,arguments)}):eif(d===\"unload\"&&b!==\"one\")this.one(d,f,e)else{j=0for(var o=this.lengthj<oj++)c.event.add(this[j],d,i,f)}return this}})c.fn.extend({unbind:function(a,b){if(typeof a===\"object\"&&\n!a.preventDefault)for(var d in a)this.unbind(d,a[d])else{d=0for(var f=this.lengthd<fd++)c.event.remove(this[d],a,b)}return this},delegate:function(a,b,d,f){return this.live(b,d,f,a)},undelegate:function(a,b,d){return arguments.length===0?this.unbind(\"live\"):this.die(b,null,d,a)},trigger:function(a,b){return this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0]){a=c.Event(a)a.preventDefault()a.stopPropagation()c.event.trigger(a,b,this[0])return a.result}},\ntoggle:function(a){for(var b=arguments,d=1d<b.length)c.proxy(a,b[d++])return this.click(c.proxy(a,function(f){var e=(c.data(this,\"lastToggle\"+a.guid)||0)%dc.data(this,\"lastToggle\"+a.guid,e+1)f.preventDefault()return b[e].apply(this,arguments)||false}))},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}})var Ga={focus:\"focusin\",blur:\"focusout\",mouseenter:\"mouseover\",mouseleave:\"mouseout\"}c.each([\"live\",\"die\"],function(a,b){c.fn[b]=function(d,f,e,j){var i,o=0,k,n,r=j||this.selector,\nu=j?this:c(this.context)if(c.isFunction(f)){e=ff=w}for(d=(d||\"\").split(\" \")(i=d[o++])!=null){j=O.exec(i)k=\"\"if(j){k=j[0]i=i.replace(O,\"\")}if(i===\"hover\")d.push(\"mouseenter\"+k,\"mouseleave\"+k)else{n=iif(i===\"focus\"||i===\"blur\"){d.push(Ga[i]+k)i+=k}else i=(Ga[i]||i)+kb===\"live\"?u.each(function(){c.event.add(this,pa(i,r),{data:f,selector:r,handler:e,origType:i,origHandler:e,preType:n})}):u.unbind(pa(i,r),e)}}return this}})c.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error\".split(\" \"),\nfunction(a,b){c.fn[b]=function(d){return d?this.bind(b,d):this.trigger(b)}if(c.attrFn)c.attrFn[b]=true})A.attachEvent&&!A.addEventListener&&A.attachEvent(\"onunload\",function(){for(var a in c.cache)if(c.cache[a].handle)try{c.event.remove(c.cache[a].handle.elem)}catch(b){}})(function(){function a(g){for(var h=\"\",l,m=0g[m]m++){l=g[m]if(l.nodeType===3||l.nodeType===4)h+=l.nodeValueelse if(l.nodeType!==8)h+=a(l.childNodes)}return h}function b(g,h,l,m,q,p){q=0for(var v=m.lengthq<vq++){var t=m[q]\nif(t){t=t[g]for(var y=falset){if(t.sizcache===l){y=m[t.sizset]break}if(t.nodeType===1&&!p){t.sizcache=lt.sizset=q}if(t.nodeName.toLowerCase()===h){y=tbreak}t=t[g]}m[q]=y}}}function d(g,h,l,m,q,p){q=0for(var v=m.lengthq<vq++){var t=m[q]if(t){t=t[g]for(var y=falset){if(t.sizcache===l){y=m[t.sizset]break}if(t.nodeType===1){if(!p){t.sizcache=lt.sizset=q}if(typeof h!==\"string\"){if(t===h){y=truebreak}}else if(k.filter(h,[t]).length>0){y=tbreak}}t=t[g]}m[q]=y}}}var f=/((?:\\((?:\\([^()]+\\)|[^()]+)+\\)|\\[(?:\\[[^[\\]]*\\]|['\"][^'\"]*['\"]|[^[\\]'\"]+)+\\]|\\\\.|[^ >+~,(\\[\\\\]+)+|[>+~])(\\s*,\\s*)?((?:.|\\r|\\n)*)/g,\ne=0,j=Object.prototype.toString,i=false,o=true[0,0].sort(function(){o=falsereturn 0})var k=function(g,h,l,m){l=l||[]var q=h=h||sif(h.nodeType!==1&&h.nodeType!==9)return[]if(!g||typeof g!==\"string\")return lfor(var p=[],v,t,y,S,H=true,M=x(h),I=g(f.exec(\"\"),v=f.exec(I))!==null){I=v[3]p.push(v[1])if(v[2]){S=v[3]break}}if(p.length>1&&r.exec(g))if(p.length===2&&n.relative[p[0]])t=ga(p[0]+p[1],h)else for(t=n.relative[p[0]]?[h]:k(p.shift(),h)p.length){g=p.shift()if(n.relative[g])g+=p.shift()\nt=ga(g,t)}else{if(!m&&p.length>1&&h.nodeType===9&&!M&&n.match.ID.test(p[0])&&!n.match.ID.test(p[p.length-1])){v=k.find(p.shift(),h,M)h=v.expr?k.filter(v.expr,v.set)[0]:v.set[0]}if(h){v=m?{expr:p.pop(),set:z(m)}:k.find(p.pop(),p.length===1&&(p[0]===\"~\"||p[0]===\"+\")&&h.parentNode?h.parentNode:h,M)t=v.expr?k.filter(v.expr,v.set):v.setif(p.length>0)y=z(t)else H=falsefor(p.length){var D=p.pop()v=Dif(n.relative[D])v=p.pop()else D=\"\"if(v==null)v=hn.relative[D](y,v,M)}}else y=[]}y||(y=t)y||k.error(D||\ng)if(j.call(y)===\"[object Array]\")if(H)if(h&&h.nodeType===1)for(g=0y[g]!=nullg++){if(y[g]&&(y[g]===true||y[g].nodeType===1&&E(h,y[g])))l.push(t[g])}else for(g=0y[g]!=nullg++)y[g]&&y[g].nodeType===1&&l.push(t[g])else l.push.apply(l,y)else z(y,l)if(S){k(S,q,l,m)k.uniqueSort(l)}return l}k.uniqueSort=function(g){if(B){i=og.sort(B)if(i)for(var h=1h<g.lengthh++)g[h]===g[h-1]&&g.splice(h--,1)}return g}k.matches=function(g,h){return k(g,null,null,h)}k.find=function(g,h,l){var m,qif(!g)return[]\nfor(var p=0,v=n.order.lengthp<vp++){var t=n.order[p]if(q=n.leftMatch[t].exec(g)){var y=q[1]q.splice(1,1)if(y.substr(y.length-1)!==\"\\\\\"){q[1]=(q[1]||\"\").replace(/\\\\/g,\"\")m=n.find[t](q,h,l)if(m!=null){g=g.replace(n.match[t],\"\")break}}}}m||(m=h.getElementsByTagName(\"*\"))return{set:m,expr:g}}k.filter=function(g,h,l,m){for(var q=g,p=[],v=h,t,y,S=h&&h[0]&&x(h[0])g&&h.length){for(var H in n.filter)if((t=n.leftMatch[H].exec(g))!=null&&t[2]){var M=n.filter[H],I,DD=t[1]y=falset.splice(1,1)if(D.substr(D.length-\n1)!==\"\\\\\"){if(v===p)p=[]if(n.preFilter[H])if(t=n.preFilter[H](t,v,l,p,m,S)){if(t===true)continue}else y=I=trueif(t)for(var U=0(D=v[U])!=nullU++)if(D){I=M(D,t,U,v)var Ha=m^!!Iif(l&&I!=null)if(Ha)y=trueelse v[U]=falseelse if(Ha){p.push(D)y=true}}if(I!==w){l||(v=p)g=g.replace(n.match[H],\"\")if(!y)return[]break}}}if(g===q)if(y==null)k.error(g)else breakq=g}return v}k.error=function(g){throw\"Syntax error, unrecognized expression: \"+g}var n=k.selectors={order:[\"ID\",\"NAME\",\"TAG\"],match:{ID:/#((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)/,\nCLASS:/\\.((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)/,NAME:/\\[name=['\"]*((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)['\"]*\\]/,ATTR:/\\[\\s*((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)\\s*(?:(\\S?=)\\s*(['\"]*)(.*?)\\3|)\\s*\\]/,TAG:/^((?:[\\w\\u00c0-\\uFFFF\\*-]|\\\\.)+)/,CHILD:/:(only|nth|last|first)-child(?:\\((even|odd|[\\dn+-]*)\\))?/,POS:/:(nth|eq|gt|lt|first|last|even|odd)(?:\\((\\d*)\\))?(?=[^-]|$)/,PSEUDO:/:((?:[\\w\\u00c0-\\uFFFF-]|\\\\.)+)(?:\\((['\"]?)((?:\\([^\\)]+\\)|[^\\(\\)]*)+)\\2\\))?/},leftMatch:{},attrMap:{\"class\":\"className\",\"for\":\"htmlFor\"},attrHandle:{href:function(g){return g.getAttribute(\"href\")}},\nrelative:{\"+\":function(g,h){var l=typeof h===\"string\",m=l&&!/\\W/.test(h)l=l&&!mif(m)h=h.toLowerCase()m=0for(var q=g.length,pm<qm++)if(p=g[m]){for((p=p.previousSibling)&&p.nodeType!==1)g[m]=l||p&&p.nodeName.toLowerCase()===h?p||false:p===h}l&&k.filter(h,g,true)},\">\":function(g,h){var l=typeof h===\"string\"if(l&&!/\\W/.test(h)){h=h.toLowerCase()for(var m=0,q=g.lengthm<qm++){var p=g[m]if(p){l=p.parentNodeg[m]=l.nodeName.toLowerCase()===h?l:false}}}else{m=0for(q=g.lengthm<qm++)if(p=g[m])g[m]=\nl?p.parentNode:p.parentNode===hl&&k.filter(h,g,true)}},\"\":function(g,h,l){var m=e++,q=dif(typeof h===\"string\"&&!/\\W/.test(h)){var p=h=h.toLowerCase()q=b}q(\"parentNode\",h,m,g,p,l)},\"~\":function(g,h,l){var m=e++,q=dif(typeof h===\"string\"&&!/\\W/.test(h)){var p=h=h.toLowerCase()q=b}q(\"previousSibling\",h,m,g,p,l)}},find:{ID:function(g,h,l){if(typeof h.getElementById!==\"undefined\"&&!l)return(g=h.getElementById(g[1]))?[g]:[]},NAME:function(g,h){if(typeof h.getElementsByName!==\"undefined\"){var l=[]\nh=h.getElementsByName(g[1])for(var m=0,q=h.lengthm<qm++)h[m].getAttribute(\"name\")===g[1]&&l.push(h[m])return l.length===0?null:l}},TAG:function(g,h){return h.getElementsByTagName(g[1])}},preFilter:{CLASS:function(g,h,l,m,q,p){g=\" \"+g[1].replace(/\\\\/g,\"\")+\" \"if(p)return gp=0for(var v(v=h[p])!=nullp++)if(v)if(q^(v.className&&(\" \"+v.className+\" \").replace(/[\\t\\n]/g,\" \").indexOf(g)>=0))l||m.push(v)else if(l)h[p]=falsereturn false},ID:function(g){return g[1].replace(/\\\\/g,\"\")},TAG:function(g){return g[1].toLowerCase()},\nCHILD:function(g){if(g[1]===\"nth\"){var h=/(-?)(\\d*)n((?:\\+|-)?\\d*)/.exec(g[2]===\"even\"&&\"2n\"||g[2]===\"odd\"&&\"2n+1\"||!/\\D/.test(g[2])&&\"0n+\"+g[2]||g[2])g[2]=h[1]+(h[2]||1)-0g[3]=h[3]-0}g[0]=e++return g},ATTR:function(g,h,l,m,q,p){h=g[1].replace(/\\\\/g,\"\")if(!p&&n.attrMap[h])g[1]=n.attrMap[h]if(g[2]===\"~=\")g[4]=\" \"+g[4]+\" \"return g},PSEUDO:function(g,h,l,m,q){if(g[1]===\"not\")if((f.exec(g[3])||\"\").length>1||/^\\w/.test(g[3]))g[3]=k(g[3],null,null,h)else{g=k.filter(g[3],h,l,true^q)l||m.push.apply(m,\ng)return false}else if(n.match.POS.test(g[0])||n.match.CHILD.test(g[0]))return truereturn g},POS:function(g){g.unshift(true)return g}},filters:{enabled:function(g){return g.disabled===false&&g.type!==\"hidden\"},disabled:function(g){return g.disabled===true},checked:function(g){return g.checked===true},selected:function(g){return g.selected===true},parent:function(g){return!!g.firstChild},empty:function(g){return!g.firstChild},has:function(g,h,l){return!!k(l[3],g).length},header:function(g){return/h\\d/i.test(g.nodeName)},\ntext:function(g){return\"text\"===g.type},radio:function(g){return\"radio\"===g.type},checkbox:function(g){return\"checkbox\"===g.type},file:function(g){return\"file\"===g.type},password:function(g){return\"password\"===g.type},submit:function(g){return\"submit\"===g.type},image:function(g){return\"image\"===g.type},reset:function(g){return\"reset\"===g.type},button:function(g){return\"button\"===g.type||g.nodeName.toLowerCase()===\"button\"},input:function(g){return/input|select|textarea|button/i.test(g.nodeName)}},\nsetFilters:{first:function(g,h){return h===0},last:function(g,h,l,m){return h===m.length-1},even:function(g,h){return h%2===0},odd:function(g,h){return h%2===1},lt:function(g,h,l){return h<l[3]-0},gt:function(g,h,l){return h>l[3]-0},nth:function(g,h,l){return l[3]-0===h},eq:function(g,h,l){return l[3]-0===h}},filter:{PSEUDO:function(g,h,l,m){var q=h[1],p=n.filters[q]if(p)return p(g,l,h,m)else if(q===\"contains\")return(g.textContent||g.innerText||a([g])||\"\").indexOf(h[3])>=0else if(q===\"not\"){h=\nh[3]l=0for(m=h.lengthl<ml++)if(h[l]===g)return falsereturn true}else k.error(\"Syntax error, unrecognized expression: \"+q)},CHILD:function(g,h){var l=h[1],m=gswitch(l){case \"only\":case \"first\":for(m=m.previousSibling)if(m.nodeType===1)return falseif(l===\"first\")return truem=gcase \"last\":for(m=m.nextSibling)if(m.nodeType===1)return falsereturn truecase \"nth\":l=h[2]var q=h[3]if(l===1&&q===0)return trueh=h[0]var p=g.parentNodeif(p&&(p.sizcache!==h||!g.nodeIndex)){var v=0for(m=p.firstChildmm=\nm.nextSibling)if(m.nodeType===1)m.nodeIndex=++vp.sizcache=h}g=g.nodeIndex-qreturn l===0?g===0:g%l===0&&g/l>=0}},ID:function(g,h){return g.nodeType===1&&g.getAttribute(\"id\")===h},TAG:function(g,h){return h===\"*\"&&g.nodeType===1||g.nodeName.toLowerCase()===h},CLASS:function(g,h){return(\" \"+(g.className||g.getAttribute(\"class\"))+\" \").indexOf(h)>-1},ATTR:function(g,h){var l=h[1]g=n.attrHandle[l]?n.attrHandle[l](g):g[l]!=null?g[l]:g.getAttribute(l)l=g+\"\"var m=h[2]h=h[4]return g==null?m===\"!=\":m===\n\"=\"?l===h:m===\"*=\"?l.indexOf(h)>=0:m===\"~=\"?(\" \"+l+\" \").indexOf(h)>=0:!h?l&&g!==false:m===\"!=\"?l!==h:m===\"^=\"?l.indexOf(h)===0:m===\"$=\"?l.substr(l.length-h.length)===h:m===\"|=\"?l===h||l.substr(0,h.length+1)===h+\"-\":false},POS:function(g,h,l,m){var q=n.setFilters[h[2]]if(q)return q(g,l,h,m)}}},r=n.match.POSfor(var u in n.match){n.match[u]=new RegExp(n.match[u].source+/(?![^\\[]*\\])(?![^\\(]*\\))/.source)n.leftMatch[u]=new RegExp(/(^(?:.|\\r|\\n)*?)/.source+n.match[u].source.replace(/\\\\(\\d+)/g,function(g,\nh){return\"\\\\\"+(h-0+1)}))}var z=function(g,h){g=Array.prototype.slice.call(g,0)if(h){h.push.apply(h,g)return h}return g}try{Array.prototype.slice.call(s.documentElement.childNodes,0)}catch(C){z=function(g,h){h=h||[]if(j.call(g)===\"[object Array]\")Array.prototype.push.apply(h,g)else if(typeof g.length===\"number\")for(var l=0,m=g.lengthl<ml++)h.push(g[l])else for(l=0g[l]l++)h.push(g[l])return h}}var Bif(s.documentElement.compareDocumentPosition)B=function(g,h){if(!g.compareDocumentPosition||\n!h.compareDocumentPosition){if(g==h)i=truereturn g.compareDocumentPosition?-1:1}g=g.compareDocumentPosition(h)&4?-1:g===h?0:1if(g===0)i=truereturn g}else if(\"sourceIndex\"in s.documentElement)B=function(g,h){if(!g.sourceIndex||!h.sourceIndex){if(g==h)i=truereturn g.sourceIndex?-1:1}g=g.sourceIndex-h.sourceIndexif(g===0)i=truereturn g}else if(s.createRange)B=function(g,h){if(!g.ownerDocument||!h.ownerDocument){if(g==h)i=truereturn g.ownerDocument?-1:1}var l=g.ownerDocument.createRange(),m=\nh.ownerDocument.createRange()l.setStart(g,0)l.setEnd(g,0)m.setStart(h,0)m.setEnd(h,0)g=l.compareBoundaryPoints(Range.START_TO_END,m)if(g===0)i=truereturn g}(function(){var g=s.createElement(\"div\"),h=\"script\"+(new Date).getTime()g.innerHTML=\"<a name='\"+h+\"'/>\"var l=s.documentElementl.insertBefore(g,l.firstChild)if(s.getElementById(h)){n.find.ID=function(m,q,p){if(typeof q.getElementById!==\"undefined\"&&!p)return(q=q.getElementById(m[1]))?q.id===m[1]||typeof q.getAttributeNode!==\"undefined\"&&\nq.getAttributeNode(\"id\").nodeValue===m[1]?[q]:w:[]}n.filter.ID=function(m,q){var p=typeof m.getAttributeNode!==\"undefined\"&&m.getAttributeNode(\"id\")return m.nodeType===1&&p&&p.nodeValue===q}}l.removeChild(g)l=g=null})()(function(){var g=s.createElement(\"div\")g.appendChild(s.createComment(\"\"))if(g.getElementsByTagName(\"*\").length>0)n.find.TAG=function(h,l){l=l.getElementsByTagName(h[1])if(h[1]===\"*\"){h=[]for(var m=0l[m]m++)l[m].nodeType===1&&h.push(l[m])l=h}return l}g.innerHTML=\"<a href='#'></a>\"\nif(g.firstChild&&typeof g.firstChild.getAttribute!==\"undefined\"&&g.firstChild.getAttribute(\"href\")!==\"#\")n.attrHandle.href=function(h){return h.getAttribute(\"href\",2)}g=null})()s.querySelectorAll&&function(){var g=k,h=s.createElement(\"div\")h.innerHTML=\"<p class='TEST'></p>\"if(!(h.querySelectorAll&&h.querySelectorAll(\".TEST\").length===0)){k=function(m,q,p,v){q=q||sif(!v&&q.nodeType===9&&!x(q))try{return z(q.querySelectorAll(m),p)}catch(t){}return g(m,q,p,v)}for(var l in g)k[l]=g[l]h=null}}()\n(function(){var g=s.createElement(\"div\")g.innerHTML=\"<div class='test e'></div><div class='test'></div>\"if(!(!g.getElementsByClassName||g.getElementsByClassName(\"e\").length===0)){g.lastChild.className=\"e\"if(g.getElementsByClassName(\"e\").length!==1){n.order.splice(1,0,\"CLASS\")n.find.CLASS=function(h,l,m){if(typeof l.getElementsByClassName!==\"undefined\"&&!m)return l.getElementsByClassName(h[1])}g=null}}})()var E=s.compareDocumentPosition?function(g,h){return!!(g.compareDocumentPosition(h)&16)}:\nfunction(g,h){return g!==h&&(g.contains?g.contains(h):true)},x=function(g){return(g=(g?g.ownerDocument||g:0).documentElement)?g.nodeName!==\"HTML\":false},ga=function(g,h){var l=[],m=\"\",qfor(h=h.nodeType?[h]:hq=n.match.PSEUDO.exec(g)){m+=q[0]g=g.replace(n.match.PSEUDO,\"\")}g=n.relative[g]?g+\"*\":gq=0for(var p=h.lengthq<pq++)k(g,h[q],l)return k.filter(m,l)}c.find=kc.expr=k.selectorsc.expr[\":\"]=c.expr.filtersc.unique=k.uniqueSortc.text=ac.isXMLDoc=xc.contains=E})()var eb=/Until$/,fb=/^(?:parents|prevUntil|prevAll)/,\ngb=/,/R=Array.prototype.slicevar Ia=function(a,b,d){if(c.isFunction(b))return c.grep(a,function(e,j){return!!b.call(e,j,e)===d})else if(b.nodeType)return c.grep(a,function(e){return e===b===d})else if(typeof b===\"string\"){var f=c.grep(a,function(e){return e.nodeType===1})if(Ua.test(b))return c.filter(b,f,!d)else b=c.filter(b,f)}return c.grep(a,function(e){return c.inArray(e,b)>=0===d})}c.fn.extend({find:function(a){for(var b=this.pushStack(\"\",\"find\",a),d=0,f=0,e=this.lengthf<ef++){d=b.length\nc.find(a,this[f],b)if(f>0)for(var j=dj<b.lengthj++)for(var i=0i<di++)if(b[i]===b[j]){b.splice(j--,1)break}}return b},has:function(a){var b=c(a)return this.filter(function(){for(var d=0,f=b.lengthd<fd++)if(c.contains(this,b[d]))return true})},not:function(a){return this.pushStack(Ia(this,a,false),\"not\",a)},filter:function(a){return this.pushStack(Ia(this,a,true),\"filter\",a)},is:function(a){return!!a&&c.filter(a,this).length>0},closest:function(a,b){if(c.isArray(a)){var d=[],f=this[0],e,j=\n{},iif(f&&a.length){e=0for(var o=a.lengthe<oe++){i=a[e]j[i]||(j[i]=c.expr.match.POS.test(i)?c(i,b||this.context):i)}for(f&&f.ownerDocument&&f!==b){for(i in j){e=j[i]if(e.jquery?e.index(f)>-1:c(f).is(e)){d.push({selector:i,elem:f})delete j[i]}}f=f.parentNode}}return d}var k=c.expr.match.POS.test(a)?c(a,b||this.context):nullreturn this.map(function(n,r){for(r&&r.ownerDocument&&r!==b){if(k?k.index(r)>-1:c(r).is(a))return rr=r.parentNode}return null})},index:function(a){if(!a||typeof a===\n\"string\")return c.inArray(this[0],a?c(a):this.parent().children())return c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){a=typeof a===\"string\"?c(a,b||this.context):c.makeArray(a)b=c.merge(this.get(),a)return this.pushStack(qa(a[0])||qa(b[0])?b:c.unique(b))},andSelf:function(){return this.add(this.prevObject)}})c.each({parent:function(a){return(a=a.parentNode)&&a.nodeType!==11?a:null},parents:function(a){return c.dir(a,\"parentNode\")},parentsUntil:function(a,b,d){return c.dir(a,\"parentNode\",\nd)},next:function(a){return c.nth(a,2,\"nextSibling\")},prev:function(a){return c.nth(a,2,\"previousSibling\")},nextAll:function(a){return c.dir(a,\"nextSibling\")},prevAll:function(a){return c.dir(a,\"previousSibling\")},nextUntil:function(a,b,d){return c.dir(a,\"nextSibling\",d)},prevUntil:function(a,b,d){return c.dir(a,\"previousSibling\",d)},siblings:function(a){return c.sibling(a.parentNode.firstChild,a)},children:function(a){return c.sibling(a.firstChild)},contents:function(a){return c.nodeName(a,\"iframe\")?\na.contentDocument||a.contentWindow.document:c.makeArray(a.childNodes)}},function(a,b){c.fn[a]=function(d,f){var e=c.map(this,b,d)eb.test(a)||(f=d)if(f&&typeof f===\"string\")e=c.filter(f,e)e=this.length>1?c.unique(e):eif((this.length>1||gb.test(f))&&fb.test(a))e=e.reverse()return this.pushStack(e,a,R.call(arguments).join(\",\"))}})c.extend({filter:function(a,b,d){if(d)a=\":not(\"+a+\")\"return c.find.matches(a,b)},dir:function(a,b,d){var f=[]for(a=a[b]a&&a.nodeType!==9&&(d===w||a.nodeType!==1||!c(a).is(d))){a.nodeType===\n1&&f.push(a)a=a[b]}return f},nth:function(a,b,d){b=b||1for(var f=0aa=a[d])if(a.nodeType===1&&++f===b)breakreturn a},sibling:function(a,b){for(var d=[]aa=a.nextSibling)a.nodeType===1&&a!==b&&d.push(a)return d}})var Ja=/ jQuery\\d+=\"(?:\\d+|null)\"/g,V=/^\\s+/,Ka=/(<([\\w:]+)[^>]*?)\\/>/g,hb=/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,La=/<([\\w:]+)/,ib=/<tbody/i,jb=/<|&#?\\w+/,ta=/<script|<object|<embed|<option|<style/i,ua=/checked\\s*(?:[^=]|=\\s*.checked.)/i,Ma=function(a,b,d){return hb.test(d)?\na:b+\"></\"+d+\">\"},F={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],area:[1,\"<map>\",\"</map>\"],_default:[0,\"\",\"\"]}F.optgroup=F.optionF.tbody=F.tfoot=F.colgroup=F.caption=F.theadF.th=F.tdif(!c.support.htmlSerialize)F._default=[1,\"div<div>\",\"</div>\"]c.fn.extend({text:function(a){if(c.isFunction(a))return this.each(function(b){var d=\nc(this)d.text(a.call(this,b,d.text()))})if(typeof a!==\"object\"&&a!==w)return this.empty().append((this[0]&&this[0].ownerDocument||s).createTextNode(a))return c.text(this)},wrapAll:function(a){if(c.isFunction(a))return this.each(function(d){c(this).wrapAll(a.call(this,d))})if(this[0]){var b=c(a,this[0].ownerDocument).eq(0).clone(true)this[0].parentNode&&b.insertBefore(this[0])b.map(function(){for(var d=thisd.firstChild&&d.firstChild.nodeType===1)d=d.firstChildreturn d}).append(this)}return this},\nwrapInner:function(a){if(c.isFunction(a))return this.each(function(b){c(this).wrapInner(a.call(this,b))})return this.each(function(){var b=c(this),d=b.contents()d.length?d.wrapAll(a):b.append(a)})},wrap:function(a){return this.each(function(){c(this).wrapAll(a)})},unwrap:function(){return this.parent().each(function(){c.nodeName(this,\"body\")||c(this).replaceWith(this.childNodes)}).end()},append:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.appendChild(a)})},\nprepend:function(){return this.domManip(arguments,true,function(a){this.nodeType===1&&this.insertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,this)})else if(arguments.length){var a=c(arguments[0])a.push.apply(a,this.toArray())return this.pushStack(a,\"before\",arguments)}},after:function(){if(this[0]&&this[0].parentNode)return this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,\nthis.nextSibling)})else if(arguments.length){var a=this.pushStack(this,\"after\",arguments)a.push.apply(a,c(arguments[0]).toArray())return a}},remove:function(a,b){for(var d=0,f(f=this[d])!=nulld++)if(!a||c.filter(a,[f]).length){if(!b&&f.nodeType===1){c.cleanData(f.getElementsByTagName(\"*\"))c.cleanData([f])}f.parentNode&&f.parentNode.removeChild(f)}return this},empty:function(){for(var a=0,b(b=this[a])!=nulla++)for(b.nodeType===1&&c.cleanData(b.getElementsByTagName(\"*\"))b.firstChild)b.removeChild(b.firstChild)\nreturn this},clone:function(a){var b=this.map(function(){if(!c.support.noCloneEvent&&!c.isXMLDoc(this)){var d=this.outerHTML,f=this.ownerDocumentif(!d){d=f.createElement(\"div\")d.appendChild(this.cloneNode(true))d=d.innerHTML}return c.clean([d.replace(Ja,\"\").replace(/=([^=\"'>\\s]+\\/)>/g,'=\"$1\">').replace(V,\"\")],f)[0]}else return this.cloneNode(true)})if(a===true){ra(this,b)ra(this.find(\"*\"),b.find(\"*\"))}return b},html:function(a){if(a===w)return this[0]&&this[0].nodeType===1?this[0].innerHTML.replace(Ja,\n\"\"):nullelse if(typeof a===\"string\"&&!ta.test(a)&&(c.support.leadingWhitespace||!V.test(a))&&!F[(La.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=a.replace(Ka,Ma)try{for(var b=0,d=this.lengthb<db++)if(this[b].nodeType===1){c.cleanData(this[b].getElementsByTagName(\"*\"))this[b].innerHTML=a}}catch(f){this.empty().append(a)}}else c.isFunction(a)?this.each(function(e){var j=c(this),i=j.html()j.empty().append(function(){return a.call(this,e,i)})}):this.empty().append(a)return this},replaceWith:function(a){if(this[0]&&\nthis[0].parentNode){if(c.isFunction(a))return this.each(function(b){var d=c(this),f=d.html()d.replaceWith(a.call(this,b,f))})if(typeof a!==\"string\")a=c(a).detach()return this.each(function(){var b=this.nextSibling,d=this.parentNodec(this).remove()b?c(b).before(a):c(d).append(a)})}else return this.pushStack(c(c.isFunction(a)?a():a),\"replaceWith\",a)},detach:function(a){return this.remove(a,true)},domManip:function(a,b,d){function f(u){return c.nodeName(u,\"table\")?u.getElementsByTagName(\"tbody\")[0]||\nu.appendChild(u.ownerDocument.createElement(\"tbody\")):u}var e,j,i=a[0],o=[],kif(!c.support.checkClone&&arguments.length===3&&typeof i===\"string\"&&ua.test(i))return this.each(function(){c(this).domManip(a,b,d,true)})if(c.isFunction(i))return this.each(function(u){var z=c(this)a[0]=i.call(this,u,b?z.html():w)z.domManip(a,b,d)})if(this[0]){e=i&&i.parentNodee=c.support.parentNode&&e&&e.nodeType===11&&e.childNodes.length===this.length?{fragment:e}:sa(a,this,o)k=e.fragmentif(j=k.childNodes.length===\n1?(k=k.firstChild):k.firstChild){b=b&&c.nodeName(j,\"tr\")for(var n=0,r=this.lengthn<rn++)d.call(b?f(this[n],j):this[n],n>0||e.cacheable||this.length>1?k.cloneNode(true):k)}o.length&&c.each(o,Qa)}return this}})c.fragments={}c.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){c.fn[a]=function(d){var f=[]d=c(d)var e=this.length===1&&this[0].parentNodeif(e&&e.nodeType===11&&e.childNodes.length===1&&d.length===1){d[b](this[0])\nreturn this}else{e=0for(var j=d.lengthe<je++){var i=(e>0?this.clone(true):this).get()c.fn[b].apply(c(d[e]),i)f=f.concat(i)}return this.pushStack(f,a,d.selector)}}})c.extend({clean:function(a,b,d,f){b=b||sif(typeof b.createElement===\"undefined\")b=b.ownerDocument||b[0]&&b[0].ownerDocument||sfor(var e=[],j=0,i(i=a[j])!=nullj++){if(typeof i===\"number\")i+=\"\"if(i){if(typeof i===\"string\"&&!jb.test(i))i=b.createTextNode(i)else if(typeof i===\"string\"){i=i.replace(Ka,Ma)var o=(La.exec(i)||[\"\",\n\"\"])[1].toLowerCase(),k=F[o]||F._default,n=k[0],r=b.createElement(\"div\")for(r.innerHTML=k[1]+i+k[2]n--)r=r.lastChildif(!c.support.tbody){n=ib.test(i)o=o===\"table\"&&!n?r.firstChild&&r.firstChild.childNodes:k[1]===\"<table>\"&&!n?r.childNodes:[]for(k=o.length-1k>=0--k)c.nodeName(o[k],\"tbody\")&&!o[k].childNodes.length&&o[k].parentNode.removeChild(o[k])}!c.support.leadingWhitespace&&V.test(i)&&r.insertBefore(b.createTextNode(V.exec(i)[0]),r.firstChild)i=r.childNodes}if(i.nodeType)e.push(i)else e=\nc.merge(e,i)}}if(d)for(j=0e[j]j++)if(f&&c.nodeName(e[j],\"script\")&&(!e[j].type||e[j].type.toLowerCase()===\"text/javascript\"))f.push(e[j].parentNode?e[j].parentNode.removeChild(e[j]):e[j])else{e[j].nodeType===1&&e.splice.apply(e,[j+1,0].concat(c.makeArray(e[j].getElementsByTagName(\"script\"))))d.appendChild(e[j])}return e},cleanData:function(a){for(var b,d,f=c.cache,e=c.event.special,j=c.support.deleteExpando,i=0,o(o=a[i])!=nulli++)if(d=o[c.expando]){b=f[d]if(b.events)for(var k in b.events)e[k]?\nc.event.remove(o,k):Ca(o,k,b.handle)if(j)delete o[c.expando]else o.removeAttribute&&o.removeAttribute(c.expando)delete f[d]}}})var kb=/z-?index|font-?weight|opacity|zoom|line-?height/i,Na=/alpha\\([^)]*\\)/,Oa=/opacity=([^)]*)/,ha=/float/i,ia=/-([a-z])/ig,lb=/([A-Z])/g,mb=/^-?\\d+(?:px)?$/i,nb=/^-?\\d/,ob={position:\"absolute\",visibility:\"hidden\",display:\"block\"},pb=[\"Left\",\"Right\"],qb=[\"Top\",\"Bottom\"],rb=s.defaultView&&s.defaultView.getComputedStyle,Pa=c.support.cssFloat?\"cssFloat\":\"styleFloat\",ja=\nfunction(a,b){return b.toUpperCase()}c.fn.css=function(a,b){return X(this,a,b,true,function(d,f,e){if(e===w)return c.curCSS(d,f)if(typeof e===\"number\"&&!kb.test(f))e+=\"px\"c.style(d,f,e)})}c.extend({style:function(a,b,d){if(!a||a.nodeType===3||a.nodeType===8)return wif((b===\"width\"||b===\"height\")&&parseFloat(d)<0)d=wvar f=a.style||a,e=d!==wif(!c.support.opacity&&b===\"opacity\"){if(e){f.zoom=1b=parseInt(d,10)+\"\"===\"NaN\"?\"\":\"alpha(opacity=\"+d*100+\")\"a=f.filter||c.curCSS(a,\"filter\")||\"\"f.filter=\nNa.test(a)?a.replace(Na,b):b}return f.filter&&f.filter.indexOf(\"opacity=\")>=0?parseFloat(Oa.exec(f.filter)[1])/100+\"\":\"\"}if(ha.test(b))b=Pab=b.replace(ia,ja)if(e)f[b]=dreturn f[b]},css:function(a,b,d,f){if(b===\"width\"||b===\"height\"){var e,j=b===\"width\"?pb:qbfunction i(){e=b===\"width\"?a.offsetWidth:a.offsetHeightf!==\"border\"&&c.each(j,function(){f||(e-=parseFloat(c.curCSS(a,\"padding\"+this,true))||0)if(f===\"margin\")e+=parseFloat(c.curCSS(a,\"margin\"+this,true))||0else e-=parseFloat(c.curCSS(a,\n\"border\"+this+\"Width\",true))||0})}a.offsetWidth!==0?i():c.swap(a,ob,i)return Math.max(0,Math.round(e))}return c.curCSS(a,b,d)},curCSS:function(a,b,d){var f,e=a.styleif(!c.support.opacity&&b===\"opacity\"&&a.currentStyle){f=Oa.test(a.currentStyle.filter||\"\")?parseFloat(RegExp.$1)/100+\"\":\"\"return f===\"\"?\"1\":f}if(ha.test(b))b=Paif(!d&&e&&e[b])f=e[b]else if(rb){if(ha.test(b))b=\"float\"b=b.replace(lb,\"-$1\").toLowerCase()e=a.ownerDocument.defaultViewif(!e)return nullif(a=e.getComputedStyle(a,null))f=\na.getPropertyValue(b)if(b===\"opacity\"&&f===\"\")f=\"1\"}else if(a.currentStyle){d=b.replace(ia,ja)f=a.currentStyle[b]||a.currentStyle[d]if(!mb.test(f)&&nb.test(f)){b=e.leftvar j=a.runtimeStyle.lefta.runtimeStyle.left=a.currentStyle.lefte.left=d===\"fontSize\"?\"1em\":f||0f=e.pixelLeft+\"px\"e.left=ba.runtimeStyle.left=j}}return f},swap:function(a,b,d){var f={}for(var e in b){f[e]=a.style[e]a.style[e]=b[e]}d.call(a)for(e in b)a.style[e]=f[e]}})if(c.expr&&c.expr.filters){c.expr.filters.hidden=function(a){var b=\na.offsetWidth,d=a.offsetHeight,f=a.nodeName.toLowerCase()===\"tr\"return b===0&&d===0&&!f?true:b>0&&d>0&&!f?false:c.curCSS(a,\"display\")===\"none\"}c.expr.filters.visible=function(a){return!c.expr.filters.hidden(a)}}var sb=J(),tb=/<script(.|\\s)*?\\/script>/gi,ub=/select|textarea/i,vb=/color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week/i,N=/=\\?(&|$)/,ka=/\\?/,wb=/(\\?|&)_=.*?(&|$)/,xb=/^(\\w+:)?\\/\\/([^\\/?#]+)/,yb=/%20/g,zb=c.fn.loadc.fn.extend({load:function(a,b,d){if(typeof a!==\n\"string\")return zb.call(this,a)else if(!this.length)return thisvar f=a.indexOf(\" \")if(f>=0){var e=a.slice(f,a.length)a=a.slice(0,f)}f=\"GET\"if(b)if(c.isFunction(b)){d=bb=null}else if(typeof b===\"object\"){b=c.param(b,c.ajaxSettings.traditional)f=\"POST\"}var j=thisc.ajax({url:a,type:f,dataType:\"html\",data:b,complete:function(i,o){if(o===\"success\"||o===\"notmodified\")j.html(e?c(\"<div />\").append(i.responseText.replace(tb,\"\")).find(e):i.responseText)d&&j.each(d,[i.responseText,o,i])}})return this},\nserialize:function(){return c.param(this.serializeArray())},serializeArray:function(){return this.map(function(){return this.elements?c.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||ub.test(this.nodeName)||vb.test(this.type))}).map(function(a,b){a=c(this).val()return a==null?null:c.isArray(a)?c.map(a,function(d){return{name:b.name,value:d}}):{name:b.name,value:a}}).get()}})c.each(\"ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend\".split(\" \"),\nfunction(a,b){c.fn[b]=function(d){return this.bind(b,d)}})c.extend({get:function(a,b,d,f){if(c.isFunction(b)){f=f||dd=bb=null}return c.ajax({type:\"GET\",url:a,data:b,success:d,dataType:f})},getScript:function(a,b){return c.get(a,null,b,\"script\")},getJSON:function(a,b,d){return c.get(a,b,d,\"json\")},post:function(a,b,d,f){if(c.isFunction(b)){f=f||dd=bb={}}return c.ajax({type:\"POST\",url:a,data:b,success:d,dataType:f})},ajaxSetup:function(a){c.extend(c.ajaxSettings,a)},ajaxSettings:{url:location.href,\nglobal:true,type:\"GET\",contentType:\"application/x-www-form-urlencoded\",processData:true,async:true,xhr:A.XMLHttpRequest&&(A.location.protocol!==\"file:\"||!A.ActiveXObject)?function(){return new A.XMLHttpRequest}:function(){try{return new A.ActiveXObject(\"Microsoft.XMLHTTP\")}catch(a){}},accepts:{xml:\"application/xml, text/xml\",html:\"text/html\",script:\"text/javascript, application/javascript\",json:\"application/json, text/javascript\",text:\"text/plain\",_default:\"*=begin\"}},lastModified:{},etag:{},ajax:function(a){function b(){e.success&&\ne.success.call(k,o,i,x)e.global&&f(\"ajaxSuccess\",[x,e])}function d(){e.complete&&e.complete.call(k,x,i)e.global&&f(\"ajaxComplete\",[x,e])e.global&&!--c.active&&c.event.trigger(\"ajaxStop\")}function f(q,p){(e.context?c(e.context):c.event).trigger(q,p)}var e=c.extend(true,{},c.ajaxSettings,a),j,i,o,k=a&&a.context||e,n=e.type.toUpperCase()if(e.data&&e.processData&&typeof e.data!==\"string\")e.data=c.param(e.data,e.traditional)if(e.dataType===\"jsonp\"){if(n===\"GET\")N.test(e.url)||(e.url+=(ka.test(e.url)?\n\"&\":\"?\")+(e.jsonp||\"callback\")+\"=?\")else if(!e.data||!N.test(e.data))e.data=(e.data?e.data+\"&\":\"\")+(e.jsonp||\"callback\")+\"=?\"e.dataType=\"json\"}if(e.dataType===\"json\"&&(e.data&&N.test(e.data)||N.test(e.url))){j=e.jsonpCallback||\"jsonp\"+sb++if(e.data)e.data=(e.data+\"\").replace(N,\"=\"+j+\"$1\")e.url=e.url.replace(N,\"=\"+j+\"$1\")e.dataType=\"script\"A[j]=A[j]||function(q){o=qb()d()A[j]=wtry{delete A[j]}catch(p){}z&&z.removeChild(C)}}if(e.dataType===\"script\"&&e.cache===null)e.cache=falseif(e.cache===\nfalse&&n===\"GET\"){var r=J(),u=e.url.replace(wb,\"$1_=\"+r+\"$2\")e.url=u+(u===e.url?(ka.test(e.url)?\"&\":\"?\")+\"_=\"+r:\"\")}if(e.data&&n===\"GET\")e.url+=(ka.test(e.url)?\"&\":\"?\")+e.datae.global&&!c.active++&&c.event.trigger(\"ajaxStart\")r=(r=xb.exec(e.url))&&(r[1]&&r[1]!==location.protocol||r[2]!==location.host)if(e.dataType===\"script\"&&n===\"GET\"&&r){var z=s.getElementsByTagName(\"head\")[0]||s.documentElement,C=s.createElement(\"script\")C.src=e.urlif(e.scriptCharset)C.charset=e.scriptCharsetif(!j){var B=\nfalseC.onload=C.onreadystatechange=function(){if(!B&&(!this.readyState||this.readyState===\"loaded\"||this.readyState===\"complete\")){B=trueb()d()C.onload=C.onreadystatechange=nullz&&C.parentNode&&z.removeChild(C)}}}z.insertBefore(C,z.firstChild)return w}var E=false,x=e.xhr()if(x){e.username?x.open(n,e.url,e.async,e.username,e.password):x.open(n,e.url,e.async)try{if(e.data||a&&a.contentType)x.setRequestHeader(\"Content-Type\",e.contentType)if(e.ifModified){c.lastModified[e.url]&&x.setRequestHeader(\"If-Modified-Since\",\nc.lastModified[e.url])c.etag[e.url]&&x.setRequestHeader(\"If-None-Match\",c.etag[e.url])}r||x.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\")x.setRequestHeader(\"Accept\",e.dataType&&e.accepts[e.dataType]?e.accepts[e.dataType]+\", *=begin\":e.accepts._default)}catch(ga){}if(e.beforeSend&&e.beforeSend.call(k,x,e)===false){e.global&&!--c.active&&c.event.trigger(\"ajaxStop\")x.abort()return false}e.global&&f(\"ajaxSend\",[x,e])var g=x.onreadystatechange=function(q){if(!x||x.readyState===0||q===\"abort\"){E||\nd()E=trueif(x)x.onreadystatechange=c.noop}else if(!E&&x&&(x.readyState===4||q===\"timeout\")){E=truex.onreadystatechange=c.noopi=q===\"timeout\"?\"timeout\":!c.httpSuccess(x)?\"error\":e.ifModified&&c.httpNotModified(x,e.url)?\"notmodified\":\"success\"var pif(i===\"success\")try{o=c.httpData(x,e.dataType,e)}catch(v){i=\"parsererror\"p=v}if(i===\"success\"||i===\"notmodified\")j||b()else c.handleError(e,x,i,p)d()q===\"timeout\"&&x.abort()if(e.async)x=null}}try{var h=x.abortx.abort=function(){x&&h.call(x)\ng(\"abort\")}}catch(l){}e.async&&e.timeout>0&&setTimeout(function(){x&&!E&&g(\"timeout\")},e.timeout)try{x.send(n===\"POST\"||n===\"PUT\"||n===\"DELETE\"?e.data:null)}catch(m){c.handleError(e,x,null,m)d()}e.async||g()return x}},handleError:function(a,b,d,f){if(a.error)a.error.call(a.context||a,b,d,f)if(a.global)(a.context?c(a.context):c.event).trigger(\"ajaxError\",[b,a,f])},active:0,httpSuccess:function(a){try{return!a.status&&location.protocol===\"file:\"||a.status>=200&&a.status<300||a.status===304||a.status===\n1223||a.status===0}catch(b){}return false},httpNotModified:function(a,b){var d=a.getResponseHeader(\"Last-Modified\"),f=a.getResponseHeader(\"Etag\")if(d)c.lastModified[b]=dif(f)c.etag[b]=freturn a.status===304||a.status===0},httpData:function(a,b,d){var f=a.getResponseHeader(\"content-type\")||\"\",e=b===\"xml\"||!b&&f.indexOf(\"xml\")>=0a=e?a.responseXML:a.responseTexte&&a.documentElement.nodeName===\"parsererror\"&&c.error(\"parsererror\")if(d&&d.dataFilter)a=d.dataFilter(a,b)if(typeof a===\"string\")if(b===\n\"json\"||!b&&f.indexOf(\"json\")>=0)a=c.parseJSON(a)else if(b===\"script\"||!b&&f.indexOf(\"javascript\")>=0)c.globalEval(a)return a},param:function(a,b){function d(i,o){if(c.isArray(o))c.each(o,function(k,n){b||/\\[\\]$/.test(i)?f(i,n):d(i+\"[\"+(typeof n===\"object\"||c.isArray(n)?k:\"\")+\"]\",n)})else!b&&o!=null&&typeof o===\"object\"?c.each(o,function(k,n){d(i+\"[\"+k+\"]\",n)}):f(i,o)}function f(i,o){o=c.isFunction(o)?o():oe[e.length]=encodeURIComponent(i)+\"=\"+encodeURIComponent(o)}var e=[]if(b===w)b=c.ajaxSettings.traditional\nif(c.isArray(a)||a.jquery)c.each(a,function(){f(this.name,this.value)})else for(var j in a)d(j,a[j])return e.join(\"&\").replace(yb,\"+\")}})var la={},Ab=/toggle|show|hide/,Bb=/^([+-]=)?([\\d+-.]+)(.*)$/,W,va=[[\"height\",\"marginTop\",\"marginBottom\",\"paddingTop\",\"paddingBottom\"],[\"width\",\"marginLeft\",\"marginRight\",\"paddingLeft\",\"paddingRight\"],[\"opacity\"]]c.fn.extend({show:function(a,b){if(a||a===0)return this.animate(K(\"show\",3),a,b)else{a=0for(b=this.lengtha<ba++){var d=c.data(this[a],\"olddisplay\")\nthis[a].style.display=d||\"\"if(c.css(this[a],\"display\")===\"none\"){d=this[a].nodeNamevar fif(la[d])f=la[d]else{var e=c(\"<\"+d+\" />\").appendTo(\"body\")f=e.css(\"display\")if(f===\"none\")f=\"block\"e.remove()la[d]=f}c.data(this[a],\"olddisplay\",f)}}a=0for(b=this.lengtha<ba++)this[a].style.display=c.data(this[a],\"olddisplay\")||\"\"return this}},hide:function(a,b){if(a||a===0)return this.animate(K(\"hide\",3),a,b)else{a=0for(b=this.lengtha<ba++){var d=c.data(this[a],\"olddisplay\")!d&&d!==\"none\"&&c.data(this[a],\n\"olddisplay\",c.css(this[a],\"display\"))}a=0for(b=this.lengtha<ba++)this[a].style.display=\"none\"return this}},_toggle:c.fn.toggle,toggle:function(a,b){var d=typeof a===\"boolean\"if(c.isFunction(a)&&c.isFunction(b))this._toggle.apply(this,arguments)else a==null||d?this.each(function(){var f=d?a:c(this).is(\":hidden\")c(this)[f?\"show\":\"hide\"]()}):this.animate(K(\"toggle\",3),a,b)return this},fadeTo:function(a,b,d){return this.filter(\":hidden\").css(\"opacity\",0).show().end().animate({opacity:b},a,d)},\nanimate:function(a,b,d,f){var e=c.speed(b,d,f)if(c.isEmptyObject(a))return this.each(e.complete)return this[e.queue===false?\"each\":\"queue\"](function(){var j=c.extend({},e),i,o=this.nodeType===1&&c(this).is(\":hidden\"),k=thisfor(i in a){var n=i.replace(ia,ja)if(i!==n){a[n]=a[i]delete a[i]i=n}if(a[i]===\"hide\"&&o||a[i]===\"show\"&&!o)return j.complete.call(this)if((i===\"height\"||i===\"width\")&&this.style){j.display=c.css(this,\"display\")j.overflow=this.style.overflow}if(c.isArray(a[i])){(j.specialEasing=\nj.specialEasing||{})[i]=a[i][1]a[i]=a[i][0]}}if(j.overflow!=null)this.style.overflow=\"hidden\"j.curAnim=c.extend({},a)c.each(a,function(r,u){var z=new c.fx(k,j,r)if(Ab.test(u))z[u===\"toggle\"?o?\"show\":\"hide\":u](a)else{var C=Bb.exec(u),B=z.cur(true)||0if(C){u=parseFloat(C[2])var E=C[3]||\"px\"if(E!==\"px\"){k.style[r]=(u||1)+EB=(u||1)/z.cur(true)*Bk.style[r]=B+E}if(C[1])u=(C[1]===\"-=\"?-1:1)*u+Bz.custom(B,u,E)}else z.custom(B,u,\"\")}})return true})},stop:function(a,b){var d=c.timersa&&this.queue([])\nthis.each(function(){for(var f=d.length-1f>=0f--)if(d[f].elem===this){b&&d[f](true)d.splice(f,1)}})b||this.dequeue()return this}})c.each({slideDown:K(\"show\",1),slideUp:K(\"hide\",1),slideToggle:K(\"toggle\",1),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"}},function(a,b){c.fn[a]=function(d,f){return this.animate(b,d,f)}})c.extend({speed:function(a,b,d){var f=a&&typeof a===\"object\"?a:{complete:d||!d&&b||c.isFunction(a)&&a,duration:a,easing:d&&b||b&&!c.isFunction(b)&&b}f.duration=c.fx.off?0:typeof f.duration===\n\"number\"?f.duration:c.fx.speeds[f.duration]||c.fx.speeds._defaultf.old=f.completef.complete=function(){f.queue!==false&&c(this).dequeue()c.isFunction(f.old)&&f.old.call(this)}return f},easing:{linear:function(a,b,d,f){return d+f*a},swing:function(a,b,d,f){return(-Math.cos(a*Math.PI)/2+0.5)*f+d}},timers:[],fx:function(a,b,d){this.options=bthis.elem=athis.prop=dif(!b.orig)b.orig={}}})c.fx.prototype={update:function(){this.options.step&&this.options.step.call(this.elem,this.now,this)(c.fx.step[this.prop]||\nc.fx.step._default)(this)if((this.prop===\"height\"||this.prop===\"width\")&&this.elem.style)this.elem.style.display=\"block\"},cur:function(a){if(this.elem[this.prop]!=null&&(!this.elem.style||this.elem.style[this.prop]==null))return this.elem[this.prop]return(a=parseFloat(c.css(this.elem,this.prop,a)))&&a>-10000?a:parseFloat(c.curCSS(this.elem,this.prop))||0},custom:function(a,b,d){function f(j){return e.step(j)}this.startTime=J()this.start=athis.end=bthis.unit=d||this.unit||\"px\"this.now=this.start\nthis.pos=this.state=0var e=thisf.elem=this.elemif(f()&&c.timers.push(f)&&!W)W=setInterval(c.fx.tick,13)},show:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop)this.options.show=truethis.custom(this.prop===\"width\"||this.prop===\"height\"?1:0,this.cur())c(this.elem).show()},hide:function(){this.options.orig[this.prop]=c.style(this.elem,this.prop)this.options.hide=truethis.custom(this.cur(),0)},step:function(a){var b=J(),d=trueif(a||b>=this.options.duration+this.startTime){this.now=\nthis.endthis.pos=this.state=1this.update()this.options.curAnim[this.prop]=truefor(var f in this.options.curAnim)if(this.options.curAnim[f]!==true)d=falseif(d){if(this.options.display!=null){this.elem.style.overflow=this.options.overflowa=c.data(this.elem,\"olddisplay\")this.elem.style.display=a?a:this.options.displayif(c.css(this.elem,\"display\")===\"none\")this.elem.style.display=\"block\"}this.options.hide&&c(this.elem).hide()if(this.options.hide||this.options.show)for(var e in this.options.curAnim)c.style(this.elem,\ne,this.options.orig[e])this.options.complete.call(this.elem)}return false}else{e=b-this.startTimethis.state=e/this.options.durationa=this.options.easing||(c.easing.swing?\"swing\":\"linear\")this.pos=c.easing[this.options.specialEasing&&this.options.specialEasing[this.prop]||a](this.state,e,0,1,this.options.duration)this.now=this.start+(this.end-this.start)*this.posthis.update()}return true}}c.extend(c.fx,{tick:function(){for(var a=c.timers,b=0b<a.lengthb++)a[b]()||a.splice(b--,1)a.length||\nc.fx.stop()},stop:function(){clearInterval(W)W=null},speeds:{slow:600,fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,\"opacity\",a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=null)a.elem.style[a.prop]=(a.prop===\"width\"||a.prop===\"height\"?Math.max(0,a.now):a.now)+a.unitelse a.elem[a.prop]=a.now}}})if(c.expr&&c.expr.filters)c.expr.filters.animated=function(a){return c.grep(c.timers,function(b){return a===b.elem}).length}c.fn.offset=\"getBoundingClientRect\"in s.documentElement?\nfunction(a){var b=this[0]if(a)return this.each(function(e){c.offset.setOffset(this,a,e)})if(!b||!b.ownerDocument)return nullif(b===b.ownerDocument.body)return c.offset.bodyOffset(b)var d=b.getBoundingClientRect(),f=b.ownerDocumentb=f.bodyf=f.documentElementreturn{top:d.top+(self.pageYOffset||c.support.boxModel&&f.scrollTop||b.scrollTop)-(f.clientTop||b.clientTop||0),left:d.left+(self.pageXOffset||c.support.boxModel&&f.scrollLeft||b.scrollLeft)-(f.clientLeft||b.clientLeft||0)}}:function(a){var b=\nthis[0]if(a)return this.each(function(r){c.offset.setOffset(this,a,r)})if(!b||!b.ownerDocument)return nullif(b===b.ownerDocument.body)return c.offset.bodyOffset(b)c.offset.initialize()var d=b.offsetParent,f=b,e=b.ownerDocument,j,i=e.documentElement,o=e.bodyf=(e=e.defaultView)?e.getComputedStyle(b,null):b.currentStylefor(var k=b.offsetTop,n=b.offsetLeft(b=b.parentNode)&&b!==o&&b!==i){if(c.offset.supportsFixedPosition&&f.position===\"fixed\")breakj=e?e.getComputedStyle(b,null):b.currentStyle\nk-=b.scrollTopn-=b.scrollLeftif(b===d){k+=b.offsetTopn+=b.offsetLeftif(c.offset.doesNotAddBorder&&!(c.offset.doesAddBorderForTableAndCells&&/^t(able|d|h)$/i.test(b.nodeName))){k+=parseFloat(j.borderTopWidth)||0n+=parseFloat(j.borderLeftWidth)||0}f=dd=b.offsetParent}if(c.offset.subtractsBorderForOverflowNotVisible&&j.overflow!==\"visible\"){k+=parseFloat(j.borderTopWidth)||0n+=parseFloat(j.borderLeftWidth)||0}f=j}if(f.position===\"relative\"||f.position===\"static\"){k+=o.offsetTopn+=o.offsetLeft}if(c.offset.supportsFixedPosition&&\nf.position===\"fixed\"){k+=Math.max(i.scrollTop,o.scrollTop)n+=Math.max(i.scrollLeft,o.scrollLeft)}return{top:k,left:n}}c.offset={initialize:function(){var a=s.body,b=s.createElement(\"div\"),d,f,e,j=parseFloat(c.curCSS(a,\"marginTop\",true))||0c.extend(b.style,{position:\"absolute\",top:0,left:0,margin:0,border:0,width:\"1px\",height:\"1px\",visibility:\"hidden\"})b.innerHTML=\"<div style='position:absolutetop:0left:0margin:0border:5px solid #000padding:0width:1pxheight:1px'><div></div></div><table style='position:absolutetop:0left:0margin:0border:5px solid #000padding:0width:1pxheight:1px' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>\"\na.insertBefore(b,a.firstChild)d=b.firstChildf=d.firstChilde=d.nextSibling.firstChild.firstChildthis.doesNotAddBorder=f.offsetTop!==5this.doesAddBorderForTableAndCells=e.offsetTop===5f.style.position=\"fixed\"f.style.top=\"20px\"this.supportsFixedPosition=f.offsetTop===20||f.offsetTop===15f.style.position=f.style.top=\"\"d.style.overflow=\"hidden\"d.style.position=\"relative\"this.subtractsBorderForOverflowNotVisible=f.offsetTop===-5this.doesNotIncludeMarginInBodyOffset=a.offsetTop!==ja.removeChild(b)\nc.offset.initialize=c.noop},bodyOffset:function(a){var b=a.offsetTop,d=a.offsetLeftc.offset.initialize()if(c.offset.doesNotIncludeMarginInBodyOffset){b+=parseFloat(c.curCSS(a,\"marginTop\",true))||0d+=parseFloat(c.curCSS(a,\"marginLeft\",true))||0}return{top:b,left:d}},setOffset:function(a,b,d){if(/static/.test(c.curCSS(a,\"position\")))a.style.position=\"relative\"var f=c(a),e=f.offset(),j=parseInt(c.curCSS(a,\"top\",true),10)||0,i=parseInt(c.curCSS(a,\"left\",true),10)||0if(c.isFunction(b))b=b.call(a,\nd,e)d={top:b.top-e.top+j,left:b.left-e.left+i}\"using\"in b?b.using.call(a,d):f.css(d)}}c.fn.extend({position:function(){if(!this[0])return nullvar a=this[0],b=this.offsetParent(),d=this.offset(),f=/^body|html$/i.test(b[0].nodeName)?{top:0,left:0}:b.offset()d.top-=parseFloat(c.curCSS(a,\"marginTop\",true))||0d.left-=parseFloat(c.curCSS(a,\"marginLeft\",true))||0f.top+=parseFloat(c.curCSS(b[0],\"borderTopWidth\",true))||0f.left+=parseFloat(c.curCSS(b[0],\"borderLeftWidth\",true))||0return{top:d.top-\nf.top,left:d.left-f.left}},offsetParent:function(){return this.map(function(){for(var a=this.offsetParent||s.bodya&&!/^body|html$/i.test(a.nodeName)&&c.css(a,\"position\")===\"static\")a=a.offsetParentreturn a})}})c.each([\"Left\",\"Top\"],function(a,b){var d=\"scroll\"+bc.fn[d]=function(f){var e=this[0],jif(!e)return nullif(f!==w)return this.each(function(){if(j=wa(this))j.scrollTo(!a?f:c(j).scrollLeft(),a?f:c(j).scrollTop())else this[d]=f})else return(j=wa(e))?\"pageXOffset\"in j?j[a?\"pageYOffset\":\n\"pageXOffset\"]:c.support.boxModel&&j.document.documentElement[d]||j.document.body[d]:e[d]}})c.each([\"Height\",\"Width\"],function(a,b){var d=b.toLowerCase()c.fn[\"inner\"+b]=function(){return this[0]?c.css(this[0],d,false,\"padding\"):null}c.fn[\"outer\"+b]=function(f){return this[0]?c.css(this[0],d,false,f?\"margin\":\"border\"):null}c.fn[d]=function(f){var e=this[0]if(!e)return f==null?null:thisif(c.isFunction(f))return this.each(function(j){var i=c(this)i[d](f.call(this,j,i[d]()))})return\"scrollTo\"in\ne&&e.document?e.document.compatMode===\"CSS1Compat\"&&e.document.documentElement[\"client\"+b]||e.document.body[\"client\"+b]:e.nodeType===9?Math.max(e.documentElement[\"client\"+b],e.body[\"scroll\"+b],e.documentElement[\"scroll\"+b],e.body[\"offset\"+b],e.documentElement[\"offset\"+b]):f===w?c.css(e,d):this.css(d,typeof f===\"string\"?f:f+\"px\")}})A.jQuery=A.$=c})(window)\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/lib/jquery-1.4.2.min.js",
			"file_size": 72174,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 70952,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin Copyright (c) 2007 Paul Bakaus (paul.bakaus@googlemail.com) and Brandon Aaron (brandon.aaron@gmail.com || http://brandonaaron.net)\n * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)\n * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.\n *\n * $LastChangedDate: 2007-12-20 08:43:48 -0600 (Thu, 20 Dec 2007) $\n * $Rev: 4257 $\n *\n * Version: 1.2\n *\n * Requires: jQuery 1.2+\n =end\n(function($){$.dimensions={version:'1.2'}$.each(['Height','Width'],function(i,name){$.fn['inner'+name]=function(){if(!this[0])returnvar torl=name=='Height'?'Top':'Left',borr=name=='Height'?'Bottom':'Right'return this.is(':visible')?this[0]['client'+name]:num(this,name.toLowerCase())+num(this,'padding'+torl)+num(this,'padding'+borr)}$.fn['outer'+name]=function(options){if(!this[0])returnvar torl=name=='Height'?'Top':'Left',borr=name=='Height'?'Bottom':'Right'options=$.extend({margin:false},options||{})var val=this.is(':visible')?this[0]['offset'+name]:num(this,name.toLowerCase())+num(this,'border'+torl+'Width')+num(this,'border'+borr+'Width')+num(this,'padding'+torl)+num(this,'padding'+borr)return val+(options.margin?(num(this,'margin'+torl)+num(this,'margin'+borr)):0)}})$.each(['Left','Top'],function(i,name){$.fn['scroll'+name]=function(val){if(!this[0])returnreturn val!=undefined?this.each(function(){this==window||this==document?window.scrollTo(name=='Left'?val:$(window)['scrollLeft'](),name=='Top'?val:$(window)['scrollTop']()):this['scroll'+name]=val}):this[0]==window||this[0]==document?self[(name=='Left'?'pageXOffset':'pageYOffset')]||$.boxModel&&document.documentElement['scroll'+name]||document.body['scroll'+name]:this[0]['scroll'+name]}})$.fn.extend({position:function(){var left=0,top=0,elem=this[0],offset,parentOffset,offsetParent,resultsif(elem){offsetParent=this.offsetParent()offset=this.offset()parentOffset=offsetParent.offset()offset.top-=num(elem,'marginTop')offset.left-=num(elem,'marginLeft')parentOffset.top+=num(offsetParent,'borderTopWidth')parentOffset.left+=num(offsetParent,'borderLeftWidth')results={top:offset.top-parentOffset.top,left:offset.left-parentOffset.left}}return results},offsetParent:function(){var offsetParent=this[0].offsetParentwhile(offsetParent&&(!/^body|html$/i.test(offsetParent.tagName)&&$.css(offsetParent,'position')=='static'))offsetParent=offsetParent.offsetParentreturn $(offsetParent)}})function num(el,prop){return parseInt($.curCSS(el.jquery?el[0]:el,prop,true))||0}})(jQuery)",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/lib/jquery.dimensions.min.js",
			"file_size": 2514,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 2486,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<!DOCTYPE HTML><html><head>\n<title>Concentration Room</title>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"docs/croom.css\">\n</head><body>\n<div id=\"pgheader\"><div class=\"thereisnosuchthingaspaddingauto\">\n<h1><img alt=\"Concentration Room\" width=\"320\" height=\"128\" src=\"docs/croomlogo320.png\"></h1>\n<ul id=\"headerlist\">\n<li><strong>About</strong>\n<ul>\n<li><a href=\"#overview\">Overview</a>\n<li><a href=\"#requirements\">Requirements</a>\n<li><a href=\"#modes\">Modes</a>\n<li><a href=\"#faq\">FAQ</a>\n</ul>\n<li><a href=\"http://pineight.com/croom/dl\">Download</a>\n</ul>\n\n</div></div><div id=\"pgbody\"><div class=\"thereisnosuchthingaspaddingauto\">\n\n<h2><a name=\"overview\">Overview</a></h2>\n<img src=\"docs/croom_screenshot01.png\" style=\"float:right margin: 0 0 1em 1em\">\n<p>\nAn accident at the biochemical lab has released a neurotoxin,\nand you've been quarantined after exposure.  Maintain your\nsanity by playing a card-matching game.\n</p><p>\nThe table is littered with 10, 20, 36, 52, or 72 face-down cards.\nFlip two cards, and if they show the same emblem, you keep them.\nIf they don't, flip them back.\n</p>\n\n<h2><a name=\"requirements\">System Requirements</a></h2>\n<p>\nConcentration Room is designed for your Nintendo Entertainment System. This version is an NROM-128 (16 KiB PRG, 8 KiB CHR), and it has been tested on a <a title=\"CompactFlash to NES adapter\" href=\"http://www.retrousb.com/index.php?cPath=24\">PowerPak</a>. It also works in PC-based emulators such as <a href=\"http://nestopia.sourceforge.net/\">Nestopia</a> and <a href=\"http://fceux.com/web/home.html\">FCE Ultra</a>.\n</p>\n\n<h2><a name=\"modes\">Modes</a></h2>\n<dl>\n<dt>1 Player Story<dd>\nPlay solitaire to start to work the toxin out of your system.  Then defeat other contaminated technicians and children one on one.\n<dt>1 Player Solitaire<dd>\nSelect a difficulty level, then try to clear the table without having to turn back more than 99 non-matching pairs.\n<dt>2 Players<dd>\nTwo players take turns turning over cards.  They can pass one controller back and forth or use one controller each.  If a pair doesn't match, the other player presses the A and B Buttons and takes a turn. The first player to take half the pairs wins.\n<dt>Vs. CPU<dd>\nLike 2 Players, except the second player is controlled by the NES.\n</dl>\n\n<h2><a name=\"faq\">FAQ (Fully Anticipated Questions)</a></h2>\n<dl>\n<dt>How long have you been working on this?<dd>\nThis is actually my third try. The logo and the earliest background sketch date back to 2000. It got held up because I lacked artistic skill on the 16x16 pixel canvas. The second try in 2007 finalized the appearance of the game, and I did some work on the \"emblem designer\" that will show up in a future release. In late November 2009, I discovered <a title=\"Review of Dian Shi Mali on waluigious.com\" href=\"http://www.waluigious.com/2008/09/in-which-dian-shi-ma-li.html\"><i>Dian Shi Mali</i></a>, a <a title=\"Dian Shi Mali article on Wikipedia\" href=\"http://en.wikipedia.org/wiki/Dian_Shi_Mali\">gambling simulator</a> for the Famicom (Asian version of the NES) that also uses 16x16 pixel emblems. After a few hours of <a title=\"Video of Dian Shi Mali play\" href=\"http://www.youtube.com/watch?v=4s1mAPISOzw\">pushing Start to rich</a>, I was inspired to create a set of 36 emblems. By then, I was ready to code most of the game in spare time during December 2009.\n<dt>Why are you still making games that don't scroll? You're better than that, as I saw in the <a title=\"Video of a homebrew sidescroller engine\" href=\"http://www.youtube.com/watch?v=GY693NxC9xU\">President video</a>.<dd>\nI saw it as something simple that I could finish fairly quickly in order to push falling block games off <a href=\"http://www.pineight.com/\">the front page of my web site</a>.\n<dt>GameTek already made two other Concentration games on the NES. Why did you make this one?<dd>\nThe controls in <i>I Can Remember</i> nor <i>Classic Concentration</i> are clunky. Neither of them features a full 72-card deck. And of course, they're not <a title=\"Free Software Definition (free speech, not free beer)\" href=\"http://www.gnu.org/philosophy/free-sw.html\">free software</a>.\n<dt>In vs. modes, why end the game at half the cards matched instead of one more than half?<dd>\nPairs early in a game require more skill to clear, and the last pair requires absolutely no skill.  For example, a 20-card game tied at 4-4 will always end up 6-4.  And at 5-3, the player in the lead likely got more early matches.  So if we award no points for the last pair, the first player to reach half always wins.\n<dt>What's that font?<dd>\nThe font in the game's logo is called <a href=\"http://www.windowfonts.com/fonts/wasted-collection.html\">Wasted Collection</a>. The font in <a title=\"Launcher for small programs for Game Boy Advance\" href=\"http://www.pineight.com/gba/#mbmenu\">Multiboot Menu</a> was based on it. The monospace font for menu text originally appeared in the \"Who's Cuter\" demo and is based on <a href=\"http://en.wikipedia.org/wiki/Chicago_%28typeface%29\">Apple Chicago by Susan Kare</a>. (Another fun font is on <a href=\"http://www.angelfire.com/stars5/tkcpics2/wildworld/#downloads\">this page</a>.)\n<dt>Are you a Nazi?<dd>\nNo, and that's why this game is called Concentration <em>Room,</em> not <a title=\"National Lampoon video\" href=\"http://www.youtube.com/watch?v=cXeHn9k27Iw\">Concentration Camp</a>.\n</dl>\n<h2>Legal</h2>\n<p>\nCopyright &copy 2010 Damian Yerrick &ltcroom&#64pineight.com&gt\n</p><p>\nCopying and distribution of this file, with or without modification, are permitted in any medium without royalty provided the copyright notice and this notice are preserved.  This file is offered as-is, without any warranty.\n</p><p>\nThe accompanying program is free software: you can redistribute it and/or modify it under the terms of the <a href=\"http://www.gnu.org/copyleft/gpl.html\">GNU General Public License</a>, version 3 or later. As a special exception, you may copy and distribute exact copies of the program, as published by Damian Yerrick, in iNES or UNIF executable form without source code.\n</p><p>\nThis product is not sponsored or endorsed by Nintendo, Ravensburger, Hasbro, Mattel, Quaker Oats, NBC Universal, GameTek, or Apple.\n</p>\n</div></div>\n</body></html>\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/roms/croom/README.html",
			"file_size": 6240,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 6235,
				"line_ending": "Unix"
			}
		},
		{
			"contents": " _     _     __     ___\n| |   (_)   / /    / __|\n| |    _   / /_   | /__\n| |   | | |  _ \\  |___ \\\n| |_  | | | (_) | .___) |\n \\__|_| |  \\___/   \\___/\n    |__/\n\nLJ65\nan NES game\nby Damian Yerrick\n\nSee the legal section below.\n\n_____________________________________________________________________\nIntroduction\n\nLJ65 is an action puzzle game for NES comparable to the popular\ngame Tetris(R), except distributed as free software and with more\nresponsive movement controls.\n\n_____________________________________________________________________\nInstalling\n\nLJ65 is designed to run on Nintendo Entertainment System (called\nFamily Computer in Japan) and accurate NES emulators.  It is\ndistributed as source code and an iNES format binary, using mapper\n0 (NROM).  Separate binaries for NTSC and PAL systems are provided.\n\nThis program has been tested on NES using a PowerPak.  It also works\non the current versions of Nintendulator, Nestopia, and FCE Ultra.\n(Do not use the outdated Nesticle emulator anymore.)\n\nTo run LJ65 on an NES without buying a PowerPak, you'll need to\nsolder together an NES cartridge with at least 16 KB of PRG space\nand 4 KB of CHR space.  A modded NROM-128 or CNROM board should be\nfine.  Chris Covell has put together instructions on how to replace\nNES Game Paks' mask ROM chips with writable EEPROMs.\nhttp://www.zyx.com/chrisc/solarwarscart.html\n\nTo build LJ65 from source code, you will need\n  * CC65 (from http://www.cc65.org/ but you don't need the\n    non-free C compiler)\n  * GNU Make and Coreutils (included with most Linux distributions\n    Windows users can use MSYS from http://www.devkitpro.org/)\n\nModify the makefile to point to where you have CC65 installed.\nThen run make.  (Windows users can run mk.bat instead, which runs\nmake in the correct folder.)  On a desktop PC from late 2000 with\na Pentium III 866 MHz, recompiling the whole thing takes about one\nsecond.  To build some data conversion tools, you'll need a GNU C\ncompiler such as MinGW I have included Windows binaries of the\nconversion tools for those who want to quickly get into hacking\non LJ65.\n\n_____________________________________________________________________\nGame controls\n\nTitle screen:\n  Start: Show playfields.\nGame over:\n  A+B: Join game.\nMenu:\n  Control Pad up, down: Move cursor.\n  Control Pad left, right: Change option at cursor.\n  A: Start game.\nGame:\n  Control Pad left, right, down: Move piece.\n  Control Pad up: Move piece to floor.\n  Control Pad up, down once landed: Lock piece into place.\n  A: Rotate piece clockwise.\n  B: Rotate piece anticlockwise.\n  Start: Pause game.\n\n_____________________________________________________________________\nPlay\n\nAt first, press Start to skip past each of the informational screens.\nThen press Start at the title screen to display the playfields.\nAt this point, either player can press the A and B buttons at the\nsame time to begin playing.\n\nThe pieces in LJ65 are called tetrominoes.  (The word comes from\ntetra-, a Greek prefix meaning four, and -omino, as in domino or\npentomino.)  Each of the seven tetrominoes is made of four square\nblocks and named after a letter of the Latin alphabet that it\nresembles:\n           _           _   ___     ___     _     ___\n _______  | |___   ___| | |   |  _|  _|  _| |_  |_  |_\n|_______| |_____| |_____| |___| |___|   |_____|   |___|\n    I        J       L      O      S       T       Z\n\nWhen you start the game, a tetromino will begin to fall slowly into\nthe bin.  You can move it with the Control Pad and rotate it with\nthe A or B button.\n\nThe goal of LJ65 is to make complete horizontal lines by\npacking the pieces into the bin with no holes.  If you complete\na line, everything above it will move down a row.  If you complete\nmore than one line with a piece, you get more points.\n\nAs you play, the pieces will gradually fall faster, making the game\nmore difficult.  At some point, the pieces will fall so fast that\nthey appear immediately at the bottom row of the playfield.  If you\nfill the bin to the top, to the point where more pieces cannot enter,\nyou \"top out\" and the game ends.\n\nIf you have an overhang in the blocks, you can slide another\npiece under it by holding Left or Right as the new piece passes\nby the overhang:\n       _\n      | |\n     _| |\n    |___|\n   _            _   _        _ _\n _| |     =>  _| | | | =>  _| | |\n|  _|        |  _|_| |    |  _| |\n|_|          |_| |___|    |_|___|\n\nOr in some cases, you can rotate pieces into very tight spaces:\n     _\n   _| |\n  |_  |\n    |_|\n _     ___      _   _ ___      _     ___\n| |   |_  | => | |_| |_  | => | |___|_  |\n| |_   _| |    | |_  |_| |    | |_   _| |\n|___| |___|    |___|_|___|    |___|_|___|\n\n_____________________________________________________________________\nRotation systems\n\nLJ65 supports two rotation systems, which it calls \"Center\" and\n\"Bottom\".  Center implements rules more familiar to Western players,\nwhile Bottom pleases fans of the Japanese arcade tradition.\n\nIn Center, pieces start out with their flat side down, and they\nrotate around the center of an imaginary 3x3 or 4x4 cell bounding\nbox.  If this is blocked, try one square to the right, one square to\nthe left, and finally one square up.\nUp locks a piece into place immediately, and down waits for another\npress of up or down before locking the piece.\nAfter a piece locks, the next one comes out immediately, but after\nthe pieces have sped up enough, the next piece waits a bit.\nColors match the so-called Guideline: I is turquoise.\n\n. [].   . [].   . . .   . [].       . [][]  . [].   . . .   []. .\n[][][]  . [][]  [][][]  [][].       [][].   . [][]  . [][]  [][].\n. . .   . [].   . [].   . [].       . . .   . . []  [][].   . [].\nFigure: T and S rotation in Center\n\nIn Bottom, the J, L, S, T, and Z pieces start out with their flat\nside up, and they rotate to stay in contact with the bottom of an\nimaginary 3x3 cell box.  S and Z pieces also keep a block in the\nbottom center of this box.  If this is blocked by a wall or a block\noutside the piece's central column, then try one square to the right,\none square to the left, and finally (in the case of T) one square up.\nDown locks on contact, and up waits for another press of up or down\nto lock.  After a piece locks, the next one waits a bit to come out.\nColors match those from a game with a monkey: I is red.\n\n. . .   . [].   . . .   . [].       . . .   []. .   . . .   []. .\n[][][]  [][].   . [].   . [][]      . [][]  [][].   . [][]  [][].\n. [].   . [].   [][][]  . [].       [][].   . [].   [][].   . [].\nFigure: T and S rotation in Bottom\n\n_____________________________________________________________________\nScoring\n\nUse up or down on the Control Pad to drop pieces, and you'll get\none point per row that the piece moves down.\n\nYou also get points for clearing lines.  Clearing more lines\nwith a single piece is worth more points:\n\nSINGLE   (1 line with any piece)       1 * 1 * 100 =  100 points\nDOUBLE   (2 lines with any piece)      2 * 2 * 100 =  400 points\nTRIPLE   (3 lines with I, J, or L)     3 * 3 * 100 =  900 points\nHOME RUN (4 lines with I only)         4 * 4 * 100 = 1600 points\n\nMaking lines with consecutive pieces is called a combo and is\nworth even more points.  In general, the score for a line clear\nis the number of lines cleared with this piece, times the number\nof lines cleared so far in this combo, times 100.  For example,\na double-triple-single combo is worth a total of 2300 points:\n\n2 lines      2 * 2 * 100 =  200 points\n3 lines      3 * 5 * 100 = 1500 points\n1 line       1 * 6 * 100 =  600 points\n\nWhen you start clearing lines, the game shows how many lines you\nmade in this combo.  If you leave a 2-block-wide hole at the side\nof the bin, you might manage to make a combo of 12 lines or more.\nBut then you have to weigh this against keeping your stack low\nand earning more drop bonus.\n\nThere are some grandmasters who can get millions of points in\nsome puzzle games.  There exists a known corner case in this\ngame's score computation, and scoring is expected to fail beyond\n6,553,000 points.\n\nIf two players are playing, and you have GARBAGE turned on in the\nmenu, and you complete more than one line with a piece, the other\nplayer's field rises by one or more rows:\n\nDOUBLE:   1 line\nTRIPLE:   2 lines\nHOME RUN: 4 lines\n\nThis is not affected by combos.\n\n_____________________________________________________________________\nKeypress codes\n\nSome of the lesser-used features of the game are hidden so that\nplayers interested in the most common features don't become confused.\n\nAt title screen:\n  * B + Left hides the ghost piece.\n\n_____________________________________________________________________\nQuestions\n\nQ: Isn't this a copy of Tetris?\n\nYes, in part, but we don't believe it infringes Tetris Holding's\ncopyright.  It was developed by people who had not read the source\ncode of Tetris.  We disagree with Tetris Holding's claim of broad\npatent-like rights over the game.  Any similarity between LJ65 and\nTetris is a consequence of common methods of operation, which are\nexcluded from U.S. copyright (17 USC 102(b)).\n\nQ: Where's (feature that has appeared in another game)?\n\nIf it's mentioned in the \"future\" list at the bottom of CHANGES.txt,\nI know about it, and you may see some of those issues resolved in\nthe next version.  Otherwise, I'd be glad to take suggestions,\nprovided that they aren't \"network play with no lag\" or \"make the\ngame just like that Japanese game I saw on YouTube\".\n\nQ: Why aren't the blocks square on my TV?\n\nIn NTSC, a square pixel is 7/24 of a color subcarrier period wide\nin 480i mode or 7/12 of a period in the so-called \"240p\" mode.\nBut like the video chipsets in most 8-bit and 16-bit computing\nplatforms, the NES PPU generates pixels that are not square:\n8/12 of a period instead of 7/12.  Games for PC, Apple II, or any\nother platform with frame buffer video could correct for this by\ndrawing differently sized tiles, but games for NES are limited to\nan 8x8 pixel tile grid.  PAL video and widescreen televisions make\nthe problem even more pronounced.\n\nQ: Why do some pieces change color subtly when they land?\n\nThe NES's tile size is 8x8 pixels, but the \"attribute table\"\nassigns palettes to 16x16 pixel areas, or clusters of 2x2 tiles.\nOnly three colors plus the backdrop color can appear in each\ncolor area.  So the game approximates the color of each piece as a\ncombination of blue, orange, and green throughout the screen.\n\nThe MMC5 mapper has ExGrafix, which allows 8x8 pixel color areas.\nBut the only source of MMC5 hardware is used copies of Castlevania\nIII: Dracula's Curse and Koei's war sims, unlike the discrete mapper\nboards that retrousb.com sells.\n\nQ: Who is the fellow on How to Play, and where are his legs?\n\nWho are you, and where is your tail? -)\n\n_____________________________________________________________________\nCredits\n\nProgram and graphics by Damian Yerrick\nOriginal game design by Alexey Pajitnov\nNES assembler toolchain by Ullrich von Bassewitz\nNES emulators by Xodnizel, Martin Freij, and Quietust\nNES documentation by contributors to http://nesdevwiki.org/\n\nMusic:\n  TEMP is \"Tetris New Melody (OCRemoved)\" by Am.Fm.GM\n  K.231 is \"Leck mich im Arsch\" by Wolfgang A. Mozart\n\n_____________________________________________________________________\nLegal\n\nCopyright (c) 2009 Damian Yerrick\n\nThis manual is under the following license:\n\n  This work is provided 'as-is', without any express or implied\n  warranty. In no event will the authors be held liable for any\n  damages arising from the use of this work.\n\n  Permission is granted to anyone to use this work for any\n  purpose, including commercial applications, and to alter it and\n  redistribute it freely, subject to the following restrictions:\n\n   1. The origin of this work must not be misrepresented you\n      must not claim that you wrote the original work. If you use\n      this work in a product, an acknowledgment in the product\n      documentation would be appreciated but is not required.\n   2. Altered source versions must be plainly marked as such,\n      and must not be misrepresented as being the original work.\n   3. This notice may not be removed or altered from any\n      source distribution.\n\n  The term \"source\" refers to the preferred form of a work for making\n  changes to it. \n\nThe LJ65 software described by this manual is distributed under\nthe GNU General Public License, version 2 or later, with ABSOLUTELY\nNO WARRANTY.  See GPL.txt for details.\n\nLJ65 is not a Tetris product and is not endorsed by Tetris Holding.\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/roms/lj65/README.txt",
			"file_size": 12821,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 12503,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "=begin\nJSNES, based on Jamie Sanders' vNES\nCopyright (C) 2010 Ben Firshman\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n=end\n\nJSNES.CPU = function(nes) {\n    this.nes = nes\n    \n    // Keep Chrome happy\n    this.mem = null\n    this.REG_ACC = null\n    this.REG_X = null\n    this.REG_Y = null\n    this.REG_SP = null\n    this.REG_PC = null\n    this.REG_PC_NEW = null\n    this.REG_STATUS = null\n    this.F_CARRY = null\n    this.F_DECIMAL = null\n    this.F_INTERRUPT = null\n    this.F_INTERRUPT_NEW = null\n    this.F_OVERFLOW = null\n    this.F_SIGN = null\n    this.F_ZERO = null\n    this.F_NOTUSED = null\n    this.F_NOTUSED_NEW = null\n    this.F_BRK = null\n    this.F_BRK_NEW = null\n    this.opdata = null\n    this.cyclesToHalt = null\n    this.crash = null\n    this.irqRequested = null\n    this.irqType = null\n    \n    this.reset()\n}\n\nJSNES.CPU.prototype = {\n    // IRQ Types\n    IRQ_NORMAL: 0,\n    IRQ_NMI: 1,\n    IRQ_RESET: 2,\n    \n    reset: function() {\n        // Main memory \n        this.mem = new Array(0x10000)\n        \n        for (var i=0 i < 0x2000 i++) {\n            this.mem[i] = 0xFF\n        }\n        for (var p=0 p < 4 p++) {\n            var i = p*0x800\n            this.mem[i+0x008] = 0xF7\n            this.mem[i+0x009] = 0xEF\n            this.mem[i+0x00A] = 0xDF\n            this.mem[i+0x00F] = 0xBF\n        }\n        for (var i=0x2001 i < this.mem.length i++) {\n            this.mem[i] = 0\n        }\n        \n        // CPU Registers:\n        this.REG_ACC = 0\n        this.REG_X = 0\n        this.REG_Y = 0\n        // Reset Stack pointer:\n        this.REG_SP = 0x01FF\n        // Reset Program counter:\n        this.REG_PC = 0x8000-1\n        this.REG_PC_NEW = 0x8000-1\n        // Reset Status register:\n        this.REG_STATUS = 0x28\n        \n        this.setStatus(0x28)\n        \n        // Set flags:\n        this.F_CARRY = 0\n        this.F_DECIMAL = 0\n        this.F_INTERRUPT = 1\n        this.F_INTERRUPT_NEW = 1\n        this.F_OVERFLOW = 0\n        this.F_SIGN = 0\n        this.F_ZERO = 1\n\n        this.F_NOTUSED = 1\n        this.F_NOTUSED_NEW = 1\n        this.F_BRK = 1\n        this.F_BRK_NEW = 1\n        \n        this.opdata = new JSNES.CPU.OpData().opdata\n        this.cyclesToHalt = 0\n        \n        // Reset crash flag:\n        this.crash = false\n        \n        // Interrupt notification:\n        this.irqRequested = false\n        this.irqType = null\n\n    },\n    \n    // Emulates a single CPU instruction, returns the number of cycles\n    emulate: function() {\n        var temp\n        var add\n        \n        // Check interrupts:\n        if(this.irqRequested){\n            temp =\n                (this.F_CARRY)|\n                ((this.F_ZERO===0?1:0)<<1)|\n                (this.F_INTERRUPT<<2)|\n                (this.F_DECIMAL<<3)|\n                (this.F_BRK<<4)|\n                (this.F_NOTUSED<<5)|\n                (this.F_OVERFLOW<<6)|\n                (this.F_SIGN<<7)\n\n            this.REG_PC_NEW = this.REG_PC\n            this.F_INTERRUPT_NEW = this.F_INTERRUPT\n            switch(this.irqType){\n                case 0: {\n                    // Normal IRQ:\n                    if(this.F_INTERRUPT!=0){\n                        ////System.out.println(\"Interrupt was masked.\")\n                        break\n                    }\n                    doIrq(temp)\n                    ////System.out.println(\"Did normal IRQ. I=\"+this.F_INTERRUPT)\n                    break\n                }case 1:{\n                    // NMI:\n                    this.doNonMaskableInterrupt(temp)\n                    break\n\n                }case 2:{\n                    // Reset:\n                    this.doResetInterrupt()\n                    break\n                }\n            }\n\n            this.REG_PC = this.REG_PC_NEW\n            this.F_INTERRUPT = this.F_INTERRUPT_NEW\n            this.F_BRK = this.F_BRK_NEW\n            this.irqRequested = false\n        }\n\n        var opinf = this.opdata[this.nes.mmap.load(this.REG_PC+1)]\n        var cycleCount = (opinf>>24)\n        var cycleAdd = 0\n\n        // Find address mode:\n        var addrMode = (opinf >> 8) & 0xFF\n\n        // Increment PC by number of op bytes:\n        var opaddr = this.REG_PC\n        this.REG_PC += ((opinf >> 16) & 0xFF)\n        \n        var addr = 0\n        switch(addrMode){\n            case 0:{\n                // Zero Page mode. Use the address given after the opcode, \n                // but without high byte.\n                addr = this.load(opaddr+2)\n                break\n\n            }case 1:{\n                // Relative mode.\n                addr = this.load(opaddr+2)\n                if(addr<0x80){\n                    addr += this.REG_PC\n                }else{\n                    addr += this.REG_PC-256\n                }\n                break\n            }case 2:{\n                // Ignore. Address is implied in instruction.\n                break\n            }case 3:{\n                // Absolute mode. Use the two bytes following the opcode as \n                // an address.\n                addr = this.load16bit(opaddr+2)\n                break\n            }case 4:{\n                // Accumulator mode. The address is in the accumulator \n                // register.\n                addr = this.REG_ACC\n                break\n            }case 5:{\n                // Immediate mode. The value is given after the opcode.\n                addr = this.REG_PC\n                break\n            }case 6:{\n                // Zero Page Indexed mode, X as index. Use the address given \n                // after the opcode, then add the\n                // X register to it to get the final address.\n                addr = (this.load(opaddr+2)+this.REG_X)&0xFF\n                break\n            }case 7:{\n                // Zero Page Indexed mode, Y as index. Use the address given \n                // after the opcode, then add the\n                // Y register to it to get the final address.\n                addr = (this.load(opaddr+2)+this.REG_Y)&0xFF\n                break\n            }case 8:{\n                // Absolute Indexed Mode, X as index. Same as zero page \n                // indexed, but with the high byte.\n                addr = this.load16bit(opaddr+2)\n                if((addr&0xFF00)!=((addr+this.REG_X)&0xFF00)){\n                    cycleAdd = 1\n                }\n                addr+=this.REG_X\n                break\n            }case 9:{\n                // Absolute Indexed Mode, Y as index. Same as zero page \n                // indexed, but with the high byte.\n                addr = this.load16bit(opaddr+2)\n                if((addr&0xFF00)!=((addr+this.REG_Y)&0xFF00)){\n                    cycleAdd = 1\n                }\n                addr+=this.REG_Y\n                break\n            }case 10:{\n                // Pre-indexed Indirect mode. Find the 16-bit address \n                // starting at the given location plus\n                // the current X register. The value is the contents of that \n                // address.\n                addr = this.load(opaddr+2)\n                if((addr&0xFF00)!=((addr+this.REG_X)&0xFF00)){\n                    cycleAdd = 1\n                }\n                addr+=this.REG_X\n                addr&=0xFF\n                addr = this.load16bit(addr)\n                break\n            }case 11:{\n                // Post-indexed Indirect mode. Find the 16-bit address \n                // contained in the given location\n                // (and the one following). Add to that address the contents \n                // of the Y register. Fetch the value\n                // stored at that adress.\n                addr = this.load16bit(this.load(opaddr+2))\n                if((addr&0xFF00)!=((addr+this.REG_Y)&0xFF00)){\n                    cycleAdd = 1\n                }\n                addr+=this.REG_Y\n                break\n            }case 12:{\n                // Indirect Absolute mode. Find the 16-bit address contained \n                // at the given location.\n                addr = this.load16bit(opaddr+2)// Find op\n                if(addr < 0x1FFF) {\n                    addr = this.mem[addr] + (this.mem[(addr & 0xFF00) | (((addr & 0xFF) + 1) & 0xFF)] << 8)// Read from address given in op\n                }\n                else{\n                    addr = this.nes.mmap.load(addr) + (this.nes.mmap.load((addr & 0xFF00) | (((addr & 0xFF) + 1) & 0xFF)) << 8)\n                }\n                break\n\n            }\n\n        }\n        // Wrap around for addresses above 0xFFFF:\n        addr&=0xFFFF\n\n        // ----------------------------------------------------------------------------------------------------\n        // Decode & execute instruction:\n        // ----------------------------------------------------------------------------------------------------\n\n        // This should be compiled to a jump table.\n        switch(opinf&0xFF){\n            case 0:{\n                // *******\n                // * ADC *\n                // *******\n\n                // Add with carry.\n                temp = this.REG_ACC + this.load(addr) + this.F_CARRY\n                this.F_OVERFLOW = ((!(((this.REG_ACC ^ this.load(addr)) & 0x80)!=0) && (((this.REG_ACC ^ temp) & 0x80))!=0)?1:0)\n                this.F_CARRY = (temp>255?1:0)\n                this.F_SIGN = (temp>>7)&1\n                this.F_ZERO = temp&0xFF\n                this.REG_ACC = (temp&255)\n                cycleCount+=cycleAdd\n                break\n\n            }case 1:{\n                // *******\n                // * AND *\n                // *******\n\n                // AND memory with accumulator.\n                this.REG_ACC = this.REG_ACC & this.load(addr)\n                this.F_SIGN = (this.REG_ACC>>7)&1\n                this.F_ZERO = this.REG_ACC\n                //this.REG_ACC = temp\n                if(addrMode!=11)cycleCount+=cycleAdd // PostIdxInd = 11\n                break\n            }case 2:{\n                // *******\n                // * ASL *\n                // *******\n\n                // Shift left one bit\n                if(addrMode == 4){ // ADDR_ACC = 4\n\n                    this.F_CARRY = (this.REG_ACC>>7)&1\n                    this.REG_ACC = (this.REG_ACC<<1)&255\n                    this.F_SIGN = (this.REG_ACC>>7)&1\n                    this.F_ZERO = this.REG_ACC\n\n                }else{\n\n                    temp = this.load(addr)\n                    this.F_CARRY = (temp>>7)&1\n                    temp = (temp<<1)&255\n                    this.F_SIGN = (temp>>7)&1\n                    this.F_ZERO = temp\n                    this.write(addr, temp)\n\n                }\n                break\n\n            }case 3:{\n\n                // *******\n                // * BCC *\n                // *******\n\n                // Branch on carry clear\n                if(this.F_CARRY == 0){\n                    cycleCount += ((opaddr&0xFF00)!=(addr&0xFF00)?2:1)\n                    this.REG_PC = addr\n                }\n                break\n\n            }case 4:{\n\n                // *******\n                // * BCS *\n                // *******\n\n                // Branch on carry set\n                if(this.F_CARRY == 1){\n                    cycleCount += ((opaddr&0xFF00)!=(addr&0xFF00)?2:1)\n                    this.REG_PC = addr\n                }\n                break\n\n            }case 5:{\n\n                // *******\n                // * BEQ *\n                // *******\n\n                // Branch on zero\n                if(this.F_ZERO == 0){\n                    cycleCount += ((opaddr&0xFF00)!=(addr&0xFF00)?2:1)\n                    this.REG_PC = addr\n                }\n                break\n\n            }case 6:{\n\n                // *******\n                // * BIT *\n                // *******\n\n                temp = this.load(addr)\n                this.F_SIGN = (temp>>7)&1\n                this.F_OVERFLOW = (temp>>6)&1\n                temp &= this.REG_ACC\n                this.F_ZERO = temp\n                break\n\n            }case 7:{\n\n                // *******\n                // * BMI *\n                // *******\n\n                // Branch on negative result\n                if(this.F_SIGN == 1){\n                    cycleCount++\n                    this.REG_PC = addr\n                }\n                break\n\n            }case 8:{\n\n                // *******\n                // * BNE *\n                // *******\n\n                // Branch on not zero\n                if(this.F_ZERO != 0){\n                    cycleCount += ((opaddr&0xFF00)!=(addr&0xFF00)?2:1)\n                    this.REG_PC = addr\n                }\n                break\n\n            }case 9:{\n\n                // *******\n                // * BPL *\n                // *******\n\n                // Branch on positive result\n                if(this.F_SIGN == 0){\n                    cycleCount += ((opaddr&0xFF00)!=(addr&0xFF00)?2:1)\n                    this.REG_PC = addr\n                }\n                break\n\n            }case 10:{\n\n                // *******\n                // * BRK *\n                // *******\n\n                this.REG_PC+=2\n                this.push((this.REG_PC>>8)&255)\n                this.push(this.REG_PC&255)\n                this.F_BRK = 1\n\n                this.push(\n                    (this.F_CARRY)|\n                    ((this.F_ZERO==0?1:0)<<1)|\n                    (this.F_INTERRUPT<<2)|\n                    (this.F_DECIMAL<<3)|\n                    (this.F_BRK<<4)|\n                    (this.F_NOTUSED<<5)|\n                    (this.F_OVERFLOW<<6)|\n                    (this.F_SIGN<<7)\n                )\n\n                this.F_INTERRUPT = 1\n                //this.REG_PC = load(0xFFFE) | (load(0xFFFF) << 8)\n                this.REG_PC = this.load16bit(0xFFFE)\n                this.REG_PC--\n                break\n\n            }case 11:{\n\n                // *******\n                // * BVC *\n                // *******\n\n                // Branch on overflow clear\n                if(this.F_OVERFLOW == 0){\n                    cycleCount += ((opaddr&0xFF00)!=(addr&0xFF00)?2:1)\n                    this.REG_PC = addr\n                }\n                break\n\n            }case 12:{\n\n                // *******\n                // * BVS *\n                // *******\n\n                // Branch on overflow set\n                if(this.F_OVERFLOW == 1){\n                    cycleCount += ((opaddr&0xFF00)!=(addr&0xFF00)?2:1)\n                    this.REG_PC = addr\n                }\n                break\n\n            }case 13:{\n\n                // *******\n                // * CLC *\n                // *******\n\n                // Clear carry flag\n                this.F_CARRY = 0\n                break\n\n            }case 14:{\n\n                // *******\n                // * CLD *\n                // *******\n\n                // Clear decimal flag\n                this.F_DECIMAL = 0\n                break\n\n            }case 15:{\n\n                // *******\n                // * CLI *\n                // *******\n\n                // Clear interrupt flag\n                this.F_INTERRUPT = 0\n                break\n\n            }case 16:{\n\n                // *******\n                // * CLV *\n                // *******\n\n                // Clear overflow flag\n                this.F_OVERFLOW = 0\n                break\n\n            }case 17:{\n\n                // *******\n                // * CMP *\n                // *******\n\n                // Compare memory and accumulator:\n                temp = this.REG_ACC - this.load(addr)\n                this.F_CARRY = (temp>=0?1:0)\n                this.F_SIGN = (temp>>7)&1\n                this.F_ZERO = temp&0xFF\n                cycleCount+=cycleAdd\n                break\n\n            }case 18:{\n\n                // *******\n                // * CPX *\n                // *******\n\n                // Compare memory and index X:\n                temp = this.REG_X - this.load(addr)\n                this.F_CARRY = (temp>=0?1:0)\n                this.F_SIGN = (temp>>7)&1\n                this.F_ZERO = temp&0xFF\n                break\n\n            }case 19:{\n\n                // *******\n                // * CPY *\n                // *******\n\n                // Compare memory and index Y:\n                temp = this.REG_Y - this.load(addr)\n                this.F_CARRY = (temp>=0?1:0)\n                this.F_SIGN = (temp>>7)&1\n                this.F_ZERO = temp&0xFF\n                break\n\n            }case 20:{\n\n                // *******\n                // * DEC *\n                // *******\n\n                // Decrement memory by one:\n                temp = (this.load(addr)-1)&0xFF\n                this.F_SIGN = (temp>>7)&1\n                this.F_ZERO = temp\n                this.write(addr, temp)\n                break\n\n            }case 21:{\n\n                // *******\n                // * DEX *\n                // *******\n\n                // Decrement index X by one:\n                this.REG_X = (this.REG_X-1)&0xFF\n                this.F_SIGN = (this.REG_X>>7)&1\n                this.F_ZERO = this.REG_X\n                break\n\n            }case 22:{\n\n                // *******\n                // * DEY *\n                // *******\n\n                // Decrement index Y by one:\n                this.REG_Y = (this.REG_Y-1)&0xFF\n                this.F_SIGN = (this.REG_Y>>7)&1\n                this.F_ZERO = this.REG_Y\n                break\n\n            }case 23:{\n\n                // *******\n                // * EOR *\n                // *******\n\n                // XOR Memory with accumulator, store in accumulator:\n                this.REG_ACC = (this.load(addr)^this.REG_ACC)&0xFF\n                this.F_SIGN = (this.REG_ACC>>7)&1\n                this.F_ZERO = this.REG_ACC\n                cycleCount+=cycleAdd\n                break\n\n            }case 24:{\n\n                // *******\n                // * INC *\n                // *******\n\n                // Increment memory by one:\n                temp = (this.load(addr)+1)&0xFF\n                this.F_SIGN = (temp>>7)&1\n                this.F_ZERO = temp\n                this.write(addr, temp&0xFF)\n                break\n\n            }case 25:{\n\n                // *******\n                // * INX *\n                // *******\n\n                // Increment index X by one:\n                this.REG_X = (this.REG_X+1)&0xFF\n                this.F_SIGN = (this.REG_X>>7)&1\n                this.F_ZERO = this.REG_X\n                break\n\n            }case 26:{\n\n                // *******\n                // * INY *\n                // *******\n\n                // Increment index Y by one:\n                this.REG_Y++\n                this.REG_Y &= 0xFF\n                this.F_SIGN = (this.REG_Y>>7)&1\n                this.F_ZERO = this.REG_Y\n                break\n\n            }case 27:{\n\n                // *******\n                // * JMP *\n                // *******\n\n                // Jump to new location:\n                this.REG_PC = addr-1\n                break\n\n            }case 28:{\n\n                // *******\n                // * JSR *\n                // *******\n\n                // Jump to new location, saving return address.\n                // Push return address on stack:\n                this.push((this.REG_PC>>8)&255)\n                this.push(this.REG_PC&255)\n                this.REG_PC = addr-1\n                break\n\n            }case 29:{\n\n                // *******\n                // * LDA *\n                // *******\n\n                // Load accumulator with memory:\n                this.REG_ACC = this.load(addr)\n                this.F_SIGN = (this.REG_ACC>>7)&1\n                this.F_ZERO = this.REG_ACC\n                cycleCount+=cycleAdd\n                break\n\n            }case 30:{\n\n                // *******\n                // * LDX *\n                // *******\n\n                // Load index X with memory:\n                this.REG_X = this.load(addr)\n                this.F_SIGN = (this.REG_X>>7)&1\n                this.F_ZERO = this.REG_X\n                cycleCount+=cycleAdd\n                break\n\n            }case 31:{\n\n                // *******\n                // * LDY *\n                // *******\n\n                // Load index Y with memory:\n                this.REG_Y = this.load(addr)\n                this.F_SIGN = (this.REG_Y>>7)&1\n                this.F_ZERO = this.REG_Y\n                cycleCount+=cycleAdd\n                break\n\n            }case 32:{\n\n                // *******\n                // * LSR *\n                // *******\n\n                // Shift right one bit:\n                if(addrMode == 4){ // ADDR_ACC\n\n                    temp = (this.REG_ACC & 0xFF)\n                    this.F_CARRY = temp&1\n                    temp >>= 1\n                    this.REG_ACC = temp\n\n                }else{\n\n                    temp = this.load(addr) & 0xFF\n                    this.F_CARRY = temp&1\n                    temp >>= 1\n                    this.write(addr, temp)\n\n                }\n                this.F_SIGN = 0\n                this.F_ZERO = temp\n                break\n\n            }case 33:{\n\n                // *******\n                // * NOP *\n                // *******\n\n                // No OPeration.\n                // Ignore.\n                break\n\n            }case 34:{\n\n                // *******\n                // * ORA *\n                // *******\n\n                // OR memory with accumulator, store in accumulator.\n                temp = (this.load(addr)|this.REG_ACC)&255\n                this.F_SIGN = (temp>>7)&1\n                this.F_ZERO = temp\n                this.REG_ACC = temp\n                if(addrMode!=11)cycleCount+=cycleAdd // PostIdxInd = 11\n                break\n\n            }case 35:{\n\n                // *******\n                // * PHA *\n                // *******\n\n                // Push accumulator on stack\n                this.push(this.REG_ACC)\n                break\n\n            }case 36:{\n\n                // *******\n                // * PHP *\n                // *******\n\n                // Push processor status on stack\n                this.F_BRK = 1\n                this.push(\n                    (this.F_CARRY)|\n                    ((this.F_ZERO==0?1:0)<<1)|\n                    (this.F_INTERRUPT<<2)|\n                    (this.F_DECIMAL<<3)|\n                    (this.F_BRK<<4)|\n                    (this.F_NOTUSED<<5)|\n                    (this.F_OVERFLOW<<6)|\n                    (this.F_SIGN<<7)\n                )\n                break\n\n            }case 37:{\n\n                // *******\n                // * PLA *\n                // *******\n\n                // Pull accumulator from stack\n                this.REG_ACC = this.pull()\n                this.F_SIGN = (this.REG_ACC>>7)&1\n                this.F_ZERO = this.REG_ACC\n                break\n\n            }case 38:{\n\n                // *******\n                // * PLP *\n                // *******\n\n                // Pull processor status from stack\n                temp = this.pull()\n                this.F_CARRY     = (temp   )&1\n                this.F_ZERO      = (((temp>>1)&1)==1)?0:1\n                this.F_INTERRUPT = (temp>>2)&1\n                this.F_DECIMAL   = (temp>>3)&1\n                this.F_BRK       = (temp>>4)&1\n                this.F_NOTUSED   = (temp>>5)&1\n                this.F_OVERFLOW  = (temp>>6)&1\n                this.F_SIGN      = (temp>>7)&1\n\n                this.F_NOTUSED = 1\n                break\n\n            }case 39:{\n\n                // *******\n                // * ROL *\n                // *******\n\n                // Rotate one bit left\n                if(addrMode == 4){ // ADDR_ACC = 4\n\n                    temp = this.REG_ACC\n                    add = this.F_CARRY\n                    this.F_CARRY = (temp>>7)&1\n                    temp = ((temp<<1)&0xFF)+add\n                    this.REG_ACC = temp\n\n                }else{\n\n                    temp = this.load(addr)\n                    add = this.F_CARRY\n                    this.F_CARRY = (temp>>7)&1\n                    temp = ((temp<<1)&0xFF)+add    \n                    this.write(addr, temp)\n\n                }\n                this.F_SIGN = (temp>>7)&1\n                this.F_ZERO = temp\n                break\n\n            }case 40:{\n\n                // *******\n                // * ROR *\n                // *******\n\n                // Rotate one bit right\n                if(addrMode == 4){ // ADDR_ACC = 4\n\n                    add = this.F_CARRY<<7\n                    this.F_CARRY = this.REG_ACC&1\n                    temp = (this.REG_ACC>>1)+add   \n                    this.REG_ACC = temp\n\n                }else{\n\n                    temp = this.load(addr)\n                    add = this.F_CARRY<<7\n                    this.F_CARRY = temp&1\n                    temp = (temp>>1)+add\n                    this.write(addr, temp)\n\n                }\n                this.F_SIGN = (temp>>7)&1\n                this.F_ZERO = temp\n                break\n\n            }case 41:{\n\n                // *******\n                // * RTI *\n                // *******\n\n                // Return from interrupt. Pull status and PC from stack.\n                \n                temp = this.pull()\n                this.F_CARRY     = (temp   )&1\n                this.F_ZERO      = ((temp>>1)&1)==0?1:0\n                this.F_INTERRUPT = (temp>>2)&1\n                this.F_DECIMAL   = (temp>>3)&1\n                this.F_BRK       = (temp>>4)&1\n                this.F_NOTUSED   = (temp>>5)&1\n                this.F_OVERFLOW  = (temp>>6)&1\n                this.F_SIGN      = (temp>>7)&1\n\n                this.REG_PC = this.pull()\n                this.REG_PC += (this.pull()<<8)\n                if(this.REG_PC==0xFFFF){\n                    return\n                }\n                this.REG_PC--\n                this.F_NOTUSED = 1\n                break\n\n            }case 42:{\n\n                // *******\n                // * RTS *\n                // *******\n\n                // Return from subroutine. Pull PC from stack.\n                \n                this.REG_PC = this.pull()\n                this.REG_PC += (this.pull()<<8)\n                \n                if(this.REG_PC==0xFFFF){\n                    return // return from NSF play routine:\n                }\n                break\n\n            }case 43:{\n\n                // *******\n                // * SBC *\n                // *******\n\n                temp = this.REG_ACC-this.load(addr)-(1-this.F_CARRY)\n                this.F_SIGN = (temp>>7)&1\n                this.F_ZERO = temp&0xFF\n                this.F_OVERFLOW = ((((this.REG_ACC^temp)&0x80)!=0 && ((this.REG_ACC^this.load(addr))&0x80)!=0)?1:0)\n                this.F_CARRY = (temp<0?0:1)\n                this.REG_ACC = (temp&0xFF)\n                if(addrMode!=11)cycleCount+=cycleAdd // PostIdxInd = 11\n                break\n\n            }case 44:{\n\n                // *******\n                // * SEC *\n                // *******\n\n                // Set carry flag\n                this.F_CARRY = 1\n                break\n\n            }case 45:{\n\n                // *******\n                // * SED *\n                // *******\n\n                // Set decimal mode\n                this.F_DECIMAL = 1\n                break\n\n            }case 46:{\n\n                // *******\n                // * SEI *\n                // *******\n\n                // Set interrupt disable status\n                this.F_INTERRUPT = 1\n                break\n\n            }case 47:{\n\n                // *******\n                // * STA *\n                // *******\n\n                // Store accumulator in memory\n                this.write(addr, this.REG_ACC)\n                break\n\n            }case 48:{\n\n                // *******\n                // * STX *\n                // *******\n\n                // Store index X in memory\n                this.write(addr, this.REG_X)\n                break\n\n            }case 49:{\n\n                // *******\n                // * STY *\n                // *******\n\n                // Store index Y in memory:\n                this.write(addr, this.REG_Y)\n                break\n\n            }case 50:{\n\n                // *******\n                // * TAX *\n                // *******\n\n                // Transfer accumulator to index X:\n                this.REG_X = this.REG_ACC\n                this.F_SIGN = (this.REG_ACC>>7)&1\n                this.F_ZERO = this.REG_ACC\n                break\n\n            }case 51:{\n\n                // *******\n                // * TAY *\n                // *******\n\n                // Transfer accumulator to index Y:\n                this.REG_Y = this.REG_ACC\n                this.F_SIGN = (this.REG_ACC>>7)&1\n                this.F_ZERO = this.REG_ACC\n                break\n\n            }case 52:{\n\n                // *******\n                // * TSX *\n                // *******\n\n                // Transfer stack pointer to index X:\n                this.REG_X = (this.REG_SP-0x0100)\n                this.F_SIGN = (this.REG_SP>>7)&1\n                this.F_ZERO = this.REG_X\n                break\n\n            }case 53:{\n\n                // *******\n                // * TXA *\n                // *******\n\n                // Transfer index X to accumulator:\n                this.REG_ACC = this.REG_X\n                this.F_SIGN = (this.REG_X>>7)&1\n                this.F_ZERO = this.REG_X\n                break\n\n            }case 54:{\n\n                // *******\n                // * TXS *\n                // *******\n\n                // Transfer index X to stack pointer:\n                this.REG_SP = (this.REG_X+0x0100)\n                this.stackWrap()\n                break\n\n            }case 55:{\n\n                // *******\n                // * TYA *\n                // *******\n\n                // Transfer index Y to accumulator:\n                this.REG_ACC = this.REG_Y\n                this.F_SIGN = (this.REG_Y>>7)&1\n                this.F_ZERO = this.REG_Y\n                break\n\n            }default:{\n\n                // *******\n                // * ??? *\n                // *******\n\n                this.nes.stop()\n                this.nes.crashMessage = \"Game crashed, invalid opcode at address $\"+opaddr.toString(16)\n                break\n\n            }\n\n        }// end of switch\n\n        return cycleCount\n\n    },\n    \n    load: function(addr){\n        if (addr < 0x2000) {\n            return this.mem[addr & 0x7FF]\n        }\n        else {\n            return this.nes.mmap.load(addr)\n        }\n    },\n    \n    load16bit: function(addr){\n        if (addr < 0x1FFF) {\n            return this.mem[addr&0x7FF] \n                | (this.mem[(addr+1)&0x7FF]<<8)\n        }\n        else {\n            return this.nes.mmap.load(addr) | (this.nes.mmap.load(addr+1) << 8)\n        }\n    },\n    \n    write: function(addr, val){\n        if(addr < 0x2000) {\n            this.mem[addr&0x7FF] = val\n        }\n        else {\n            this.nes.mmap.write(addr,val)\n        }\n    },\n\n    requestIrq: function(type){\n        if(this.irqRequested){\n            if(type == this.IRQ_NORMAL){\n                return\n            }\n            ////System.out.println(\"too fast irqs. type=\"+type)\n        }\n        this.irqRequested = true\n        this.irqType = type\n    },\n\n    push: function(value){\n        this.nes.mmap.write(this.REG_SP, value)\n        this.REG_SP--\n        this.REG_SP = 0x0100 | (this.REG_SP&0xFF)\n    },\n\n    stackWrap: function(){\n        this.REG_SP = 0x0100 | (this.REG_SP&0xFF)\n    },\n\n    pull: function(){\n        this.REG_SP++\n        this.REG_SP = 0x0100 | (this.REG_SP&0xFF)\n        return this.nes.mmap.load(this.REG_SP)\n    },\n\n    pageCrossed: function(addr1, addr2){\n        return ((addr1&0xFF00) != (addr2&0xFF00))\n    },\n\n    haltCycles: function(cycles){\n        this.cyclesToHalt += cycles\n    },\n\n    doNonMaskableInterrupt: function(status){\n        if((this.nes.mmap.load(0x2000) & 128) != 0) { // Check whether VBlank Interrupts are enabled\n\n            this.REG_PC_NEW++\n            this.push((this.REG_PC_NEW>>8)&0xFF)\n            this.push(this.REG_PC_NEW&0xFF)\n            //this.F_INTERRUPT_NEW = 1\n            this.push(status)\n\n            this.REG_PC_NEW = this.nes.mmap.load(0xFFFA) | (this.nes.mmap.load(0xFFFB) << 8)\n            this.REG_PC_NEW--\n        }\n    },\n\n    doResetInterrupt: function(){\n        this.REG_PC_NEW = this.nes.mmap.load(0xFFFC) | (this.nes.mmap.load(0xFFFD) << 8)\n        this.REG_PC_NEW--\n    },\n\n    doIrq: function(status){\n        this.REG_PC_NEW++\n        this.push((this.REG_PC_NEW>>8)&0xFF)\n        this.push(this.REG_PC_NEW&0xFF)\n        this.push(status)\n        this.F_INTERRUPT_NEW = 1\n        this.F_BRK_NEW = 0\n\n        this.REG_PC_NEW = this.nes.mmap.load(0xFFFE) | (this.nes.mmap.load(0xFFFF) << 8)\n        this.REG_PC_NEW--\n    },\n\n    getStatus: function(){\n        return (this.F_CARRY)\n                |(this.F_ZERO<<1)\n                |(this.F_INTERRUPT<<2)\n                |(this.F_DECIMAL<<3)\n                |(this.F_BRK<<4)\n                |(this.F_NOTUSED<<5)\n                |(this.F_OVERFLOW<<6)\n                |(this.F_SIGN<<7)\n    },\n\n    setStatus: function(st){\n        this.F_CARRY     = (st   )&1\n        this.F_ZERO      = (st>>1)&1\n        this.F_INTERRUPT = (st>>2)&1\n        this.F_DECIMAL   = (st>>3)&1\n        this.F_BRK       = (st>>4)&1\n        this.F_NOTUSED   = (st>>5)&1\n        this.F_OVERFLOW  = (st>>6)&1\n        this.F_SIGN      = (st>>7)&1\n    },\n    \n    JSON_PROPERTIES: [\n        'mem', 'cyclesToHalt', 'irqRequested', 'irqType',\n        // Registers\n        'REG_ACC', 'REG_X', 'REG_Y', 'REG_SP', 'REG_PC', 'REG_PC_NEW',\n        'REG_STATUS',\n        // Status\n        'F_CARRY', 'F_DECIMAL', 'F_INTERRUPT', 'F_INTERRUPT_NEW', 'F_OVERFLOW', \n        'F_SIGN', 'F_ZERO', 'F_NOTUSED', 'F_NOTUSED_NEW', 'F_BRK', 'F_BRK_NEW'\n    ],\n    \n    toJSON: function() {\n        return JSNES.Utils.toJSON(this)\n    },\n    \n    fromJSON: function(s) {\n        JSNES.Utils.fromJSON(this, s)\n    }\n}\n\n// Generates and provides an array of details about instructions\nJSNES.CPU.OpData = function() {\n    this.opdata = new Array(256)\n    \n    // Set all to invalid instruction (to detect crashes):\n    for(var i=0i<256i++) this.opdata[i]=0xFF\n    \n    // Now fill in all valid opcodes:\n    \n    // ADC:\n    this.setOp(this.INS_ADC,0x69,this.ADDR_IMM,2,2)\n    this.setOp(this.INS_ADC,0x65,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_ADC,0x75,this.ADDR_ZPX,2,4)\n    this.setOp(this.INS_ADC,0x6D,this.ADDR_ABS,3,4)\n    this.setOp(this.INS_ADC,0x7D,this.ADDR_ABSX,3,4)\n    this.setOp(this.INS_ADC,0x79,this.ADDR_ABSY,3,4)\n    this.setOp(this.INS_ADC,0x61,this.ADDR_PREIDXIND,2,6)\n    this.setOp(this.INS_ADC,0x71,this.ADDR_POSTIDXIND,2,5)\n    \n    // AND:\n    this.setOp(this.INS_AND,0x29,this.ADDR_IMM,2,2)\n    this.setOp(this.INS_AND,0x25,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_AND,0x35,this.ADDR_ZPX,2,4)\n    this.setOp(this.INS_AND,0x2D,this.ADDR_ABS,3,4)\n    this.setOp(this.INS_AND,0x3D,this.ADDR_ABSX,3,4)\n    this.setOp(this.INS_AND,0x39,this.ADDR_ABSY,3,4)\n    this.setOp(this.INS_AND,0x21,this.ADDR_PREIDXIND,2,6)\n    this.setOp(this.INS_AND,0x31,this.ADDR_POSTIDXIND,2,5)\n    \n    // ASL:\n    this.setOp(this.INS_ASL,0x0A,this.ADDR_ACC,1,2)\n    this.setOp(this.INS_ASL,0x06,this.ADDR_ZP,2,5)\n    this.setOp(this.INS_ASL,0x16,this.ADDR_ZPX,2,6)\n    this.setOp(this.INS_ASL,0x0E,this.ADDR_ABS,3,6)\n    this.setOp(this.INS_ASL,0x1E,this.ADDR_ABSX,3,7)\n    \n    // BCC:\n    this.setOp(this.INS_BCC,0x90,this.ADDR_REL,2,2)\n    \n    // BCS:\n    this.setOp(this.INS_BCS,0xB0,this.ADDR_REL,2,2)\n    \n    // BEQ:\n    this.setOp(this.INS_BEQ,0xF0,this.ADDR_REL,2,2)\n    \n    // BIT:\n    this.setOp(this.INS_BIT,0x24,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_BIT,0x2C,this.ADDR_ABS,3,4)\n    \n    // BMI:\n    this.setOp(this.INS_BMI,0x30,this.ADDR_REL,2,2)\n    \n    // BNE:\n    this.setOp(this.INS_BNE,0xD0,this.ADDR_REL,2,2)\n    \n    // BPL:\n    this.setOp(this.INS_BPL,0x10,this.ADDR_REL,2,2)\n    \n    // BRK:\n    this.setOp(this.INS_BRK,0x00,this.ADDR_IMP,1,7)\n    \n    // BVC:\n    this.setOp(this.INS_BVC,0x50,this.ADDR_REL,2,2)\n    \n    // BVS:\n    this.setOp(this.INS_BVS,0x70,this.ADDR_REL,2,2)\n    \n    // CLC:\n    this.setOp(this.INS_CLC,0x18,this.ADDR_IMP,1,2)\n    \n    // CLD:\n    this.setOp(this.INS_CLD,0xD8,this.ADDR_IMP,1,2)\n    \n    // CLI:\n    this.setOp(this.INS_CLI,0x58,this.ADDR_IMP,1,2)\n    \n    // CLV:\n    this.setOp(this.INS_CLV,0xB8,this.ADDR_IMP,1,2)\n    \n    // CMP:\n    this.setOp(this.INS_CMP,0xC9,this.ADDR_IMM,2,2)\n    this.setOp(this.INS_CMP,0xC5,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_CMP,0xD5,this.ADDR_ZPX,2,4)\n    this.setOp(this.INS_CMP,0xCD,this.ADDR_ABS,3,4)\n    this.setOp(this.INS_CMP,0xDD,this.ADDR_ABSX,3,4)\n    this.setOp(this.INS_CMP,0xD9,this.ADDR_ABSY,3,4)\n    this.setOp(this.INS_CMP,0xC1,this.ADDR_PREIDXIND,2,6)\n    this.setOp(this.INS_CMP,0xD1,this.ADDR_POSTIDXIND,2,5)\n    \n    // CPX:\n    this.setOp(this.INS_CPX,0xE0,this.ADDR_IMM,2,2)\n    this.setOp(this.INS_CPX,0xE4,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_CPX,0xEC,this.ADDR_ABS,3,4)\n    \n    // CPY:\n    this.setOp(this.INS_CPY,0xC0,this.ADDR_IMM,2,2)\n    this.setOp(this.INS_CPY,0xC4,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_CPY,0xCC,this.ADDR_ABS,3,4)\n    \n    // DEC:\n    this.setOp(this.INS_DEC,0xC6,this.ADDR_ZP,2,5)\n    this.setOp(this.INS_DEC,0xD6,this.ADDR_ZPX,2,6)\n    this.setOp(this.INS_DEC,0xCE,this.ADDR_ABS,3,6)\n    this.setOp(this.INS_DEC,0xDE,this.ADDR_ABSX,3,7)\n    \n    // DEX:\n    this.setOp(this.INS_DEX,0xCA,this.ADDR_IMP,1,2)\n    \n    // DEY:\n    this.setOp(this.INS_DEY,0x88,this.ADDR_IMP,1,2)\n    \n    // EOR:\n    this.setOp(this.INS_EOR,0x49,this.ADDR_IMM,2,2)\n    this.setOp(this.INS_EOR,0x45,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_EOR,0x55,this.ADDR_ZPX,2,4)\n    this.setOp(this.INS_EOR,0x4D,this.ADDR_ABS,3,4)\n    this.setOp(this.INS_EOR,0x5D,this.ADDR_ABSX,3,4)\n    this.setOp(this.INS_EOR,0x59,this.ADDR_ABSY,3,4)\n    this.setOp(this.INS_EOR,0x41,this.ADDR_PREIDXIND,2,6)\n    this.setOp(this.INS_EOR,0x51,this.ADDR_POSTIDXIND,2,5)\n    \n    // INC:\n    this.setOp(this.INS_INC,0xE6,this.ADDR_ZP,2,5)\n    this.setOp(this.INS_INC,0xF6,this.ADDR_ZPX,2,6)\n    this.setOp(this.INS_INC,0xEE,this.ADDR_ABS,3,6)\n    this.setOp(this.INS_INC,0xFE,this.ADDR_ABSX,3,7)\n    \n    // INX:\n    this.setOp(this.INS_INX,0xE8,this.ADDR_IMP,1,2)\n    \n    // INY:\n    this.setOp(this.INS_INY,0xC8,this.ADDR_IMP,1,2)\n    \n    // JMP:\n    this.setOp(this.INS_JMP,0x4C,this.ADDR_ABS,3,3)\n    this.setOp(this.INS_JMP,0x6C,this.ADDR_INDABS,3,5)\n    \n    // JSR:\n    this.setOp(this.INS_JSR,0x20,this.ADDR_ABS,3,6)\n    \n    // LDA:\n    this.setOp(this.INS_LDA,0xA9,this.ADDR_IMM,2,2)\n    this.setOp(this.INS_LDA,0xA5,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_LDA,0xB5,this.ADDR_ZPX,2,4)\n    this.setOp(this.INS_LDA,0xAD,this.ADDR_ABS,3,4)\n    this.setOp(this.INS_LDA,0xBD,this.ADDR_ABSX,3,4)\n    this.setOp(this.INS_LDA,0xB9,this.ADDR_ABSY,3,4)\n    this.setOp(this.INS_LDA,0xA1,this.ADDR_PREIDXIND,2,6)\n    this.setOp(this.INS_LDA,0xB1,this.ADDR_POSTIDXIND,2,5)\n    \n    \n    // LDX:\n    this.setOp(this.INS_LDX,0xA2,this.ADDR_IMM,2,2)\n    this.setOp(this.INS_LDX,0xA6,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_LDX,0xB6,this.ADDR_ZPY,2,4)\n    this.setOp(this.INS_LDX,0xAE,this.ADDR_ABS,3,4)\n    this.setOp(this.INS_LDX,0xBE,this.ADDR_ABSY,3,4)\n    \n    // LDY:\n    this.setOp(this.INS_LDY,0xA0,this.ADDR_IMM,2,2)\n    this.setOp(this.INS_LDY,0xA4,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_LDY,0xB4,this.ADDR_ZPX,2,4)\n    this.setOp(this.INS_LDY,0xAC,this.ADDR_ABS,3,4)\n    this.setOp(this.INS_LDY,0xBC,this.ADDR_ABSX,3,4)\n    \n    // LSR:\n    this.setOp(this.INS_LSR,0x4A,this.ADDR_ACC,1,2)\n    this.setOp(this.INS_LSR,0x46,this.ADDR_ZP,2,5)\n    this.setOp(this.INS_LSR,0x56,this.ADDR_ZPX,2,6)\n    this.setOp(this.INS_LSR,0x4E,this.ADDR_ABS,3,6)\n    this.setOp(this.INS_LSR,0x5E,this.ADDR_ABSX,3,7)\n    \n    // NOP:\n    this.setOp(this.INS_NOP,0xEA,this.ADDR_IMP,1,2)\n    \n    // ORA:\n    this.setOp(this.INS_ORA,0x09,this.ADDR_IMM,2,2)\n    this.setOp(this.INS_ORA,0x05,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_ORA,0x15,this.ADDR_ZPX,2,4)\n    this.setOp(this.INS_ORA,0x0D,this.ADDR_ABS,3,4)\n    this.setOp(this.INS_ORA,0x1D,this.ADDR_ABSX,3,4)\n    this.setOp(this.INS_ORA,0x19,this.ADDR_ABSY,3,4)\n    this.setOp(this.INS_ORA,0x01,this.ADDR_PREIDXIND,2,6)\n    this.setOp(this.INS_ORA,0x11,this.ADDR_POSTIDXIND,2,5)\n    \n    // PHA:\n    this.setOp(this.INS_PHA,0x48,this.ADDR_IMP,1,3)\n    \n    // PHP:\n    this.setOp(this.INS_PHP,0x08,this.ADDR_IMP,1,3)\n    \n    // PLA:\n    this.setOp(this.INS_PLA,0x68,this.ADDR_IMP,1,4)\n    \n    // PLP:\n    this.setOp(this.INS_PLP,0x28,this.ADDR_IMP,1,4)\n    \n    // ROL:\n    this.setOp(this.INS_ROL,0x2A,this.ADDR_ACC,1,2)\n    this.setOp(this.INS_ROL,0x26,this.ADDR_ZP,2,5)\n    this.setOp(this.INS_ROL,0x36,this.ADDR_ZPX,2,6)\n    this.setOp(this.INS_ROL,0x2E,this.ADDR_ABS,3,6)\n    this.setOp(this.INS_ROL,0x3E,this.ADDR_ABSX,3,7)\n    \n    // ROR:\n    this.setOp(this.INS_ROR,0x6A,this.ADDR_ACC,1,2)\n    this.setOp(this.INS_ROR,0x66,this.ADDR_ZP,2,5)\n    this.setOp(this.INS_ROR,0x76,this.ADDR_ZPX,2,6)\n    this.setOp(this.INS_ROR,0x6E,this.ADDR_ABS,3,6)\n    this.setOp(this.INS_ROR,0x7E,this.ADDR_ABSX,3,7)\n    \n    // RTI:\n    this.setOp(this.INS_RTI,0x40,this.ADDR_IMP,1,6)\n    \n    // RTS:\n    this.setOp(this.INS_RTS,0x60,this.ADDR_IMP,1,6)\n    \n    // SBC:\n    this.setOp(this.INS_SBC,0xE9,this.ADDR_IMM,2,2)\n    this.setOp(this.INS_SBC,0xE5,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_SBC,0xF5,this.ADDR_ZPX,2,4)\n    this.setOp(this.INS_SBC,0xED,this.ADDR_ABS,3,4)\n    this.setOp(this.INS_SBC,0xFD,this.ADDR_ABSX,3,4)\n    this.setOp(this.INS_SBC,0xF9,this.ADDR_ABSY,3,4)\n    this.setOp(this.INS_SBC,0xE1,this.ADDR_PREIDXIND,2,6)\n    this.setOp(this.INS_SBC,0xF1,this.ADDR_POSTIDXIND,2,5)\n    \n    // SEC:\n    this.setOp(this.INS_SEC,0x38,this.ADDR_IMP,1,2)\n    \n    // SED:\n    this.setOp(this.INS_SED,0xF8,this.ADDR_IMP,1,2)\n    \n    // SEI:\n    this.setOp(this.INS_SEI,0x78,this.ADDR_IMP,1,2)\n    \n    // STA:\n    this.setOp(this.INS_STA,0x85,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_STA,0x95,this.ADDR_ZPX,2,4)\n    this.setOp(this.INS_STA,0x8D,this.ADDR_ABS,3,4)\n    this.setOp(this.INS_STA,0x9D,this.ADDR_ABSX,3,5)\n    this.setOp(this.INS_STA,0x99,this.ADDR_ABSY,3,5)\n    this.setOp(this.INS_STA,0x81,this.ADDR_PREIDXIND,2,6)\n    this.setOp(this.INS_STA,0x91,this.ADDR_POSTIDXIND,2,6)\n    \n    // STX:\n    this.setOp(this.INS_STX,0x86,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_STX,0x96,this.ADDR_ZPY,2,4)\n    this.setOp(this.INS_STX,0x8E,this.ADDR_ABS,3,4)\n    \n    // STY:\n    this.setOp(this.INS_STY,0x84,this.ADDR_ZP,2,3)\n    this.setOp(this.INS_STY,0x94,this.ADDR_ZPX,2,4)\n    this.setOp(this.INS_STY,0x8C,this.ADDR_ABS,3,4)\n    \n    // TAX:\n    this.setOp(this.INS_TAX,0xAA,this.ADDR_IMP,1,2)\n    \n    // TAY:\n    this.setOp(this.INS_TAY,0xA8,this.ADDR_IMP,1,2)\n    \n    // TSX:\n    this.setOp(this.INS_TSX,0xBA,this.ADDR_IMP,1,2)\n    \n    // TXA:\n    this.setOp(this.INS_TXA,0x8A,this.ADDR_IMP,1,2)\n    \n    // TXS:\n    this.setOp(this.INS_TXS,0x9A,this.ADDR_IMP,1,2)\n    \n    // TYA:\n    this.setOp(this.INS_TYA,0x98,this.ADDR_IMP,1,2)\n    \n    this.cycTable = new Array(\n    =begin0x00=end 7,6,2,8,3,3,5,5,3,2,2,2,4,4,6,6,\n    =begin0x10=end 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\n    =begin0x20=end 6,6,2,8,3,3,5,5,4,2,2,2,4,4,6,6,\n    =begin0x30=end 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\n    =begin0x40=end 6,6,2,8,3,3,5,5,3,2,2,2,3,4,6,6,\n    =begin0x50=end 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\n    =begin0x60=end 6,6,2,8,3,3,5,5,4,2,2,2,5,4,6,6,\n    =begin0x70=end 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\n    =begin0x80=end 2,6,2,6,3,3,3,3,2,2,2,2,4,4,4,4,\n    =begin0x90=end 2,6,2,6,4,4,4,4,2,5,2,5,5,5,5,5,\n    =begin0xA0=end 2,6,2,6,3,3,3,3,2,2,2,2,4,4,4,4,\n    =begin0xB0=end 2,5,2,5,4,4,4,4,2,4,2,4,4,4,4,4,\n    =begin0xC0=end 2,6,2,8,3,3,5,5,2,2,2,2,4,4,6,6,\n    =begin0xD0=end 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7,\n    =begin0xE0=end 2,6,3,8,3,3,5,5,2,2,2,2,4,4,6,6,\n    =begin0xF0=end 2,5,2,8,4,4,6,6,2,4,2,7,4,4,7,7\n    )\n    \n    \n    this.instname = new Array(56)\n    \n    // Instruction Names:\n    this.instname[ 0] = \"ADC\"\n    this.instname[ 1] = \"AND\"\n    this.instname[ 2] = \"ASL\"\n    this.instname[ 3] = \"BCC\"\n    this.instname[ 4] = \"BCS\"\n    this.instname[ 5] = \"BEQ\"\n    this.instname[ 6] = \"BIT\"\n    this.instname[ 7] = \"BMI\"\n    this.instname[ 8] = \"BNE\"\n    this.instname[ 9] = \"BPL\"\n    this.instname[10] = \"BRK\"\n    this.instname[11] = \"BVC\"\n    this.instname[12] = \"BVS\"\n    this.instname[13] = \"CLC\"\n    this.instname[14] = \"CLD\"\n    this.instname[15] = \"CLI\"\n    this.instname[16] = \"CLV\"\n    this.instname[17] = \"CMP\"\n    this.instname[18] = \"CPX\"\n    this.instname[19] = \"CPY\"\n    this.instname[20] = \"DEC\"\n    this.instname[21] = \"DEX\"\n    this.instname[22] = \"DEY\"\n    this.instname[23] = \"EOR\"\n    this.instname[24] = \"INC\"\n    this.instname[25] = \"INX\"\n    this.instname[26] = \"INY\"\n    this.instname[27] = \"JMP\"\n    this.instname[28] = \"JSR\"\n    this.instname[29] = \"LDA\"\n    this.instname[30] = \"LDX\"\n    this.instname[31] = \"LDY\"\n    this.instname[32] = \"LSR\"\n    this.instname[33] = \"NOP\"\n    this.instname[34] = \"ORA\"\n    this.instname[35] = \"PHA\"\n    this.instname[36] = \"PHP\"\n    this.instname[37] = \"PLA\"\n    this.instname[38] = \"PLP\"\n    this.instname[39] = \"ROL\"\n    this.instname[40] = \"ROR\"\n    this.instname[41] = \"RTI\"\n    this.instname[42] = \"RTS\"\n    this.instname[43] = \"SBC\"\n    this.instname[44] = \"SEC\"\n    this.instname[45] = \"SED\"\n    this.instname[46] = \"SEI\"\n    this.instname[47] = \"STA\"\n    this.instname[48] = \"STX\"\n    this.instname[49] = \"STY\"\n    this.instname[50] = \"TAX\"\n    this.instname[51] = \"TAY\"\n    this.instname[52] = \"TSX\"\n    this.instname[53] = \"TXA\"\n    this.instname[54] = \"TXS\"\n    this.instname[55] = \"TYA\"\n    \n    this.addrDesc = new Array(\n        \"Zero Page           \",\n        \"Relative            \",\n        \"Implied             \",\n        \"Absolute            \",\n        \"Accumulator         \",\n        \"Immediate           \",\n        \"Zero Page,X         \",\n        \"Zero Page,Y         \",\n        \"Absolute,X          \",\n        \"Absolute,Y          \",\n        \"Preindexed Indirect \",\n        \"Postindexed Indirect\",\n        \"Indirect Absolute   \"\n    )\n}\n\nJSNES.CPU.OpData.prototype = {\n    INS_ADC: 0,\n    INS_AND: 1,\n    INS_ASL: 2,\n    \n    INS_BCC: 3,\n    INS_BCS: 4,\n    INS_BEQ: 5,\n    INS_BIT: 6,\n    INS_BMI: 7,\n    INS_BNE: 8,\n    INS_BPL: 9,\n    INS_BRK: 10,\n    INS_BVC: 11,\n    INS_BVS: 12,\n    \n    INS_CLC: 13,\n    INS_CLD: 14,\n    INS_CLI: 15,\n    INS_CLV: 16,\n    INS_CMP: 17,\n    INS_CPX: 18,\n    INS_CPY: 19,\n    \n    INS_DEC: 20,\n    INS_DEX: 21,\n    INS_DEY: 22,\n    \n    INS_EOR: 23,\n    \n    INS_INC: 24,\n    INS_INX: 25,\n    INS_INY: 26,\n    \n    INS_JMP: 27,\n    INS_JSR: 28,\n    \n    INS_LDA: 29,\n    INS_LDX: 30,\n    INS_LDY: 31,\n    INS_LSR: 32,\n    \n    INS_NOP: 33,\n    \n    INS_ORA: 34,\n    \n    INS_PHA: 35,\n    INS_PHP: 36,\n    INS_PLA: 37,\n    INS_PLP: 38,\n    \n    INS_ROL: 39,\n    INS_ROR: 40,\n    INS_RTI: 41,\n    INS_RTS: 42,\n    \n    INS_SBC: 43,\n    INS_SEC: 44,\n    INS_SED: 45,\n    INS_SEI: 46,\n    INS_STA: 47,\n    INS_STX: 48,\n    INS_STY: 49,\n    \n    INS_TAX: 50,\n    INS_TAY: 51,\n    INS_TSX: 52,\n    INS_TXA: 53,\n    INS_TXS: 54,\n    INS_TYA: 55,\n    \n    INS_DUMMY: 56, // dummy instruction used for 'halting' the processor some cycles\n    \n    // -------------------------------- //\n    \n    // Addressing modes:\n    ADDR_ZP        : 0,\n    ADDR_REL       : 1,\n    ADDR_IMP       : 2,\n    ADDR_ABS       : 3,\n    ADDR_ACC       : 4,\n    ADDR_IMM       : 5,\n    ADDR_ZPX       : 6,\n    ADDR_ZPY       : 7,\n    ADDR_ABSX      : 8,\n    ADDR_ABSY      : 9,\n    ADDR_PREIDXIND : 10,\n    ADDR_POSTIDXIND: 11,\n    ADDR_INDABS    : 12,\n    \n    setOp: function(inst, op, addr, size, cycles){\n        this.opdata[op] = \n            ((inst  &0xFF)    )| \n            ((addr  &0xFF)<< 8)| \n            ((size  &0xFF)<<16)| \n            ((cycles&0xFF)<<24)\n    }\n}\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/cpu.js",
			"file_size": 48973,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 48410,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin\nJSNES, based on Jamie Sanders' vNES\nCopyright (C) 2010 Ben Firshman\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n=end\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/header.js",
			"file_size": 687,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 692,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin\nJSNES, based on Jamie Sanders' vNES\nCopyright (C) 2010 Ben Firshman\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n=end\n\n// Keyboard events are bound in the UI\nJSNES.Keyboard = function() {\n    var i\n    \n    this.keys = {\n        KEY_A: 0,\n        KEY_B: 1,\n        KEY_SELECT: 2,\n        KEY_START: 3,\n        KEY_UP: 4,\n        KEY_DOWN: 5,\n        KEY_LEFT: 6,\n        KEY_RIGHT: 7\n    }\n\n    this.state1 = new Array(8)\n    for (i = 0 i < this.state1.length i++) {\n        this.state1[i] = 0x40\n    }\n    this.state2 = new Array(8)\n    for (i = 0 i < this.state2.length i++) {\n        this.state2[i] = 0x40\n    }\n}\n\nJSNES.Keyboard.prototype = {\n    setKey: function(key, value) {\n        switch (key) {\n            case 88: this.state1[this.keys.KEY_A] = value break      // X\n            case 90: this.state1[this.keys.KEY_B] = value break      // Z\n            case 17: this.state1[this.keys.KEY_SELECT] = value break // Right Ctrl\n            case 13: this.state1[this.keys.KEY_START] = value break  // Enter\n            case 38: this.state1[this.keys.KEY_UP] = value break     // Up\n            case 40: this.state1[this.keys.KEY_DOWN] = value break   // Down\n            case 37: this.state1[this.keys.KEY_LEFT] = value break   // Left\n            case 39: this.state1[this.keys.KEY_RIGHT] = value break  // Right\n\n            case 103: this.state2[this.keys.KEY_A] = value break     // Num-7\n            case 105: this.state2[this.keys.KEY_B] = value break     // Num-9\n            case 99: this.state2[this.keys.KEY_SELECT] = value break // Num-3\n            case 97: this.state2[this.keys.KEY_START] = value break  // Num-1\n            case 104: this.state2[this.keys.KEY_UP] = value break    // Num-8\n            case 98: this.state2[this.keys.KEY_DOWN] = value break   // Num-2\n            case 100: this.state2[this.keys.KEY_LEFT] = value break  // Num-4\n            case 102: this.state2[this.keys.KEY_RIGHT] = value break // Num-6\n            default: return true\n        }\n        return false // preventDefault\n    },\n\n    keyDown: function(evt) {\n        if (!this.setKey(evt.keyCode, 0x41) && evt.preventDefault) {\n            evt.preventDefault()\n        }\n    },\n    \n    keyUp: function(evt) {\n        if (!this.setKey(evt.keyCode, 0x40) && evt.preventDefault) {\n            evt.preventDefault()\n        }\n    },\n    \n    keyPress: function(evt) {\n        evt.preventDefault()\n    }\n}\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/keyboard.js",
			"file_size": 3025,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 2981,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin\nJSNES, based on Jamie Sanders' vNES\nCopyright (C) 2010 Ben Firshman\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n=end\n\nJSNES.Mappers = {}\n\nJSNES.Mappers[0] = function(nes) {\n    this.nes = nes\n}\n\nJSNES.Mappers[0].prototype = {\n    reset: function() {\n        this.joy1StrobeState = 0\n        this.joy2StrobeState = 0\n        this.joypadLastWrite = 0\n        \n        this.mousePressed = false\n        this.mouseX = null\n        this.mouseY = null\n    },\n    \n    write: function(address, value) {\n        if (address < 0x2000) {\n            // Mirroring of RAM:\n            this.nes.cpu.mem[address & 0x7FF] = value\n        \n        }\n        else if (address > 0x4017) {\n            this.nes.cpu.mem[address] = value\n            if (address >= 0x6000 && address < 0x8000) {\n                // Write to SaveRAM. Store in file:\n                // TODO: not yet\n                //if(this.nes.rom!=null)\n                //    this.nes.rom.writeBatteryRam(address,value)\n            }\n        }\n        else if (address > 0x2007 && address < 0x4000) {\n            this.regWrite(0x2000 + (address & 0x7), value)\n        }\n        else {\n            this.regWrite(address, value)\n        }\n    },\n    \n    writelow: function(address, value) {\n        if (address < 0x2000) {\n            // Mirroring of RAM:\n            this.nes.cpu.mem[address & 0x7FF] = value\n        }\n        else if (address > 0x4017) {\n            this.nes.cpu.mem[address] = value\n        }\n        else if (address > 0x2007 && address < 0x4000) {\n            this.regWrite(0x2000 + (address & 0x7), value)\n        }\n        else {\n            this.regWrite(address, value)\n        }\n    },\n\n    load: function(address) {\n        // Wrap around:\n        address &= 0xFFFF\n    \n        // Check address range:\n        if (address > 0x4017) {\n            // ROM:\n            return this.nes.cpu.mem[address]\n        }\n        else if (address >= 0x2000) {\n            // I/O Ports.\n            return this.regLoad(address)\n        }\n        else {\n            // RAM (mirrored)\n            return this.nes.cpu.mem[address & 0x7FF]\n        }\n    },\n\n    regLoad: function(address) {\n        switch (address >> 12) { // use fourth nibble (0xF000)\n            case 0:\n                break\n            \n            case 1:\n                break\n            \n            case 2:\n                // Fall through to case 3\n            case 3:\n                // PPU Registers\n                switch (address & 0x7) {\n                    case 0x0:\n                        // 0x2000:\n                        // PPU Control Register 1.\n                        // (the value is stored both\n                        // in main memory and in the\n                        // PPU as flags):\n                        // (not in the real NES)\n                        return this.nes.cpu.mem[0x2000]\n                    \n                    case 0x1:\n                        // 0x2001:\n                        // PPU Control Register 2.\n                        // (the value is stored both\n                        // in main memory and in the\n                        // PPU as flags):\n                        // (not in the real NES)\n                        return this.nes.cpu.mem[0x2001]\n                    \n                    case 0x2:\n                        // 0x2002:\n                        // PPU Status Register.\n                        // The value is stored in\n                        // main memory in addition\n                        // to as flags in the PPU.\n                        // (not in the real NES)\n                        return this.nes.ppu.readStatusRegister()\n                    \n                    case 0x3:\n                        return 0\n                    \n                    case 0x4:\n                        // 0x2004:\n                        // Sprite Memory read.\n                        return this.nes.ppu.sramLoad()\n                    case 0x5:\n                        return 0\n                    \n                    case 0x6:\n                        return 0\n                    \n                    case 0x7:\n                        // 0x2007:\n                        // VRAM read:\n                        return this.nes.ppu.vramLoad()\n                }\n                break\n            case 4:\n                // Sound+Joypad registers\n                switch (address - 0x4015) {\n                    case 0:\n                        // 0x4015:\n                        // Sound channel enable, DMC Status\n                        return this.nes.papu.readReg(address)\n                    \n                    case 1:\n                        // 0x4016:\n                        // Joystick 1 + Strobe\n                        return this.joy1Read()\n                    \n                    case 2:\n                        // 0x4017:\n                        // Joystick 2 + Strobe\n                        if (this.mousePressed) {\n                        \n                            // Check for white pixel nearby:\n                            var sx = Math.max(0, this.mouseX - 4)\n                            var ex = Math.min(256, this.mouseX + 4)\n                            var sy = Math.max(0, this.mouseY - 4)\n                            var ey = Math.min(240, this.mouseY + 4)\n                            var w = 0\n                        \n                            for (var y=sy y<ey y++) {\n                                for (var x=sx x<ex x++) {\n                               \n                                    if (this.nes.ppu.buffer[(y<<8)+x] == 0xFFFFFF) {\n                                        w |= 0x1<<3\n                                        console.debug(\"Clicked on white!\")\n                                        break\n                                    }\n                                }\n                            }\n                        \n                            w |= (this.mousePressed?(0x1<<4):0)\n                            return (this.joy2Read()|w) & 0xFFFF\n                        }\n                        else {\n                            return this.joy2Read()\n                        }\n                    \n                }\n                break\n        }\n        return 0\n    },\n\n    regWrite: function(address, value) {\n        switch (address) {\n            case 0x2000:\n                // PPU Control register 1\n                this.nes.cpu.mem[address] = value\n                this.nes.ppu.updateControlReg1(value)\n                break\n            \n            case 0x2001:\n                // PPU Control register 2\n                this.nes.cpu.mem[address] = value\n                this.nes.ppu.updateControlReg2(value)\n                break\n            \n            case 0x2003:\n                // Set Sprite RAM address:\n                this.nes.ppu.writeSRAMAddress(value)\n                break\n            \n            case 0x2004:\n                // Write to Sprite RAM:\n                this.nes.ppu.sramWrite(value)\n                break\n            \n            case 0x2005:\n                // Screen Scroll offsets:\n                this.nes.ppu.scrollWrite(value)\n                break\n            \n            case 0x2006:\n                // Set VRAM address:\n                this.nes.ppu.writeVRAMAddress(value)\n                break\n            \n            case 0x2007:\n                // Write to VRAM:\n                this.nes.ppu.vramWrite(value)\n                break\n            \n            case 0x4014:\n                // Sprite Memory DMA Access\n                this.nes.ppu.sramDMA(value)\n                break\n            \n            case 0x4015:\n                // Sound Channel Switch, DMC Status\n                this.nes.papu.writeReg(address, value)\n                break\n            \n            case 0x4016:\n                // Joystick 1 + Strobe\n                if (value === 0 && this.joypadLastWrite === 1) {\n                    this.joy1StrobeState = 0\n                    this.joy2StrobeState = 0\n                }\n                this.joypadLastWrite = value\n                break\n            \n            case 0x4017:\n                // Sound channel frame sequencer:\n                this.nes.papu.writeReg(address, value)\n                break\n            \n            default:\n                // Sound registers\n                ////System.out.println(\"write to sound reg\")\n                if (address >= 0x4000 && address <= 0x4017) {\n                    this.nes.papu.writeReg(address,value)\n                }\n                \n        }\n    },\n\n    joy1Read: function() {\n        var ret\n    \n        switch (this.joy1StrobeState) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                ret = this.nes.keyboard.state1[this.joy1StrobeState]\n                break\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n                ret = 0\n                break\n            case 19:\n                ret = 1\n                break\n            default:\n                ret = 0\n        }\n    \n        this.joy1StrobeState++\n        if (this.joy1StrobeState == 24) {\n            this.joy1StrobeState = 0\n        }\n    \n        return ret\n    },\n\n    joy2Read: function() {\n        var ret\n    \n        switch (this.joy2StrobeState) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                ret = this.nes.keyboard.state2[this.joy2StrobeState]\n                break\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n                ret = 0\n                break\n            case 19:\n                ret = 1\n                break\n            default:\n                ret = 0\n        }\n\n        this.joy2StrobeState++\n        if (this.joy2StrobeState == 24) {\n            this.joy2StrobeState = 0\n        }\n    \n        return ret\n      },\n\n    loadROM: function() {\n        if (!this.nes.rom.valid || this.nes.rom.romCount < 1) {\n            alert(\"NoMapper: Invalid ROM! Unable to load.\")\n            return\n        }\n    \n        // Load ROM into memory:\n        this.loadPRGROM()\n    \n        // Load CHR-ROM:\n        this.loadCHRROM()\n    \n        // Load Battery RAM (if present):\n        this.loadBatteryRam()\n    \n        // Reset IRQ:\n        //nes.getCpu().doResetInterrupt()\n        this.nes.cpu.requestIrq(this.nes.cpu.IRQ_RESET)\n    },\n\n    loadPRGROM: function() {\n        if (this.nes.rom.romCount > 1) {\n            // Load the two first banks into memory.\n            this.loadRomBank(0, 0x8000)\n            this.loadRomBank(1, 0xC000)\n        }\n        else {\n            // Load the one bank into both memory locations:\n            this.loadRomBank(0, 0x8000)\n            this.loadRomBank(0, 0xC000)\n        }\n    },\n\n    loadCHRROM: function() {\n        ////System.out.println(\"Loading CHR ROM..\")\n        if (this.nes.rom.vromCount > 0) {\n            if (this.nes.rom.vromCount == 1) {\n                this.loadVromBank(0,0x0000)\n                this.loadVromBank(0,0x1000)\n            }\n            else {\n                this.loadVromBank(0,0x0000)\n                this.loadVromBank(1,0x1000)\n            }\n        }\n        else {\n            //System.out.println(\"There aren't any CHR-ROM banks..\")\n        }\n    },\n\n    loadBatteryRam: function() {\n        if (this.nes.rom.batteryRam) {\n            var ram = this.nes.rom.batteryRam\n            if (ram !== null && ram.length == 0x2000) {\n                // Load Battery RAM into memory:\n                JSNES.Utils.copyArrayElements(ram, 0, this.nes.cpu.mem, 0x6000, 0x2000)\n            }\n        }\n    },\n\n    loadRomBank: function(bank, address) {\n        // Loads a ROM bank into the specified address.\n        bank %= this.nes.rom.romCount\n        //var data = this.nes.rom.rom[bank]\n        //cpuMem.write(address,data,data.length)\n        JSNES.Utils.copyArrayElements(this.nes.rom.rom[bank], 0, this.nes.cpu.mem, address, 16384)\n    },\n\n    loadVromBank: function(bank, address) {\n        if (this.nes.rom.vromCount === 0) {\n            return\n        }\n        this.nes.ppu.triggerRendering()\n    \n        JSNES.Utils.copyArrayElements(this.nes.rom.vrom[bank % this.nes.rom.vromCount], \n            0, this.nes.ppu.vramMem, address, 4096)\n    \n        var vromTile = this.nes.rom.vromTile[bank % this.nes.rom.vromCount]\n        JSNES.Utils.copyArrayElements(vromTile, 0, this.nes.ppu.ptTile,address >> 4, 256)\n    },\n\n    load32kRomBank: function(bank, address) {\n        this.loadRomBank((bank*2) % this.nes.rom.romCount, address)\n        this.loadRomBank((bank*2+1) % this.nes.rom.romCount, address+16384)\n    },\n\n    load8kVromBank: function(bank4kStart, address) {\n        if (this.nes.rom.vromCount === 0) {\n            return\n        }\n        this.nes.ppu.triggerRendering()\n\n        this.loadVromBank((bank4kStart) % this.nes.rom.vromCount, address)\n        this.loadVromBank((bank4kStart + 1) % this.nes.rom.vromCount,\n                address + 4096)\n    },\n\n    load1kVromBank: function(bank1k, address) {\n        if (this.nes.rom.vromCount === 0) {\n            return\n        }\n        this.nes.ppu.triggerRendering()\n    \n        var bank4k = Math.floor(bank1k / 4) % this.nes.rom.vromCount\n        var bankoffset = (bank1k % 4) * 1024\n        JSNES.Utils.copyArrayElements(this.nes.rom.vrom[bank4k], 0, \n            this.nes.ppu.vramMem, bankoffset, 1024)\n    \n        // Update tiles:\n        var vromTile = this.nes.rom.vromTile[bank4k]\n        var baseIndex = address >> 4\n        for (var i = 0 i < 64 i++) {\n            this.nes.ppu.ptTile[baseIndex+i] = vromTile[((bank1k%4) << 6) + i]\n        }\n    },\n\n    load2kVromBank: function(bank2k, address) {\n        if (this.nes.rom.vromCount === 0) {\n            return\n        }\n        this.nes.ppu.triggerRendering()\n    \n        var bank4k = Math.floor(bank2k / 2) % this.nes.rom.vromCount\n        var bankoffset = (bank2k % 2) * 2048\n        JSNES.Utils.copyArrayElements(this.nes.rom.vrom[bank4k], bankoffset,\n            this.nes.ppu.vramMem, address, 2048)\n    \n        // Update tiles:\n        var vromTile = this.nes.rom.vromTile[bank4k]\n        var baseIndex = address >> 4\n        for (var i = 0 i < 128 i++) {\n            this.nes.ppu.ptTile[baseIndex+i] = vromTile[((bank2k%2) << 7) + i]\n        }\n    },\n\n    load8kRomBank: function(bank8k, address) {\n        var bank16k = Math.floor(bank8k / 2) % this.nes.rom.romCount\n        var offset = (bank8k % 2) * 8192\n    \n        //this.nes.cpu.mem.write(address,this.nes.rom.rom[bank16k],offset,8192)\n        JSNES.Utils.copyArrayElements(this.nes.rom.rom[bank16k], offset, \n                  this.nes.cpu.mem, address, 8192)\n    },\n\n    clockIrqCounter: function() {\n        // Does nothing. This is used by the MMC3 mapper.\n    },\n\n    latchAccess: function(address) {\n        // Does nothing. This is used by MMC2.\n    },\n    \n    toJSON: function() {\n        return {\n            'joy1StrobeState': this.joy1StrobeState,\n            'joy2StrobeState': this.joy2StrobeState,\n            'joypadLastWrite': this.joypadLastWrite\n        }\n    },\n    \n    fromJSON: function(s) {\n        this.joy1StrobeState = s.joy1StrobeState\n        this.joy2StrobeState = s.joy2StrobeState\n        this.joypadLastWrite = s.joypadLastWrite\n    }\n}\n\n\nJSNES.Mappers[1] = function(nes) {\n    this.nes = nes\n}\n\nJSNES.Mappers[1].prototype = new JSNES.Mappers[0]()\n\nJSNES.Mappers[1].prototype.reset = function() {\n    JSNES.Mappers[0].prototype.reset.apply(this)\n    \n    // 5-bit buffer:\n    this.regBuffer = 0\n    this.regBufferCounter = 0\n\n    // Register 0:\n    this.mirroring = 0\n    this.oneScreenMirroring = 0\n    this.prgSwitchingArea = 1\n    this.prgSwitchingSize = 1\n    this.vromSwitchingSize = 0\n\n    // Register 1:\n    this.romSelectionReg0 = 0\n\n    // Register 2:\n    this.romSelectionReg1 = 0\n\n    // Register 3:\n    this.romBankSelect = 0\n}\n\nJSNES.Mappers[1].prototype.write = function(address, value) {\n    // Writes to addresses other than MMC registers are handled by NoMapper.\n    if (address < 0x8000) {\n        JSNES.Mappers[0].prototype.write.apply(this, arguments)\n        return\n    }\n\n    // See what should be done with the written value:\n    if ((value & 128) !== 0) {\n\n        // Reset buffering:\n        this.regBufferCounter = 0\n        this.regBuffer = 0\n    \n        // Reset register:\n        if (this.getRegNumber(address) === 0) {\n        \n            this.prgSwitchingArea = 1\n            this.prgSwitchingSize = 1\n        \n        }\n    }\n    else {\n    \n        // Continue buffering:\n        //regBuffer = (regBuffer & (0xFF-(1<<regBufferCounter))) | ((value & (1<<regBufferCounter))<<regBufferCounter)\n        this.regBuffer = (this.regBuffer & (0xFF - (1 << this.regBufferCounter))) | ((value & 1) << this.regBufferCounter)\n        this.regBufferCounter++\n        \n        if (this.regBufferCounter == 5) {\n            // Use the buffered value:\n            this.setReg(this.getRegNumber(address), this.regBuffer)\n        \n            // Reset buffer:\n            this.regBuffer = 0\n            this.regBufferCounter = 0\n        }\n    }\n}\n\nJSNES.Mappers[1].prototype.setReg = function(reg, value) {\n    var tmp\n\n    switch (reg) {\n        case 0:\n            // Mirroring:\n            tmp = value & 3\n            if (tmp !== this.mirroring) {\n                // Set mirroring:\n                this.mirroring = tmp\n                if ((this.mirroring & 2) === 0) {\n                    // SingleScreen mirroring overrides the other setting:\n                    this.nes.ppu.setMirroring(\n                        this.nes.rom.SINGLESCREEN_MIRRORING)\n                }\n                // Not overridden by SingleScreen mirroring.\n                else if ((this.mirroring & 1) !== 0) {\n                    this.nes.ppu.setMirroring(\n                        this.nes.rom.HORIZONTAL_MIRRORING\n                    )\n                }\n                else {\n                    this.nes.ppu.setMirroring(this.nes.rom.VERTICAL_MIRRORING)\n                }\n            }\n    \n            // PRG Switching Area\n            this.prgSwitchingArea = (value >> 2) & 1\n    \n            // PRG Switching Size:\n            this.prgSwitchingSize = (value >> 3) & 1\n    \n            // VROM Switching Size:\n            this.vromSwitchingSize = (value >> 4) & 1\n        \n            break\n    \n        case 1:\n            // ROM selection:\n            this.romSelectionReg0 = (value >> 4) & 1\n    \n            // Check whether the cart has VROM:\n            if (this.nes.rom.vromCount > 0) {\n        \n                // Select VROM bank at 0x0000:\n                if (this.vromSwitchingSize === 0) {\n        \n                    // Swap 8kB VROM:\n                    if (this.romSelectionReg0 === 0) {\n                        this.load8kVromBank((value & 0xF), 0x0000)\n                    }\n                    else {\n                        this.load8kVromBank(\n                            Math.floor(this.nes.rom.vromCount / 2) +\n                                (value & 0xF), \n                            0x0000\n                        )\n                    }\n            \n                }\n                else {\n                    // Swap 4kB VROM:\n                    if (this.romSelectionReg0 === 0) {\n                        this.loadVromBank((value & 0xF), 0x0000)\n                    }\n                    else {\n                        this.loadVromBank(\n                            Math.floor(this.nes.rom.vromCount / 2) +\n                                (value & 0xF),\n                            0x0000\n                        )\n                    }\n                }\n            }\n        \n            break\n    \n        case 2:\n            // ROM selection:\n            this.romSelectionReg1 = (value >> 4) & 1\n    \n            // Check whether the cart has VROM:\n            if (this.nes.rom.vromCount > 0) {\n                \n                // Select VROM bank at 0x1000:\n                if (this.vromSwitchingSize === 1) {\n                    // Swap 4kB of VROM:\n                    if (this.romSelectionReg1 === 0) {\n                        this.loadVromBank((value & 0xF), 0x1000)\n                    }\n                    else {\n                        this.loadVromBank(\n                            Math.floor(this.nes.rom.vromCount / 2) +\n                                (value & 0xF),\n                            0x1000\n                        )\n                    }\n                }\n            }\n            break\n    \n        default:\n            // Select ROM bank:\n            // -------------------------\n            tmp = value & 0xF\n            var bank\n            var baseBank = 0\n    \n            if (this.nes.rom.romCount >= 32) {\n                // 1024 kB cart\n                if (this.vromSwitchingSize === 0) {\n                    if (this.romSelectionReg0 === 1) {\n                        baseBank = 16\n                    }\n                }\n                else {\n                    baseBank = (this.romSelectionReg0 \n                                | (this.romSelectionReg1 << 1)) << 3\n                }\n            }\n            else if (this.nes.rom.romCount >= 16) {\n                // 512 kB cart\n                if (this.romSelectionReg0 === 1) {\n                    baseBank = 8\n                }\n            }\n    \n            if (this.prgSwitchingSize === 0) {\n                // 32kB\n                bank = baseBank + (value & 0xF)\n                this.load32kRomBank(bank, 0x8000)\n            }\n            else {\n                // 16kB\n                bank = baseBank * 2 + (value & 0xF)\n                if (this.prgSwitchingArea === 0) {\n                    this.loadRomBank(bank, 0xC000)\n                }\n                else {\n                    this.loadRomBank(bank, 0x8000)\n                }\n            }  \n    }\n}\n\n// Returns the register number from the address written to:\nJSNES.Mappers[1].prototype.getRegNumber = function(address) {\n    if (address >= 0x8000 && address <= 0x9FFF) {\n        return 0\n    }\n    else if (address >= 0xA000 && address <= 0xBFFF) {\n        return 1\n    }\n    else if (address >= 0xC000 && address <= 0xDFFF) {\n        return 2\n    }\n    else {\n        return 3\n    }\n}\n\nJSNES.Mappers[1].prototype.loadROM = function(rom) {\n    if (!this.nes.rom.valid) {\n        alert(\"MMC1: Invalid ROM! Unable to load.\")\n        return\n    }\n\n    // Load PRG-ROM:\n    this.loadRomBank(0, 0x8000)                         //   First ROM bank..\n    this.loadRomBank(this.nes.rom.romCount - 1, 0xC000) // ..and last ROM bank.\n\n    // Load CHR-ROM:\n    this.loadCHRROM()\n\n    // Load Battery RAM (if present):\n    this.loadBatteryRam()\n\n    // Do Reset-Interrupt:\n    this.nes.cpu.requestIrq(this.nes.cpu.IRQ_RESET)\n}\n\nJSNES.Mappers[1].prototype.switchLowHighPrgRom = function(oldSetting) {\n    // not yet.\n}\n\nJSNES.Mappers[1].prototype.switch16to32 = function() {\n    // not yet.\n}\n\nJSNES.Mappers[1].prototype.switch32to16 = function() {\n    // not yet.\n}\n\nJSNES.Mappers[1].prototype.toJSON = function() {\n    var s = JSNES.Mappers[0].prototype.toJSON.apply(this)\n    s.mirroring = this.mirroring\n    s.oneScreenMirroring = this.oneScreenMirroring\n    s.prgSwitchingArea = this.prgSwitchingArea\n    s.prgSwitchingSize = this.prgSwitchingSize\n    s.vromSwitchingSize = this.vromSwitchingSize\n    s.romSelectionReg0 = this.romSelectionReg0\n    s.romSelectionReg1 = this.romSelectionReg1\n    s.romBankSelect = this.romBankSelect\n    s.regBuffer = this.regBuffer\n    s.regBufferCounter = this.regBufferCounter\n    return s\n}\n\nJSNES.Mappers[1].prototype.fromJSON = function(s) {\n    JSNES.Mappers[0].prototype.fromJSON.apply(this, s)\n    this.mirroring = s.mirroring\n    this.oneScreenMirroring = s.oneScreenMirroring\n    this.prgSwitchingArea = s.prgSwitchingArea\n    this.prgSwitchingSize = s.prgSwitchingSize\n    this.vromSwitchingSize = s.vromSwitchingSize\n    this.romSelectionReg0 = s.romSelectionReg0\n    this.romSelectionReg1 = s.romSelectionReg1\n    this.romBankSelect = s.romBankSelect\n    this.regBuffer = s.regBuffer\n    this.regBufferCounter = s.regBufferCounter\n}\n\nJSNES.Mappers[2] = function(nes) {\n    this.nes = nes\n}\n\nJSNES.Mappers[2].prototype = new JSNES.Mappers[0]()\n\nJSNES.Mappers[2].prototype.write = function(address, value) {\n    // Writes to addresses other than MMC registers are handled by NoMapper.\n    if (address < 0x8000) {\n        JSNES.Mappers[0].prototype.write.apply(this, arguments)\n        return\n    }\n\n    else {\n        // This is a ROM bank select command.\n        // Swap in the given ROM bank at 0x8000:\n        this.loadRomBank(value, 0x8000)\n    }\n}\n\nJSNES.Mappers[2].prototype.loadROM = function(rom) {\n    if (!this.nes.rom.valid) {\n        alert(\"UNROM: Invalid ROM! Unable to load.\")\n        return\n    }\n\n    // Load PRG-ROM:\n    this.loadRomBank(0, 0x8000)\n    this.loadRomBank(this.nes.rom.romCount - 1, 0xC000)\n\n    // Load CHR-ROM:\n    this.loadCHRROM()\n\n    // Do Reset-Interrupt:\n    this.nes.cpu.requestIrq(this.nes.cpu.IRQ_RESET)\n}\n\n\nJSNES.Mappers[4] = function(nes) {\n    this.nes = nes\n    \n    this.CMD_SEL_2_1K_VROM_0000 = 0\n    this.CMD_SEL_2_1K_VROM_0800 = 1\n    this.CMD_SEL_1K_VROM_1000 = 2\n    this.CMD_SEL_1K_VROM_1400 = 3\n    this.CMD_SEL_1K_VROM_1800 = 4\n    this.CMD_SEL_1K_VROM_1C00 = 5\n    this.CMD_SEL_ROM_PAGE1 = 6\n    this.CMD_SEL_ROM_PAGE2 = 7\n    \n    this.command = null\n    this.prgAddressSelect = null\n    this.chrAddressSelect = null\n    this.pageNumber = null\n    this.irqCounter = null\n    this.irqLatchValue = null\n    this.irqEnable = null\n    this.prgAddressChanged = false\n}\n\nJSNES.Mappers[4].prototype = new JSNES.Mappers[0]()\n\nJSNES.Mappers[4].prototype.write = function(address, value) {\n    // Writes to addresses other than MMC registers are handled by NoMapper.\n    if (address < 0x8000) {\n        JSNES.Mappers[0].prototype.write.apply(this, arguments)\n        return\n    }\n\n    switch (address) {\n        case 0x8000:\n            // Command/Address Select register\n            this.command = value & 7\n            var tmp = (value >> 6) & 1\n            if (tmp != this.prgAddressSelect) {\n                this.prgAddressChanged = true\n            }\n            this.prgAddressSelect = tmp\n            this.chrAddressSelect = (value >> 7) & 1\n            break\n    \n        case 0x8001:\n            // Page number for command\n            this.executeCommand(this.command, value)\n            break\n    \n        case 0xA000:        \n            // Mirroring select\n            if ((value & 1) !== 0) {\n                this.nes.ppu.setMirroring(\n                    this.nes.rom.HORIZONTAL_MIRRORING\n                )\n            }\n            else {\n                this.nes.ppu.setMirroring(this.nes.rom.VERTICAL_MIRRORING)\n            }\n            break\n        \n        case 0xA001:\n            // SaveRAM Toggle\n            // TODO\n            //nes.getRom().setSaveState((value&1)!=0)\n            break\n    \n        case 0xC000:\n            // IRQ Counter register\n            this.irqCounter = value\n            //nes.ppu.mapperIrqCounter = 0\n            break\n    \n        case 0xC001:\n            // IRQ Latch register\n            this.irqLatchValue = value\n            break\n    \n        case 0xE000:\n            // IRQ Control Reg 0 (disable)\n            //irqCounter = irqLatchValue\n            this.irqEnable = 0\n            break\n    \n        case 0xE001:        \n            // IRQ Control Reg 1 (enable)\n            this.irqEnable = 1\n            break\n    \n        default:\n            // Not a MMC3 register.\n            // The game has probably crashed,\n            // since it tries to write to ROM..\n            // IGNORE.\n    }\n}\n\nJSNES.Mappers[4].prototype.executeCommand = function(cmd, arg) {\n    switch (cmd) {\n        case this.CMD_SEL_2_1K_VROM_0000:\n            // Select 2 1KB VROM pages at 0x0000:\n            if (this.chrAddressSelect === 0) {\n                this.load1kVromBank(arg, 0x0000)\n                this.load1kVromBank(arg + 1, 0x0400)\n            }\n            else {\n                this.load1kVromBank(arg, 0x1000)\n                this.load1kVromBank(arg + 1, 0x1400)\n            }\n            break\n        \n        case this.CMD_SEL_2_1K_VROM_0800:           \n            // Select 2 1KB VROM pages at 0x0800:\n            if (this.chrAddressSelect === 0) {\n                this.load1kVromBank(arg, 0x0800)\n                this.load1kVromBank(arg + 1, 0x0C00)\n            }\n            else {\n                this.load1kVromBank(arg, 0x1800)\n                this.load1kVromBank(arg + 1, 0x1C00)\n            }\n            break\n    \n        case this.CMD_SEL_1K_VROM_1000:         \n            // Select 1K VROM Page at 0x1000:\n            if (this.chrAddressSelect === 0) {\n                this.load1kVromBank(arg, 0x1000)\n            }\n            else {\n                this.load1kVromBank(arg, 0x0000)\n            }\n            break\n    \n        case this.CMD_SEL_1K_VROM_1400:         \n            // Select 1K VROM Page at 0x1400:\n            if (this.chrAddressSelect === 0) {\n                this.load1kVromBank(arg, 0x1400)\n            }\n            else {\n                this.load1kVromBank(arg, 0x0400)\n            }\n            break\n    \n        case this.CMD_SEL_1K_VROM_1800:\n            // Select 1K VROM Page at 0x1800:\n            if (this.chrAddressSelect === 0) {\n                this.load1kVromBank(arg, 0x1800)\n            }\n            else {\n                this.load1kVromBank(arg, 0x0800)\n            }\n            break\n    \n        case this.CMD_SEL_1K_VROM_1C00:\n            // Select 1K VROM Page at 0x1C00:\n            if (this.chrAddressSelect === 0) {\n                this.load1kVromBank(arg, 0x1C00)\n            }else {\n                this.load1kVromBank(arg, 0x0C00)\n            }\n            break\n    \n        case this.CMD_SEL_ROM_PAGE1:\n            if (this.prgAddressChanged) {\n                // Load the two hardwired banks:\n                if (this.prgAddressSelect === 0) { \n                    this.load8kRomBank(\n                        ((this.nes.rom.romCount - 1) * 2),\n                        0xC000\n                    )\n                }\n                else {\n                    this.load8kRomBank(\n                        ((this.nes.rom.romCount - 1) * 2),\n                        0x8000\n                    )\n                }\n                this.prgAddressChanged = false\n            }\n    \n            // Select first switchable ROM page:\n            if (this.prgAddressSelect === 0) {\n                this.load8kRomBank(arg, 0x8000)\n            }\n            else {\n                this.load8kRomBank(arg, 0xC000)\n            }\n            break\n        \n        case this.CMD_SEL_ROM_PAGE2:\n            // Select second switchable ROM page:\n            this.load8kRomBank(arg, 0xA000)\n    \n            // hardwire appropriate bank:\n            if (this.prgAddressChanged) {\n                // Load the two hardwired banks:\n                if (this.prgAddressSelect === 0) { \n                    this.load8kRomBank(\n                        ((this.nes.rom.romCount - 1) * 2),\n                        0xC000\n                    )\n                }\n                else {              \n                    this.load8kRomBank(\n                        ((this.nes.rom.romCount - 1) * 2),\n                        0x8000\n                    )\n                }\n                this.prgAddressChanged = false\n            }\n    }\n}\n\nJSNES.Mappers[4].prototype.loadROM = function(rom) {\n    if (!this.nes.rom.valid) {\n        alert(\"MMC3: Invalid ROM! Unable to load.\")\n        return\n    }\n\n    // Load hardwired PRG banks (0xC000 and 0xE000):\n    this.load8kRomBank(((this.nes.rom.romCount - 1) * 2), 0xC000)\n    this.load8kRomBank(((this.nes.rom.romCount - 1) * 2) + 1, 0xE000)\n\n    // Load swappable PRG banks (0x8000 and 0xA000):\n    this.load8kRomBank(0, 0x8000)\n    this.load8kRomBank(1, 0xA000)\n\n    // Load CHR-ROM:\n    this.loadCHRROM()\n\n    // Load Battery RAM (if present):\n    this.loadBatteryRam()\n\n    // Do Reset-Interrupt:\n    this.nes.cpu.requestIrq(this.nes.cpu.IRQ_RESET)\n}\n\nJSNES.Mappers[4].prototype.toJSON = function() {\n    var s = JSNES.Mappers[0].prototype.toJSON.apply(this)\n    s.command = this.command\n    s.prgAddressSelect = this.prgAddressSelect\n    s.chrAddressSelect = this.chrAddressSelect\n    s.pageNumber = this.pageNumber\n    s.irqCounter = this.irqCounter\n    s.irqLatchValue = this.irqLatchValue\n    s.irqEnable = this.irqEnable\n    s.prgAddressChanged = this.prgAddressChanged\n    return s\n}\n\nJSNES.Mappers[4].prototype.fromJSON = function(s) {\n    JSNES.Mappers[0].prototype.fromJSON.apply(this, s)\n    this.command = s.command\n    this.prgAddressSelect = s.prgAddressSelect\n    this.chrAddressSelect = s.chrAddressSelect\n    this.pageNumber = s.pageNumber\n    this.irqCounter = s.irqCounter\n    this.irqLatchValue = s.irqLatchValue\n    this.irqEnable = s.irqEnable\n    this.prgAddressChanged = s.prgAddressChanged\n}\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/mappers.js",
			"file_size": 34381,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 33996,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin\nJSNES, based on Jamie Sanders' vNES\nCopyright (C) 2010 Ben Firshman\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n=end\n\nvar JSNES = function(opts) {\n    this.opts = {\n        ui: JSNES.DummyUI,\n        swfPath: 'lib/',\n        \n        preferredFrameRate: 60,\n        fpsInterval: 500, // Time between updating FPS in ms\n        showDisplay: true,\n\n        emulateSound: false,\n        sampleRate: 44100, // Sound sample rate in hz\n        \n        CPU_FREQ_NTSC: 1789772.5, //1789772.72727272d\n        CPU_FREQ_PAL: 1773447.4\n    }\n    if (typeof opts != 'undefined') {\n        var key\n        for (key in this.opts) {\n            if (typeof opts[key] != 'undefined') {\n                this.opts[key] = opts[key]\n            }\n        }\n    }\n    \n    this.frameTime = 1000 / this.opts.preferredFrameRate\n    \n    this.ui = new this.opts.ui(this)\n    this.cpu = new JSNES.CPU(this)\n    this.ppu = new JSNES.PPU(this)\n    this.papu = new JSNES.PAPU(this)\n    this.mmap = null // set in loadRom()\n    this.keyboard = new JSNES.Keyboard()\n    \n    this.ui.updateStatus(\"Ready to load a ROM.\")\n}\n\nJSNES.VERSION = \"<%= version %>\"\n\nJSNES.prototype = {\n    isRunning: false,\n    fpsFrameCount: 0,\n    limitFrames: true,\n    romData: null,\n    \n    // Resets the system\n    reset: function() {\n        if (this.mmap !== null) {\n            this.mmap.reset()\n        }\n        \n        this.cpu.reset()\n        this.ppu.reset()\n        this.papu.reset()\n    },\n    \n    start: function() {\n        var self = this\n        \n        if (this.rom !== null && this.rom.valid) {\n            if (!this.isRunning) {\n                this.isRunning = true\n                \n                this.frameInterval = setInterval(function() {\n                    self.frame()\n                }, this.frameTime / 2)\n                this.resetFps()\n                this.printFps()\n                this.fpsInterval = setInterval(function() {\n                    self.printFps()\n                }, this.opts.fpsInterval)\n            }\n        }\n        else {\n            this.ui.updateStatus(\"There is no ROM loaded, or it is invalid.\")\n        }\n    },\n    \n    frame: function() {\n        this.ppu.startFrame()\n        var cycles = 0\n        var emulateSound = this.opts.emulateSound\n        var cpu = this.cpu\n        var ppu = this.ppu\n        var papu = this.papu\n        FRAMELOOP: for () {\n            if (cpu.cyclesToHalt === 0) {\n                // Execute a CPU instruction\n                cycles = cpu.emulate()\n                if (emulateSound) {\n                    papu.clockFrameCounter(cycles)\n                }\n                cycles *= 3\n            }\n            else {\n                if (cpu.cyclesToHalt > 8) {\n                    cycles = 24\n                    if (emulateSound) {\n                        papu.clockFrameCounter(8)\n                    }\n                    cpu.cyclesToHalt -= 8\n                }\n                else {\n                    cycles = cpu.cyclesToHalt * 3\n                    if (emulateSound) {\n                        papu.clockFrameCounter(cpu.cyclesToHalt)\n                    }\n                    cpu.cyclesToHalt = 0\n                }\n            }\n            \n            for ( cycles > 0 cycles--) {\n                if(ppu.curX === ppu.spr0HitX &&\n                        ppu.f_spVisibility === 1 &&\n                        ppu.scanline - 21 === ppu.spr0HitY) {\n                    // Set sprite 0 hit flag:\n                    ppu.setStatusFlag(ppu.STATUS_SPRITE0HIT, true)\n                }\n\n                if (ppu.requestEndFrame) {\n                    ppu.nmiCounter--\n                    if (ppu.nmiCounter === 0) {\n                        ppu.requestEndFrame = false\n                        ppu.startVBlank()\n                        break FRAMELOOP\n                    }\n                }\n\n                ppu.curX++\n                if (ppu.curX === 341) {\n                    ppu.curX = 0\n                    ppu.endScanline()\n                }\n            }\n        }\n        if (this.limitFrames) {\n            if (this.lastFrameTime) {\n                while (+new Date() - this.lastFrameTime < this.frameTime) {\n                    // twiddle thumbs\n                }\n            }\n        }\n        this.fpsFrameCount++\n        this.lastFrameTime = +new Date()\n    },\n    \n    printFps: function() {\n        var now = +new Date()\n        var s = 'Running'\n        if (this.lastFpsTime) {\n            s += ': '+(\n                this.fpsFrameCount / ((now - this.lastFpsTime) / 1000)\n            ).toFixed(2)+' FPS'\n        }\n        this.ui.updateStatus(s)\n        this.fpsFrameCount = 0\n        this.lastFpsTime = now\n    },\n    \n    stop: function() {\n        clearInterval(this.frameInterval)\n        clearInterval(this.fpsInterval)\n        this.isRunning = false\n    },\n    \n    reloadRom: function() {\n        if (this.romData !== null) {\n            this.loadRom(this.romData)\n        }\n    },\n    \n    // Loads a ROM file into the CPU and PPU.\n    // The ROM file is validated first.\n    loadRom: function(data) {\n        if (this.isRunning) {\n            this.stop()\n        }\n        \n        this.ui.updateStatus(\"Loading ROM...\")\n        \n        // Load ROM file:\n        this.rom = new JSNES.ROM(this)\n        this.rom.load(data)\n        \n        if (this.rom.valid) {\n            this.reset()\n            this.mmap = this.rom.createMapper()\n            if (!this.mmap) {\n                return\n            }\n            this.mmap.loadROM()\n            this.ppu.setMirroring(this.rom.getMirroringType())\n            this.romData = data\n            \n            this.ui.updateStatus(\"Successfully loaded. Ready to be started.\")\n        }\n        else {\n            this.ui.updateStatus(\"Invalid ROM!\")\n        }\n        return this.rom.valid\n    },\n    \n    resetFps: function() {\n        this.lastFpsTime = null\n        this.fpsFrameCount = 0\n    },\n    \n    setFramerate: function(rate){\n        this.opts.preferredFrameRate = rate\n        this.frameTime = 1000 / rate\n        this.papu.setSampleRate(this.opts.sampleRate, false)\n    },\n    \n    setLimitFrames: function(limit) {\n        this.limitFrames = limit\n        this.lastFrameTime = null\n    },\n    \n    toJSON: function() {\n        return {\n            'romData': this.romData,\n            'cpu': this.cpu.toJSON(),\n            'mmap': this.mmap.toJSON(),\n            'ppu': this.ppu.toJSON()\n        }\n    },\n    \n    fromJSON: function(s) {\n        this.loadRom(s.romData)\n        this.cpu.fromJSON(s.cpu)\n        this.mmap.fromJSON(s.mmap)\n        this.ppu.fromJSON(s.ppu)\n    }\n}\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/nes.js",
			"file_size": 7267,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 7180,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin\nJSNES, based on Jamie Sanders' vNES\nCopyright (C) 2010 Ben Firshman\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n=end\n\nJSNES.PAPU = function(nes) {\n    this.nes = nes\n    \n    this.square1 = new JSNES.PAPU.ChannelSquare(this, true)\n    this.square2 = new JSNES.PAPU.ChannelSquare(this, false)\n    this.triangle = new JSNES.PAPU.ChannelTriangle(this)\n    this.noise = new JSNES.PAPU.ChannelNoise(this)\n    this.dmc = new JSNES.PAPU.ChannelDM(this)\n\n    this.frameIrqCounter = null\n    this.frameIrqCounterMax = 4\n    this.initCounter = 2048\n    this.channelEnableValue = null\n\n    this.bufferSize = 8192\n    this.bufferIndex = 0\n    this.sampleRate = 44100\n\n    this.lengthLookup = null\n    this.dmcFreqLookup = null\n    this.noiseWavelengthLookup = null\n    this.square_table = null\n    this.tnd_table = null\n    this.sampleBuffer = new Array(this.bufferSize*2)\n\n    this.frameIrqEnabled = false\n    this.frameIrqActive = null\n    this.frameClockNow = null\n    this.startedPlaying=false\n    this.recordOutput = false\n    this.initingHardware = false\n\n    this.masterFrameCounter = null\n    this.derivedFrameCounter = null\n    this.countSequence = null\n    this.sampleTimer = null\n    this.frameTime = null\n    this.sampleTimerMax = null\n    this.sampleCount = null\n    this.triValue = 0\n\n    this.smpSquare1 = null\n    this.smpSquare2 = null\n    this.smpTriangle = null\n    this.smpDmc = null\n    this.accCount = null\n\n    // DC removal vars:\n    this.prevSampleL = 0\n    this.prevSampleR = 0\n    this.smpAccumL = 0\n    this.smpAccumR = 0\n\n    // DAC range:\n    this.dacRange = 0\n    this.dcValue = 0\n\n    // Master volume:\n    this.masterVolume = 256\n\n    // Stereo positioning:\n    this.stereoPosLSquare1 = null\n    this.stereoPosLSquare2 = null\n    this.stereoPosLTriangle = null\n    this.stereoPosLNoise = null\n    this.stereoPosLDMC = null\n    this.stereoPosRSquare1 = null\n    this.stereoPosRSquare2 = null\n    this.stereoPosRTriangle = null\n    this.stereoPosRNoise = null\n    this.stereoPosRDMC = null\n\n    this.extraCycles = null\n    \n    this.maxSample = null\n    this.minSample = null\n    \n    // Panning:\n    this.panning = [80, 170, 100, 150, 128]\n    this.setPanning(this.panning)\n\n    // Initialize lookup tables:\n    this.initLengthLookup()\n    this.initDmcFrequencyLookup()\n    this.initNoiseWavelengthLookup()\n    this.initDACtables()\n    \n    // Init sound registers:\n    for (var i = 0 i < 0x14 i++) {\n        if (i === 0x10){\n            this.writeReg(0x4010, 0x10)\n        }\n        else {\n            this.writeReg(0x4000 + i, 0)\n        }\n    }\n    \n    this.reset()\n}\n\nJSNES.PAPU.prototype = {\n    reset: function() {\n        this.sampleRate = this.nes.opts.sampleRate\n        this.sampleTimerMax = Math.floor(\n            (1024.0 * this.nes.opts.CPU_FREQ_NTSC *\n                this.nes.opts.preferredFrameRate) / \n                (this.sampleRate * 60.0)\n        )\n    \n        this.frameTime = Math.floor(\n            (14915.0 * this.nes.opts.preferredFrameRate) / 60.0\n        )\n\n        this.sampleTimer = 0\n        this.bufferIndex = 0\n    \n        this.updateChannelEnable(0)\n        this.masterFrameCounter = 0\n        this.derivedFrameCounter = 0\n        this.countSequence = 0\n        this.sampleCount = 0\n        this.initCounter = 2048\n        this.frameIrqEnabled = false\n        this.initingHardware = false\n\n        this.resetCounter()\n\n        this.square1.reset()\n        this.square2.reset()\n        this.triangle.reset()\n        this.noise.reset()\n        this.dmc.reset()\n\n        this.bufferIndex = 0\n        this.accCount = 0\n        this.smpSquare1 = 0\n        this.smpSquare2 = 0\n        this.smpTriangle = 0\n        this.smpDmc = 0\n\n        this.frameIrqEnabled = false\n        this.frameIrqCounterMax = 4\n\n        this.channelEnableValue = 0xFF\n        this.startedPlaying = false\n        this.prevSampleL = 0\n        this.prevSampleR = 0\n        this.smpAccumL = 0\n        this.smpAccumR = 0\n    \n        this.maxSample = -500000\n        this.minSample = 500000\n    },\n\n    readReg: function(address){\n        // Read 0x4015:\n        var tmp = 0\n        tmp |= (this.square1.getLengthStatus()   )\n        tmp |= (this.square2.getLengthStatus() <<1)\n        tmp |= (this.triangle.getLengthStatus()<<2)\n        tmp |= (this.noise.getLengthStatus()   <<3)\n        tmp |= (this.dmc.getLengthStatus()     <<4)\n        tmp |= (((this.frameIrqActive && this.frameIrqEnabled)? 1 : 0) << 6)\n        tmp |= (this.dmc.getIrqStatus()        <<7)\n\n        this.frameIrqActive = false\n        this.dmc.irqGenerated = false\n    \n        return tmp & 0xFFFF\n    },\n\n    writeReg: function(address, value){\n        if (address >= 0x4000 && address < 0x4004) {\n            // Square Wave 1 Control\n            this.square1.writeReg(address, value)\n            ////System.out.println(\"Square Write\")\n        }\n        else if (address >= 0x4004 && address < 0x4008) {\n            // Square 2 Control\n            this.square2.writeReg(address, value)\n        }\n        else if (address >= 0x4008 && address < 0x400C) {\n            // Triangle Control\n            this.triangle.writeReg(address, value)\n        }\n        else if (address >= 0x400C && address <= 0x400F) {\n            // Noise Control\n            this.noise.writeReg(address, value)\n        }\n        else if (address === 0x4010){\n            // DMC Play mode & DMA frequency\n            this.dmc.writeReg(address, value)\n        }\n        else if (address === 0x4011){\n            // DMC Delta Counter\n            this.dmc.writeReg(address, value)\n        }\n        else if (address === 0x4012){\n            // DMC Play code starting address\n            this.dmc.writeReg(address, value)\n        }\n        else if (address === 0x4013){\n            // DMC Play code length\n            this.dmc.writeReg(address, value)\n        }\n        else if (address === 0x4015){\n            // Channel enable\n            this.updateChannelEnable(value)\n\n            if (value !== 0 && this.initCounter > 0) {\n                // Start hardware initialization\n                this.initingHardware = true\n            }\n\n            // DMC/IRQ Status\n            this.dmc.writeReg(address, value)\n        }\n        else if (address === 0x4017) {\n            // Frame counter control\n            this.countSequence = (value>>7)&1\n            this.masterFrameCounter = 0\n            this.frameIrqActive = false\n\n            if (((value>>6)&0x1)===0){\n                this.frameIrqEnabled = true\n            }\n            else {\n                this.frameIrqEnabled = false\n            }\n\n            if (this.countSequence === 0) {\n                // NTSC:\n                this.frameIrqCounterMax = 4\n                this.derivedFrameCounter = 4\n            }\n            else {\n                // PAL:\n                this.frameIrqCounterMax = 5\n                this.derivedFrameCounter = 0\n                this.frameCounterTick()\n            }\n        }\n    },\n\n    resetCounter: function(){\n        if (this.countSequence === 0) {\n            this.derivedFrameCounter = 4\n        }else{\n            this.derivedFrameCounter = 0\n        }\n    },\n\n    // Updates channel enable status.\n    // This is done on writes to the\n    // channel enable register (0x4015),\n    // and when the user enables/disables channels\n    // in the GUI.\n    updateChannelEnable: function(value){\n        this.channelEnableValue = value&0xFFFF\n        this.square1.setEnabled((value&1) !== 0)\n        this.square2.setEnabled((value&2) !== 0)\n        this.triangle.setEnabled((value&4) !== 0)\n        this.noise.setEnabled((value&8) !== 0)\n        this.dmc.setEnabled((value&16) !== 0)\n    },\n\n    // Clocks the frame counter. It should be clocked at\n    // twice the cpu speed, so the cycles will be\n    // divided by 2 for those counters that are\n    // clocked at cpu speed.\n    clockFrameCounter: function(nCycles){\n        if (this.initCounter > 0) {\n            if (this.initingHardware) {\n                this.initCounter -= nCycles\n                if (this.initCounter <= 0) {\n                    this.initingHardware = false\n                }\n                return\n            }\n        }\n\n        // Don't process ticks beyond next sampling:\n        nCycles += this.extraCycles\n        var maxCycles = this.sampleTimerMax-this.sampleTimer\n        if ((nCycles<<10) > maxCycles) {\n\n            this.extraCycles = ((nCycles<<10) - maxCycles)>>10\n            nCycles -= this.extraCycles\n\n        }else{\n        \n            this.extraCycles = 0\n        \n        }\n    \n        var dmc = this.dmc\n        var triangle = this.triangle\n        var square1 = this.square1\n        var square2 = this.square2\n        var noise = this.noise\n    \n        // Clock DMC:\n        if (dmc.isEnabled) {\n        \n            dmc.shiftCounter-=(nCycles<<3)\n            while(dmc.shiftCounter<=0 && dmc.dmaFrequency>0){\n                dmc.shiftCounter += dmc.dmaFrequency\n                dmc.clockDmc()\n            }\n\n        }\n\n        // Clock Triangle channel Prog timer:\n        if (triangle.progTimerMax>0) {\n        \n            triangle.progTimerCount -= nCycles\n            while(triangle.progTimerCount <= 0){\n            \n                triangle.progTimerCount += triangle.progTimerMax+1\n                if (triangle.linearCounter>0 && triangle.lengthCounter>0) {\n\n                    triangle.triangleCounter++\n                    triangle.triangleCounter &= 0x1F\n\n                    if (triangle.isEnabled) {\n                        if (triangle.triangleCounter>=0x10) {\n                            // Normal value.\n                            triangle.sampleValue = (triangle.triangleCounter&0xF)\n                        }else{\n                            // Inverted value.\n                            triangle.sampleValue = (0xF - (triangle.triangleCounter&0xF))\n                        }\n                        triangle.sampleValue <<= 4\n                    }\n                }\n            }\n        }\n\n        // Clock Square channel 1 Prog timer:\n        square1.progTimerCount -= nCycles\n        if (square1.progTimerCount <= 0) {\n\n            square1.progTimerCount += (square1.progTimerMax+1)<<1\n\n            square1.squareCounter++\n            square1.squareCounter&=0x7\n            square1.updateSampleValue()\n            \n        }\n\n        // Clock Square channel 2 Prog timer:\n        square2.progTimerCount -= nCycles\n        if (square2.progTimerCount <= 0) {\n\n            square2.progTimerCount += (square2.progTimerMax+1)<<1\n\n            square2.squareCounter++\n            square2.squareCounter&=0x7\n            square2.updateSampleValue()\n        \n        }\n\n        // Clock noise channel Prog timer:\n        var acc_c = nCycles\n        if (noise.progTimerCount-acc_c > 0) {\n        \n            // Do all cycles at once:\n            noise.progTimerCount -= acc_c\n            noise.accCount       += acc_c\n            noise.accValue       += acc_c * noise.sampleValue\n        \n        }else{\n        \n            // Slow-step:\n            while((acc_c--) > 0){\n            \n                if (--noise.progTimerCount <= 0 && noise.progTimerMax>0) {\n    \n                    // Update noise shift register:\n                    noise.shiftReg <<= 1\n                    noise.tmp = (((noise.shiftReg << (noise.randomMode===0?1:6)) ^ noise.shiftReg) & 0x8000 )\n                    if (noise.tmp !== 0) {\n                    \n                        // Sample value must be 0.\n                        noise.shiftReg |= 0x01\n                        noise.randomBit = 0\n                        noise.sampleValue = 0\n                    \n                    }else{\n                    \n                        // Find sample value:\n                        noise.randomBit = 1\n                        if (noise.isEnabled && noise.lengthCounter>0) {\n                            noise.sampleValue = noise.masterVolume\n                        }else{\n                            noise.sampleValue = 0\n                        }\n                    \n                    }\n                \n                    noise.progTimerCount += noise.progTimerMax\n                    \n                }\n        \n                noise.accValue += noise.sampleValue\n                noise.accCount++\n        \n            }\n        }\n    \n\n        // Frame IRQ handling:\n        if (this.frameIrqEnabled && this.frameIrqActive){\n            this.nes.cpu.requestIrq(this.nes.cpu.IRQ_NORMAL)\n        }\n\n        // Clock frame counter at double CPU speed:\n        this.masterFrameCounter += (nCycles<<1)\n        if (this.masterFrameCounter >= this.frameTime) {\n            // 240Hz tick:\n            this.masterFrameCounter -= this.frameTime\n            this.frameCounterTick()\n        }\n    \n        // Accumulate sample value:\n        this.accSample(nCycles)\n\n        // Clock sample timer:\n        this.sampleTimer += nCycles<<10\n        if (this.sampleTimer>=this.sampleTimerMax) {\n            // Sample channels:\n            this.sample()\n            this.sampleTimer -= this.sampleTimerMax\n        }\n    },\n\n    accSample: function(cycles) {\n        // Special treatment for triangle channel - need to interpolate.\n        if (this.triangle.sampleCondition) {\n            this.triValue = Math.floor((this.triangle.progTimerCount << 4) /\n                    (this.triangle.progTimerMax + 1))\n            if (this.triValue > 16) {\n                this.triValue = 16\n            }\n            if (this.triangle.triangleCounter >= 16) {\n                this.triValue = 16 - this.triValue\n            }\n        \n            // Add non-interpolated sample value:\n            this.triValue += this.triangle.sampleValue\n        }\n    \n        // Now sample normally:\n        if (cycles === 2) {\n        \n            this.smpTriangle += this.triValue                << 1\n            this.smpDmc      += this.dmc.sample         << 1\n            this.smpSquare1  += this.square1.sampleValue    << 1\n            this.smpSquare2  += this.square2.sampleValue    << 1\n            this.accCount    += 2\n        \n        }else if (cycles === 4) {\n        \n            this.smpTriangle += this.triValue                << 2\n            this.smpDmc      += this.dmc.sample         << 2\n            this.smpSquare1  += this.square1.sampleValue    << 2\n            this.smpSquare2  += this.square2.sampleValue    << 2\n            this.accCount    += 4\n        \n        }else{\n        \n            this.smpTriangle += cycles * this.triValue\n            this.smpDmc      += cycles * this.dmc.sample\n            this.smpSquare1  += cycles * this.square1.sampleValue\n            this.smpSquare2  += cycles * this.square2.sampleValue\n            this.accCount    += cycles\n        \n        }\n    \n    },\n\n    frameCounterTick: function(){\n    \n        this.derivedFrameCounter++\n        if (this.derivedFrameCounter >= this.frameIrqCounterMax) {\n            this.derivedFrameCounter = 0\n        }\n    \n        if (this.derivedFrameCounter===1 || this.derivedFrameCounter===3) {\n\n            // Clock length & sweep:\n            this.triangle.clockLengthCounter()\n            this.square1.clockLengthCounter()\n            this.square2.clockLengthCounter()\n            this.noise.clockLengthCounter()\n            this.square1.clockSweep()\n            this.square2.clockSweep()\n\n        }\n\n        if (this.derivedFrameCounter >= 0 && this.derivedFrameCounter < 4) {\n\n            // Clock linear & decay:            \n            this.square1.clockEnvDecay()\n            this.square2.clockEnvDecay()\n            this.noise.clockEnvDecay()\n            this.triangle.clockLinearCounter()\n\n        }\n    \n        if (this.derivedFrameCounter === 3 && this.countSequence===0) {\n        \n            // Enable IRQ:\n            this.frameIrqActive = true\n        \n        }\n    \n    \n        // End of 240Hz tick\n    \n    },\n\n\n    // Samples the channels, mixes the output together,\n    // writes to buffer and (if enabled) file.\n    sample: function(){\n        var sq_index, tnd_index\n        \n        if (this.accCount > 0) {\n\n            this.smpSquare1 <<= 4\n            this.smpSquare1 = Math.floor(this.smpSquare1 / this.accCount)\n\n            this.smpSquare2 <<= 4\n            this.smpSquare2 = Math.floor(this.smpSquare2 / this.accCount)\n\n            this.smpTriangle = Math.floor(this.smpTriangle / this.accCount)\n\n            this.smpDmc <<= 4\n            this.smpDmc = Math.floor(this.smpDmc / this.accCount)\n        \n            this.accCount = 0\n        }\n        else {\n            this.smpSquare1 = this.square1.sampleValue << 4\n            this.smpSquare2 = this.square2.sampleValue << 4\n            this.smpTriangle = this.triangle.sampleValue\n            this.smpDmc = this.dmc.sample << 4\n        }\n    \n        var smpNoise = Math.floor((this.noise.accValue << 4) / \n                this.noise.accCount)\n        this.noise.accValue = smpNoise >> 4\n        this.noise.accCount = 1\n\n        // Stereo sound.\n    \n        // Left channel:\n        sq_index  = (\n                this.smpSquare1 * this.stereoPosLSquare1 + \n                this.smpSquare2 * this.stereoPosLSquare2\n            ) >> 8\n        tnd_index = (\n                3 * this.smpTriangle * this.stereoPosLTriangle + \n                (smpNoise<<1) * this.stereoPosLNoise + this.smpDmc * \n                this.stereoPosLDMC\n            ) >> 8\n        if (sq_index >= this.square_table.length) {\n            sq_index  = this.square_table.length-1\n        }\n        if (tnd_index >= this.tnd_table.length) {\n            tnd_index = this.tnd_table.length - 1\n        }\n        var sampleValueL = this.square_table[sq_index] + \n                this.tnd_table[tnd_index] - this.dcValue\n\n        // Right channel:\n        sq_index = (this.smpSquare1 * this.stereoPosRSquare1 +  \n                this.smpSquare2 * this.stereoPosRSquare2\n            ) >> 8\n        tnd_index = (3 * this.smpTriangle * this.stereoPosRTriangle + \n                (smpNoise << 1) * this.stereoPosRNoise + this.smpDmc * \n                this.stereoPosRDMC\n            ) >> 8\n        if (sq_index >= this.square_table.length) {\n            sq_index = this.square_table.length - 1\n        }\n        if (tnd_index >= this.tnd_table.length) {\n            tnd_index = this.tnd_table.length - 1\n        }\n        var sampleValueR = this.square_table[sq_index] + \n                this.tnd_table[tnd_index] - this.dcValue\n\n        // Remove DC from left channel:\n        var smpDiffL = sampleValueL - this.prevSampleL\n        this.prevSampleL += smpDiffL\n        this.smpAccumL += smpDiffL - (this.smpAccumL >> 10)\n        sampleValueL = this.smpAccumL\n        \n        // Remove DC from right channel:\n        var smpDiffR     = sampleValueR - this.prevSampleR\n        this.prevSampleR += smpDiffR\n        this.smpAccumR  += smpDiffR - (this.smpAccumR >> 10)\n        sampleValueR = this.smpAccumR\n\n        // Write:\n        if (sampleValueL > this.maxSample) {\n            this.maxSample = sampleValueL\n        }\n        if (sampleValueL < this.minSample) {\n            this.minSample = sampleValueL\n        }\n        this.sampleBuffer[this.bufferIndex++] = sampleValueL\n        this.sampleBuffer[this.bufferIndex++] = sampleValueR\n        \n        // Write full buffer\n        if (this.bufferIndex === this.sampleBuffer.length) {\n            this.nes.ui.writeAudio(this.sampleBuffer)\n            this.sampleBuffer = new Array(this.bufferSize*2)\n            this.bufferIndex = 0\n        }\n\n        // Reset sampled values:\n        this.smpSquare1 = 0\n        this.smpSquare2 = 0\n        this.smpTriangle = 0\n        this.smpDmc = 0\n\n    },\n\n    getLengthMax: function(value){\n        return this.lengthLookup[value >> 3]\n    },\n\n    getDmcFrequency: function(value){\n        if (value >= 0 && value < 0x10) {\n            return this.dmcFreqLookup[value]\n        }\n        return 0\n    },\n\n    getNoiseWaveLength: function(value){\n        if (value >= 0 && value < 0x10) {\n            return this.noiseWavelengthLookup[value]\n        }\n        return 0\n    },\n\n    setPanning: function(pos){\n        for (var i = 0 i < 5 i++) {\n            this.panning[i] = pos[i]\n        }\n        this.updateStereoPos()\n    },\n\n    setMasterVolume: function(value){\n        if (value < 0) {\n            value = 0\n        }\n        if (value > 256) {\n            value = 256\n        }\n        this.masterVolume = value\n        this.updateStereoPos()\n    },\n\n    updateStereoPos: function(){\n        this.stereoPosLSquare1 = (this.panning[0] * this.masterVolume) >> 8\n        this.stereoPosLSquare2 = (this.panning[1] * this.masterVolume) >> 8\n        this.stereoPosLTriangle = (this.panning[2] * this.masterVolume) >> 8\n        this.stereoPosLNoise = (this.panning[3] * this.masterVolume) >> 8\n        this.stereoPosLDMC = (this.panning[4] * this.masterVolume) >> 8\n    \n        this.stereoPosRSquare1 = this.masterVolume - this.stereoPosLSquare1\n        this.stereoPosRSquare2 = this.masterVolume - this.stereoPosLSquare2\n        this.stereoPosRTriangle = this.masterVolume - this.stereoPosLTriangle\n        this.stereoPosRNoise = this.masterVolume - this.stereoPosLNoise\n        this.stereoPosRDMC = this.masterVolume - this.stereoPosLDMC\n    },\n\n    initLengthLookup: function(){\n\n        this.lengthLookup = [\n            0x0A, 0xFE,\n            0x14, 0x02,\n            0x28, 0x04,\n            0x50, 0x06,\n            0xA0, 0x08,\n            0x3C, 0x0A,\n            0x0E, 0x0C,\n            0x1A, 0x0E,\n            0x0C, 0x10,\n            0x18, 0x12,\n            0x30, 0x14,\n            0x60, 0x16,\n            0xC0, 0x18,\n            0x48, 0x1A,\n            0x10, 0x1C,\n            0x20, 0x1E\n        ]\n    },\n\n    initDmcFrequencyLookup: function(){\n\n        this.dmcFreqLookup = new Array(16)\n\n        this.dmcFreqLookup[0x0] = 0xD60\n        this.dmcFreqLookup[0x1] = 0xBE0\n        this.dmcFreqLookup[0x2] = 0xAA0\n        this.dmcFreqLookup[0x3] = 0xA00\n        this.dmcFreqLookup[0x4] = 0x8F0\n        this.dmcFreqLookup[0x5] = 0x7F0\n        this.dmcFreqLookup[0x6] = 0x710\n        this.dmcFreqLookup[0x7] = 0x6B0\n        this.dmcFreqLookup[0x8] = 0x5F0\n        this.dmcFreqLookup[0x9] = 0x500\n        this.dmcFreqLookup[0xA] = 0x470\n        this.dmcFreqLookup[0xB] = 0x400\n        this.dmcFreqLookup[0xC] = 0x350\n        this.dmcFreqLookup[0xD] = 0x2A0\n        this.dmcFreqLookup[0xE] = 0x240\n        this.dmcFreqLookup[0xF] = 0x1B0\n        //for(int i=0i<16i++)dmcFreqLookup[i]/=8\n\n    },\n\n    initNoiseWavelengthLookup: function(){\n\n        this.noiseWavelengthLookup = new Array(16)\n\n        this.noiseWavelengthLookup[0x0] = 0x004\n        this.noiseWavelengthLookup[0x1] = 0x008\n        this.noiseWavelengthLookup[0x2] = 0x010\n        this.noiseWavelengthLookup[0x3] = 0x020\n        this.noiseWavelengthLookup[0x4] = 0x040\n        this.noiseWavelengthLookup[0x5] = 0x060\n        this.noiseWavelengthLookup[0x6] = 0x080\n        this.noiseWavelengthLookup[0x7] = 0x0A0\n        this.noiseWavelengthLookup[0x8] = 0x0CA\n        this.noiseWavelengthLookup[0x9] = 0x0FE\n        this.noiseWavelengthLookup[0xA] = 0x17C\n        this.noiseWavelengthLookup[0xB] = 0x1FC\n        this.noiseWavelengthLookup[0xC] = 0x2FA\n        this.noiseWavelengthLookup[0xD] = 0x3F8\n        this.noiseWavelengthLookup[0xE] = 0x7F2\n        this.noiseWavelengthLookup[0xF] = 0xFE4\n    \n    },\n\n    initDACtables: function(){\n        var value, ival, i\n        var max_sqr = 0\n        var max_tnd = 0\n        \n        this.square_table = new Array(32*16)\n        this.tnd_table = new Array(204*16)\n\n        for (i = 0 i < 32 * 16 i++) {\n            value = 95.52 / (8128.0 / (i/16.0) + 100.0)\n            value *= 0.98411\n            value *= 50000.0\n            ival = Math.floor(value)\n        \n            this.square_table[i] = ival\n            if (ival > max_sqr) {\n                max_sqr = ival\n            }\n        }\n    \n        for (i = 0 i < 204 * 16 i++) {\n            value = 163.67 / (24329.0 / (i/16.0) + 100.0)\n            value *= 0.98411\n            value *= 50000.0\n            ival = Math.floor(value)\n        \n            this.tnd_table[i] = ival\n            if (ival > max_tnd) {\n                max_tnd = ival\n            }\n\n        }\n    \n        this.dacRange = max_sqr+max_tnd\n        this.dcValue = this.dacRange/2\n\n    }\n}\n\n\nJSNES.PAPU.ChannelDM = function(papu) {\n    this.papu = papu\n    \n    this.MODE_NORMAL = 0\n    this.MODE_LOOP = 1\n    this.MODE_IRQ = 2\n    \n    this.isEnabled = null\n    this.hasSample = null\n    this.irqGenerated = false\n    \n    this.playMode = null\n    this.dmaFrequency = null\n    this.dmaCounter = null\n    this.deltaCounter = null\n    this.playStartAddress = null\n    this.playAddress = null\n    this.playLength = null\n    this.playLengthCounter = null\n    this.shiftCounter = null\n    this.reg4012 = null\n    this.reg4013 = null\n    this.sample = null\n    this.dacLsb = null\n    this.data = null\n    \n    this.reset()\n}\n    \nJSNES.PAPU.ChannelDM.prototype = {\n    clockDmc: function() {\n    \n        // Only alter DAC value if the sample buffer has data:\n        if(this.hasSample) {\n        \n            if ((this.data & 1) === 0) {\n            \n                // Decrement delta:\n                if(this.deltaCounter>0) {\n                    this.deltaCounter--\n                }\n            }\n            else {\n                // Increment delta:\n                if (this.deltaCounter < 63) {\n                    this.deltaCounter++\n                }\n            }\n        \n            // Update sample value:\n            this.sample = this.isEnabled ? (this.deltaCounter << 1) + this.dacLsb : 0\n        \n            // Update shift register:\n            this.data >>= 1\n        \n        }\n    \n        this.dmaCounter--\n        if (this.dmaCounter <= 0) {\n        \n            // No more sample bits.\n            this.hasSample = false\n            this.endOfSample()\n            this.dmaCounter = 8\n        \n        }\n    \n        if (this.irqGenerated) {\n            this.papu.nes.cpu.requestIrq(this.papu.nes.cpu.IRQ_NORMAL)\n        }\n    \n    },\n\n    endOfSample: function() {\n        if (this.playLengthCounter === 0 && this.playMode === this.MODE_LOOP) {\n        \n            // Start from beginning of sample:\n            this.playAddress = this.playStartAddress\n            this.playLengthCounter = this.playLength\n        \n        }\n    \n        if (this.playLengthCounter > 0) {\n        \n            // Fetch next sample:\n            this.nextSample()\n        \n            if (this.playLengthCounter === 0) {\n        \n                // Last byte of sample fetched, generate IRQ:\n                if (this.playMode === this.MODE_IRQ) {\n                \n                    // Generate IRQ:\n                    this.irqGenerated = true\n                \n                }\n            \n            }\n        \n        }\n    \n    },\n\n    nextSample: function() {\n        // Fetch byte:\n        this.data = this.papu.nes.mmap.load(this.playAddress)\n        this.papu.nes.cpu.haltCycles(4)\n    \n        this.playLengthCounter--\n        this.playAddress++\n        if (this.playAddress > 0xFFFF) {\n            this.playAddress = 0x8000\n        }\n    \n        this.hasSample = true\n    },\n\n    writeReg: function(address, value) {\n        if (address === 0x4010) {\n        \n            // Play mode, DMA Frequency\n            if ((value >> 6) === 0) {\n                this.playMode = this.MODE_NORMAL\n            }\n            else if (((value >> 6) & 1) === 1) {\n                this.playMode = this.MODE_LOOP\n            }\n            else if ((value >> 6) === 2) {\n                this.playMode = this.MODE_IRQ\n            }\n        \n            if ((value & 0x80) === 0) {\n                this.irqGenerated = false\n            }\n        \n            this.dmaFrequency = this.papu.getDmcFrequency(value & 0xF)\n        \n        }\n        else if (address === 0x4011) {\n        \n            // Delta counter load register:\n            this.deltaCounter = (value >> 1) & 63\n            this.dacLsb = value & 1\n            this.sample = ((this.deltaCounter << 1) + this.dacLsb) // update sample value\n        \n        }\n        else if (address === 0x4012) {\n        \n            // DMA address load register\n            this.playStartAddress = (value << 6) | 0x0C000\n            this.playAddress = this.playStartAddress\n            this.reg4012 = value\n        \n        }\n        else if (address === 0x4013) {\n        \n            // Length of play code\n            this.playLength = (value << 4) + 1\n            this.playLengthCounter = this.playLength\n            this.reg4013 = value\n        \n        }\n        else if (address === 0x4015) {\n        \n            // DMC/IRQ Status\n            if (((value >> 4) & 1) === 0) {\n                // Disable:\n                this.playLengthCounter = 0\n            }\n            else {\n                // Restart:\n                this.playAddress = this.playStartAddress\n                this.playLengthCounter = this.playLength\n            }\n            this.irqGenerated = false\n        }\n    },\n\n    setEnabled: function(value) {\n        if ((!this.isEnabled) && value) {\n            this.playLengthCounter = this.playLength\n        }\n        this.isEnabled = value\n    },\n\n    getLengthStatus: function(){\n        return ((this.playLengthCounter === 0 || !this.isEnabled) ? 0 : 1)\n    },\n\n    getIrqStatus: function(){\n        return (this.irqGenerated ? 1 : 0)\n    },\n\n    reset: function(){\n        this.isEnabled = false\n        this.irqGenerated = false\n        this.playMode = this.MODE_NORMAL\n        this.dmaFrequency = 0\n        this.dmaCounter = 0\n        this.deltaCounter = 0\n        this.playStartAddress = 0\n        this.playAddress = 0\n        this.playLength = 0\n        this.playLengthCounter = 0\n        this.sample = 0\n        this.dacLsb = 0\n        this.shiftCounter = 0\n        this.reg4012 = 0\n        this.reg4013 = 0\n        this.data = 0\n    }\n}\n\n\nJSNES.PAPU.ChannelNoise = function(papu) {\n    this.papu = papu\n    \n    this.isEnabled = null\n    this.envDecayDisable = null\n    this.envDecayLoopEnable = null\n    this.lengthCounterEnable = null\n    this.envReset = null\n    this.shiftNow = null\n    \n    this.lengthCounter = null\n    this.progTimerCount = null\n    this.progTimerMax = null\n    this.envDecayRate = null\n    this.envDecayCounter = null\n    this.envVolume = null\n    this.masterVolume = null\n    this.shiftReg = 1<<14\n    this.randomBit = null\n    this.randomMode = null\n    this.sampleValue = null\n    this.accValue=0\n    this.accCount=1\n    this.tmp = null\n    \n    this.reset()\n}\n\nJSNES.PAPU.ChannelNoise.prototype = {\n    reset: function() {\n        this.progTimerCount = 0\n        this.progTimerMax = 0\n        this.isEnabled = false\n        this.lengthCounter = 0\n        this.lengthCounterEnable = false\n        this.envDecayDisable = false\n        this.envDecayLoopEnable = false\n        this.shiftNow = false\n        this.envDecayRate = 0\n        this.envDecayCounter = 0\n        this.envVolume = 0\n        this.masterVolume = 0\n        this.shiftReg = 1\n        this.randomBit = 0\n        this.randomMode = 0\n        this.sampleValue = 0\n        this.tmp = 0\n    },\n\n    clockLengthCounter: function(){\n        if (this.lengthCounterEnable && this.lengthCounter>0){\n            this.lengthCounter--\n            if (this.lengthCounter === 0) {\n                this.updateSampleValue()\n            }\n        }\n    },\n\n    clockEnvDecay: function() {\n        if(this.envReset) {\n            // Reset envelope:\n            this.envReset = false\n            this.envDecayCounter = this.envDecayRate + 1\n            this.envVolume = 0xF\n        }\n        else if (--this.envDecayCounter <= 0) {\n            // Normal handling:\n            this.envDecayCounter = this.envDecayRate + 1\n            if(this.envVolume>0) {\n                this.envVolume--\n            }\n            else {\n                this.envVolume = this.envDecayLoopEnable ? 0xF : 0\n            }   \n        }\n        this.masterVolume = this.envDecayDisable ? this.envDecayRate : this.envVolume\n        this.updateSampleValue()\n    },\n\n    updateSampleValue: function() {\n        if (this.isEnabled && this.lengthCounter>0) {\n            this.sampleValue = this.randomBit * this.masterVolume\n        }\n    },\n\n    writeReg: function(address, value){\n        if(address === 0x400C) {\n            // Volume/Envelope decay:\n            this.envDecayDisable = ((value&0x10) !== 0)\n            this.envDecayRate = value&0xF\n            this.envDecayLoopEnable = ((value&0x20) !== 0)\n            this.lengthCounterEnable = ((value&0x20)===0)\n            this.masterVolume = this.envDecayDisable?this.envDecayRate:this.envVolume\n        \n        }else if(address === 0x400E) {\n            // Programmable timer:\n            this.progTimerMax = this.papu.getNoiseWaveLength(value&0xF)\n            this.randomMode = value>>7\n        \n        }else if(address === 0x400F) {\n            // Length counter\n            this.lengthCounter = this.papu.getLengthMax(value&248)\n            this.envReset = true\n        }\n        // Update:\n        //updateSampleValue()\n    },\n\n    setEnabled: function(value){\n        this.isEnabled = value\n        if (!value) {\n            this.lengthCounter = 0\n        }\n        this.updateSampleValue()\n    },\n\n    getLengthStatus: function() {\n        return ((this.lengthCounter===0 || !this.isEnabled)?0:1)\n    }\n}\n\n\nJSNES.PAPU.ChannelSquare = function(papu, square1) {\n    this.papu = papu\n    \n    this.dutyLookup = [\n         0, 1, 0, 0, 0, 0, 0, 0,\n         0, 1, 1, 0, 0, 0, 0, 0,\n         0, 1, 1, 1, 1, 0, 0, 0,\n         1, 0, 0, 1, 1, 1, 1, 1\n    ]\n    this.impLookup = [\n         1,-1, 0, 0, 0, 0, 0, 0,\n         1, 0,-1, 0, 0, 0, 0, 0,\n         1, 0, 0, 0,-1, 0, 0, 0,\n        -1, 0, 1, 0, 0, 0, 0, 0\n    ]\n    \n    this.sqr1 = square1\n    this.isEnabled = null\n    this.lengthCounterEnable = null\n    this.sweepActive = null\n    this.envDecayDisable = null\n    this.envDecayLoopEnable = null\n    this.envReset = null\n    this.sweepCarry = null\n    this.updateSweepPeriod = null\n    \n    this.progTimerCount = null\n    this.progTimerMax = null\n    this.lengthCounter = null\n    this.squareCounter = null\n    this.sweepCounter = null\n    this.sweepCounterMax = null\n    this.sweepMode = null\n    this.sweepShiftAmount = null\n    this.envDecayRate = null\n    this.envDecayCounter = null\n    this.envVolume = null\n    this.masterVolume = null\n    this.dutyMode = null\n    this.sweepResult = null\n    this.sampleValue = null\n    this.vol = null\n    \n    this.reset()\n}\n\nJSNES.PAPU.ChannelSquare.prototype = {\n    reset: function() {\n        this.progTimerCount = 0\n        this.progTimerMax = 0\n        this.lengthCounter = 0\n        this.squareCounter = 0\n        this.sweepCounter = 0\n        this.sweepCounterMax = 0\n        this.sweepMode = 0\n        this.sweepShiftAmount = 0\n        this.envDecayRate = 0\n        this.envDecayCounter = 0\n        this.envVolume = 0\n        this.masterVolume = 0\n        this.dutyMode = 0\n        this.vol = 0\n    \n        this.isEnabled = false\n        this.lengthCounterEnable = false\n        this.sweepActive = false\n        this.sweepCarry = false\n        this.envDecayDisable = false\n        this.envDecayLoopEnable = false\n    },\n\n    clockLengthCounter: function() {\n        if (this.lengthCounterEnable && this.lengthCounter > 0){\n            this.lengthCounter--\n            if (this.lengthCounter === 0) {\n                this.updateSampleValue()\n            }\n        }\n    },\n\n    clockEnvDecay: function() {\n        if (this.envReset) {\n            // Reset envelope:\n            this.envReset = false\n            this.envDecayCounter = this.envDecayRate + 1\n            this.envVolume = 0xF\n        }else if ((--this.envDecayCounter) <= 0) {\n            // Normal handling:\n            this.envDecayCounter = this.envDecayRate + 1\n            if (this.envVolume>0) {\n                this.envVolume--\n            }else{\n                this.envVolume = this.envDecayLoopEnable ? 0xF : 0\n            }\n        }\n    \n        this.masterVolume = this.envDecayDisable ? this.envDecayRate : this.envVolume\n        this.updateSampleValue()\n    },\n\n    clockSweep: function() {\n        if (--this.sweepCounter<=0) {\n        \n            this.sweepCounter = this.sweepCounterMax + 1\n            if (this.sweepActive && this.sweepShiftAmount>0 && this.progTimerMax>7) {\n            \n                // Calculate result from shifter:\n                this.sweepCarry = false\n                if (this.sweepMode===0) {\n                    this.progTimerMax += (this.progTimerMax>>this.sweepShiftAmount)\n                    if (this.progTimerMax > 4095) {\n                        this.progTimerMax = 4095\n                        this.sweepCarry = true\n                    }\n                }else{\n                    this.progTimerMax = this.progTimerMax - ((this.progTimerMax>>this.sweepShiftAmount)-(this.sqr1?1:0))\n                }\n            }\n        }\n    \n        if (this.updateSweepPeriod) {\n            this.updateSweepPeriod = false\n            this.sweepCounter = this.sweepCounterMax + 1\n        }\n    },\n\n    updateSampleValue: function() {\n        if (this.isEnabled && this.lengthCounter>0 && this.progTimerMax>7) {\n        \n            if (this.sweepMode===0 && (this.progTimerMax + (this.progTimerMax>>this.sweepShiftAmount)) > 4095) {\n            //if (this.sweepCarry) {\n                this.sampleValue = 0\n            }else{\n                this.sampleValue = this.masterVolume*this.dutyLookup[(this.dutyMode<<3)+this.squareCounter]    \n            }\n        }else{\n            this.sampleValue = 0\n        }\n    },\n\n    writeReg: function(address, value){\n        var addrAdd = (this.sqr1?0:4)\n        if (address === 0x4000 + addrAdd) {\n            // Volume/Envelope decay:\n            this.envDecayDisable = ((value&0x10) !== 0)\n            this.envDecayRate = value & 0xF\n            this.envDecayLoopEnable = ((value&0x20) !== 0)\n            this.dutyMode = (value>>6)&0x3\n            this.lengthCounterEnable = ((value&0x20)===0)\n            this.masterVolume = this.envDecayDisable?this.envDecayRate:this.envVolume\n            this.updateSampleValue()\n        \n        }\n        else if (address === 0x4001+addrAdd) {\n            // Sweep:\n            this.sweepActive = ((value&0x80) !== 0)\n            this.sweepCounterMax = ((value>>4)&7)\n            this.sweepMode = (value>>3)&1\n            this.sweepShiftAmount = value&7\n            this.updateSweepPeriod = true\n        }\n        else if (address === 0x4002+addrAdd){\n            // Programmable timer:\n            this.progTimerMax &= 0x700\n            this.progTimerMax |= value\n        }\n        else if (address === 0x4003+addrAdd) {\n            // Programmable timer, length counter\n            this.progTimerMax &= 0xFF\n            this.progTimerMax |= ((value&0x7)<<8)\n        \n            if (this.isEnabled){\n                this.lengthCounter = this.papu.getLengthMax(value&0xF8)\n            }\n        \n            this.envReset  = true\n        }\n    },\n\n    setEnabled: function(value) {\n        this.isEnabled = value\n        if (!value) {\n            this.lengthCounter = 0\n        }\n        this.updateSampleValue()\n    },\n\n    getLengthStatus: function() {\n        return ((this.lengthCounter === 0 || !this.isEnabled) ? 0 : 1)\n    }\n}\n\n\nJSNES.PAPU.ChannelTriangle = function(papu) {\n    this.papu = papu\n    \n    this.isEnabled = null\n    this.sampleCondition = null\n    this.lengthCounterEnable = null\n    this.lcHalt = null\n    this.lcControl = null\n    \n    this.progTimerCount = null\n    this.progTimerMax = null\n    this.triangleCounter = null\n    this.lengthCounter = null\n    this.linearCounter = null\n    this.lcLoadValue = null\n    this.sampleValue = null\n    this.tmp = null\n    \n    this.reset()\n}\n\nJSNES.PAPU.ChannelTriangle.prototype = {\n    reset: function(){\n        this.progTimerCount = 0\n        this.progTimerMax = 0\n        this.triangleCounter = 0\n        this.isEnabled = false\n        this.sampleCondition = false\n        this.lengthCounter = 0\n        this.lengthCounterEnable = false\n        this.linearCounter = 0\n        this.lcLoadValue = 0\n        this.lcHalt = true\n        this.lcControl = false\n        this.tmp = 0\n        this.sampleValue = 0xF\n    },\n\n    clockLengthCounter: function(){\n        if (this.lengthCounterEnable && this.lengthCounter>0) {\n            this.lengthCounter--\n            if (this.lengthCounter===0) {\n                this.updateSampleCondition()\n            }\n        }\n    },\n\n    clockLinearCounter: function(){\n        if (this.lcHalt){\n            // Load:\n            this.linearCounter = this.lcLoadValue\n            this.updateSampleCondition()\n        }\n        else if (this.linearCounter > 0) {\n            // Decrement:\n            this.linearCounter--\n            this.updateSampleCondition()\n        }\n        if (!this.lcControl) {\n            // Clear halt flag:\n            this.lcHalt = false\n        }\n    },\n\n    getLengthStatus: function(){\n        return ((this.lengthCounter === 0 || !this.isEnabled)?0:1)\n    },\n\n    readReg: function(address){\n        return 0\n    },\n\n    writeReg: function(address, value){\n        if (address === 0x4008) {\n            // New values for linear counter:\n            this.lcControl  = (value&0x80)!==0\n            this.lcLoadValue =  value&0x7F\n        \n            // Length counter enable:\n            this.lengthCounterEnable = !this.lcControl\n        }\n        else if (address === 0x400A) {\n            // Programmable timer:\n            this.progTimerMax &= 0x700\n            this.progTimerMax |= value\n        \n        }\n        else if(address === 0x400B) {\n            // Programmable timer, length counter\n            this.progTimerMax &= 0xFF\n            this.progTimerMax |= ((value&0x07)<<8)\n            this.lengthCounter = this.papu.getLengthMax(value&0xF8)\n            this.lcHalt = true\n        }\n    \n        this.updateSampleCondition()\n    },\n\n    clockProgrammableTimer: function(nCycles){\n        if (this.progTimerMax>0) {\n            this.progTimerCount += nCycles\n            while (this.progTimerMax > 0 && \n                    this.progTimerCount >= this.progTimerMax) {\n                this.progTimerCount -= this.progTimerMax\n                if (this.isEnabled && this.lengthCounter>0 && \n                        this.linearCounter > 0) {\n                    this.clockTriangleGenerator()\n                }\n            }\n        }\n    },\n\n    clockTriangleGenerator: function() {\n        this.triangleCounter++\n        this.triangleCounter &= 0x1F\n    },\n\n    setEnabled: function(value) {\n        this.isEnabled = value\n        if(!value) {\n            this.lengthCounter = 0\n        }\n        this.updateSampleCondition()\n    },\n\n    updateSampleCondition: function() {\n        this.sampleCondition = this.isEnabled &&\n                this.progTimerMax > 7 &&\n                this.linearCounter > 0 &&\n                this.lengthCounter > 0\n    }\n}\n\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/papu.js",
			"file_size": 44271,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 43612,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin\nJSNES, based on Jamie Sanders' vNES\nCopyright (C) 2010 Ben Firshman\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n=end\n\nJSNES.PPU = function(nes) {\n    this.nes = nes\n    \n    // Keep Chrome happy\n    this.vramMem = null\n    this.spriteMem = null\n    this.vramAddress = null\n    this.vramTmpAddress = null\n    this.vramBufferedReadValue = null\n    this.firstWrite = null\n    this.sramAddress = null\n    this.currentMirroring = null\n    this.requestEndFrame = null\n    this.nmiOk = null\n    this.dummyCycleToggle = null\n    this.validTileData = null\n    this.nmiCounter = null\n    this.scanlineAlreadyRendered = null\n    this.f_nmiOnVblank = null   \n    this.f_spriteSize = null\n    this.f_bgPatternTable = null\n    this.f_spPatternTable = null\n    this.f_addrInc = null\n    this.f_nTblAddress = null\n    this.f_color = null\n    this.f_spVisibility = null\n    this.f_bgVisibility = null\n    this.f_spClipping = null\n    this.f_bgClipping = null\n    this.f_dispType = null\n    this.cntFV = null\n    this.cntV = null\n    this.cntH = null\n    this.cntVT = null\n    this.cntHT = null\n    this.regFV = null\n    this.regV = null\n    this.regH = null\n    this.regVT = null\n    this.regHT = null\n    this.regFH = null\n    this.regS = null\n    this.curNt = null\n    this.attrib = null\n    this.buffer = null\n    this.prevBuffer = null\n    this.bgbuffer = null\n    this.pixrendered = null\n    \n    this.validTileData = null\n    this.scantile = null\n    this.scanline = null\n    this.lastRenderedScanline = null\n    this.curX = null\n    this.sprX = null \n    this.sprY = null \n    this.sprTile = null \n    this.sprCol = null \n    this.vertFlip = null \n    this.horiFlip = null \n    this.bgPriority = null \n    this.spr0HitX = null \n    this.spr0HitY = null \n    this.hitSpr0 = null\n    this.sprPalette = null\n    this.imgPalette = null\n    this.ptTile = null\n    this.ntable1 = null\n    this.currentMirroring = null\n    this.nameTable = null\n    this.vramMirrorTable = null\n    this.palTable = null\n    \n    \n    // Rendering Options:\n    this.showSpr0Hit = false\n    this.clipToTvSize = true\n    \n    this.reset()\n}\n\nJSNES.PPU.prototype = {\n    // Status flags:\n    STATUS_VRAMWRITE: 4,\n    STATUS_SLSPRITECOUNT: 5,\n    STATUS_SPRITE0HIT: 6,\n    STATUS_VBLANK: 7,\n    \n    reset: function() {\n        var i\n        \n        // Memory\n        this.vramMem = new Array(0x8000)\n        this.spriteMem = new Array(0x100)\n        for (i=0 i<this.vramMem.length i++) {\n            this.vramMem[i] = 0\n        }\n        for (i=0 i<this.spriteMem.length i++) {\n            this.spriteMem[i] = 0\n        }\n        \n        // VRAM I/O:\n        this.vramAddress = null\n        this.vramTmpAddress = null\n        this.vramBufferedReadValue = 0\n        this.firstWrite = true       // VRAM/Scroll Hi/Lo latch\n\n        // SPR-RAM I/O:\n        this.sramAddress = 0 // 8-bit only.\n        \n        this.currentMirroring = -1\n        this.requestEndFrame = false\n        this.nmiOk = false\n        this.dummyCycleToggle = false\n        this.validTileData = false\n        this.nmiCounter = 0\n        this.scanlineAlreadyRendered = null\n        \n        // Control Flags Register 1:\n        this.f_nmiOnVblank = 0    // NMI on VBlank. 0=disable, 1=enable\n        this.f_spriteSize = 0     // Sprite size. 0=8x8, 1=8x16\n        this.f_bgPatternTable = 0 // Background Pattern Table address. 0=0x0000,1=0x1000\n        this.f_spPatternTable = 0 // Sprite Pattern Table address. 0=0x0000,1=0x1000\n        this.f_addrInc = 0        // PPU Address Increment. 0=1,1=32\n        this.f_nTblAddress = 0    // Name Table Address. 0=0x2000,1=0x2400,2=0x2800,3=0x2C00\n        \n        // Control Flags Register 2:\n        this.f_color = 0         // Background color. 0=black, 1=blue, 2=green, 4=red\n        this.f_spVisibility = 0   // Sprite visibility. 0=not displayed,1=displayed\n        this.f_bgVisibility = 0   // Background visibility. 0=Not Displayed,1=displayed\n        this.f_spClipping = 0     // Sprite clipping. 0=Sprites invisible in left 8-pixel column,1=No clipping\n        this.f_bgClipping = 0     // Background clipping. 0=BG invisible in left 8-pixel column, 1=No clipping\n        this.f_dispType = 0       // Display type. 0=color, 1=monochrome\n        \n        // Counters:\n        this.cntFV = 0\n        this.cntV = 0\n        this.cntH = 0\n        this.cntVT = 0\n        this.cntHT = 0\n        \n        // Registers:\n        this.regFV = 0\n        this.regV = 0\n        this.regH = 0\n        this.regVT = 0\n        this.regHT = 0\n        this.regFH = 0\n        this.regS = 0\n        \n        // These are temporary variables used in rendering and sound procedures.\n        // Their states outside of those procedures can be ignored.\n        // TODO: the use of this is a bit weird, investigate\n        this.curNt = null\n        \n        // Variables used when rendering:\n        this.attrib = new Array(32)\n        this.buffer = new Array(256*240)\n        this.prevBuffer = new Array(256*240)\n        this.bgbuffer = new Array(256*240)\n        this.pixrendered = new Array(256*240)\n\n        this.validTileData = null\n\n        this.scantile = new Array(32)\n        \n        // Initialize misc vars:\n        this.scanline = 0\n        this.lastRenderedScanline = -1\n        this.curX = 0\n        \n        // Sprite data:\n        this.sprX = new Array(64) // X coordinate\n        this.sprY = new Array(64) // Y coordinate\n        this.sprTile = new Array(64) // Tile Index (into pattern table)\n        this.sprCol = new Array(64) // Upper two bits of color\n        this.vertFlip = new Array(64) // Vertical Flip\n        this.horiFlip = new Array(64) // Horizontal Flip\n        this.bgPriority = new Array(64) // Background priority\n        this.spr0HitX = 0 // Sprite #0 hit X coordinate\n        this.spr0HitY = 0 // Sprite #0 hit Y coordinate\n        this.hitSpr0 = false\n        \n        // Palette data:\n        this.sprPalette = new Array(16)\n        this.imgPalette = new Array(16)\n        \n        // Create pattern table tile buffers:\n        this.ptTile = new Array(512)\n        for (i=0 i<512 i++) {\n            this.ptTile[i] = new JSNES.PPU.Tile()\n        }\n        \n        // Create nametable buffers:\n        // Name table data:\n        this.ntable1 = new Array(4)\n        this.currentMirroring = -1\n        this.nameTable = new Array(4)\n        for (i=0 i<4 i++) {\n            this.nameTable[i] = new JSNES.PPU.NameTable(32, 32, \"Nt\"+i)\n        }\n        \n        // Initialize mirroring lookup table:\n        this.vramMirrorTable = new Array(0x8000)\n        for (i=0 i<0x8000 i++) {\n            this.vramMirrorTable[i] = i\n        }\n        \n        this.palTable = new JSNES.PPU.PaletteTable()\n        this.palTable.loadNTSCPalette()\n        //this.palTable.loadDefaultPalette()\n        \n        this.updateControlReg1(0)\n        this.updateControlReg2(0)\n    },\n    \n    // Sets Nametable mirroring.\n    setMirroring: function(mirroring){\n    \n        if (mirroring == this.currentMirroring) {\n            return\n        }\n        \n        this.currentMirroring = mirroring\n        this.triggerRendering()\n    \n        // Remove mirroring:\n        if (this.vramMirrorTable === null) {\n            this.vramMirrorTable = new Array(0x8000)\n        }\n        for (var i=0 i<0x8000 i++) {\n            this.vramMirrorTable[i] = i\n        }\n        \n        // Palette mirroring:\n        this.defineMirrorRegion(0x3f20,0x3f00,0x20)\n        this.defineMirrorRegion(0x3f40,0x3f00,0x20)\n        this.defineMirrorRegion(0x3f80,0x3f00,0x20)\n        this.defineMirrorRegion(0x3fc0,0x3f00,0x20)\n        \n        // Additional mirroring:\n        this.defineMirrorRegion(0x3000,0x2000,0xf00)\n        this.defineMirrorRegion(0x4000,0x0000,0x4000)\n    \n        if (mirroring == this.nes.rom.HORIZONTAL_MIRRORING) {\n            // Horizontal mirroring.\n            \n            this.ntable1[0] = 0\n            this.ntable1[1] = 0\n            this.ntable1[2] = 1\n            this.ntable1[3] = 1\n            \n            this.defineMirrorRegion(0x2400,0x2000,0x400)\n            this.defineMirrorRegion(0x2c00,0x2800,0x400)\n            \n        }else if (mirroring == this.nes.rom.VERTICAL_MIRRORING) {\n            // Vertical mirroring.\n            \n            this.ntable1[0] = 0\n            this.ntable1[1] = 1\n            this.ntable1[2] = 0\n            this.ntable1[3] = 1\n            \n            this.defineMirrorRegion(0x2800,0x2000,0x400)\n            this.defineMirrorRegion(0x2c00,0x2400,0x400)\n            \n        }else if (mirroring == this.nes.rom.SINGLESCREEN_MIRRORING) {\n            \n            // Single Screen mirroring\n            \n            this.ntable1[0] = 0\n            this.ntable1[1] = 0\n            this.ntable1[2] = 0\n            this.ntable1[3] = 0\n            \n            this.defineMirrorRegion(0x2400,0x2000,0x400)\n            this.defineMirrorRegion(0x2800,0x2000,0x400)\n            this.defineMirrorRegion(0x2c00,0x2000,0x400)\n            \n        }else if (mirroring == this.nes.rom.SINGLESCREEN_MIRRORING2) {\n            \n            \n            this.ntable1[0] = 1\n            this.ntable1[1] = 1\n            this.ntable1[2] = 1\n            this.ntable1[3] = 1\n            \n            this.defineMirrorRegion(0x2400,0x2400,0x400)\n            this.defineMirrorRegion(0x2800,0x2400,0x400)\n            this.defineMirrorRegion(0x2c00,0x2400,0x400)\n            \n        }else {\n            \n            // Assume Four-screen mirroring.\n            \n            this.ntable1[0] = 0\n            this.ntable1[1] = 1\n            this.ntable1[2] = 2\n            this.ntable1[3] = 3\n            \n        }   \n        \n    },\n    \n    \n    // Define a mirrored area in the address lookup table.\n    // Assumes the regions don't overlap.\n    // The 'to' region is the region that is physically in memory.\n    defineMirrorRegion: function(fromStart, toStart, size){\n        for (var i=0i<sizei++) {\n            this.vramMirrorTable[fromStart+i] = toStart+i\n        }\n    },\n    \n    startVBlank: function(){\n        \n        // Do NMI:\n        this.nes.cpu.requestIrq(this.nes.cpu.IRQ_NMI)\n        \n        // Make sure everything is rendered:\n        if (this.lastRenderedScanline < 239) {\n            this.renderFramePartially(\n                this.lastRenderedScanline+1,240-this.lastRenderedScanline\n            )\n        }\n        \n        // End frame:\n        this.endFrame()\n        \n        // Reset scanline counter:\n        this.lastRenderedScanline = -1\n    },\n    \n    endScanline: function(){\n        switch (this.scanline) {\n            case 19:\n                // Dummy scanline.\n                // May be variable length:\n                if (this.dummyCycleToggle) {\n\n                    // Remove dead cycle at end of scanline,\n                    // for next scanline:\n                    this.curX = 1\n                    this.dummyCycleToggle = !this.dummyCycleToggle\n\n                }\n                break\n                \n            case 20:\n                // Clear VBlank flag:\n                this.setStatusFlag(this.STATUS_VBLANK,false)\n\n                // Clear Sprite #0 hit flag:\n                this.setStatusFlag(this.STATUS_SPRITE0HIT,false)\n                this.hitSpr0 = false\n                this.spr0HitX = -1\n                this.spr0HitY = -1\n\n                if (this.f_bgVisibility == 1 || this.f_spVisibility==1) {\n\n                    // Update counters:\n                    this.cntFV = this.regFV\n                    this.cntV = this.regV\n                    this.cntH = this.regH\n                    this.cntVT = this.regVT\n                    this.cntHT = this.regHT\n\n                    if (this.f_bgVisibility==1) {\n                        // Render dummy scanline:\n                        this.renderBgScanline(false,0)\n                    }   \n\n                }\n\n                if (this.f_bgVisibility==1 && this.f_spVisibility==1) {\n\n                    // Check sprite 0 hit for first scanline:\n                    this.checkSprite0(0)\n\n                }\n\n                if (this.f_bgVisibility==1 || this.f_spVisibility==1) {\n                    // Clock mapper IRQ Counter:\n                    this.nes.mmap.clockIrqCounter()\n                }\n                break\n                \n            case 261:\n                // Dead scanline, no rendering.\n                // Set VINT:\n                this.setStatusFlag(this.STATUS_VBLANK,true)\n                this.requestEndFrame = true\n                this.nmiCounter = 9\n            \n                // Wrap around:\n                this.scanline = -1 // will be incremented to 0\n                \n                break\n                \n            default:\n                if (this.scanline >= 21 && this.scanline <= 260) {\n\n                    // Render normally:\n                    if (this.f_bgVisibility == 1) {\n\n                        if (!this.scanlineAlreadyRendered) {\n                            // update scroll:\n                            this.cntHT = this.regHT\n                            this.cntH = this.regH\n                            this.renderBgScanline(true,this.scanline+1-21)\n                        }\n                        this.scanlineAlreadyRendered=false\n\n                        // Check for sprite 0 (next scanline):\n                        if (!this.hitSpr0 && this.f_spVisibility == 1) {\n                            if (this.sprX[0] >= -7 &&\n                                    this.sprX[0] < 256 &&\n                                    this.sprY[0] + 1 <= (this.scanline - 20) &&\n                                    (this.sprY[0] + 1 + (\n                                        this.f_spriteSize === 0 ? 8 : 16\n                                    )) >= (this.scanline - 20)) {\n                                if (this.checkSprite0(this.scanline - 20)) {\n                                    this.hitSpr0 = true\n                                }\n                            }\n                        }\n\n                    }\n\n                    if (this.f_bgVisibility==1 || this.f_spVisibility==1) {\n                        // Clock mapper IRQ Counter:\n                        this.nes.mmap.clockIrqCounter()\n                    }\n                }\n        }\n        \n        this.scanline++\n        this.regsToAddress()\n        this.cntsToAddress()\n        \n    },\n    \n    startFrame: function(){    \n        // Set background color:\n        var bgColor=0\n        \n        if (this.f_dispType === 0) {\n            // Color display.\n            // f_color determines color emphasis.\n            // Use first entry of image palette as BG color.\n            bgColor = this.imgPalette[0]\n        }\n        else {\n            // Monochrome display.\n            // f_color determines the bg color.\n            switch (this.f_color) {\n                case 0:\n                    // Black\n                    bgColor = 0x00000\n                    break\n                case 1:\n                    // Green\n                    bgColor = 0x00FF00\n                    break\n                case 2:\n                    // Blue\n                    bgColor = 0xFF0000\n                    break\n                case 3:\n                    // Invalid. Use black.\n                    bgColor = 0x000000\n                    break\n                case 4:\n                    // Red\n                    bgColor = 0x0000FF\n                    break\n                default:\n                    // Invalid. Use black.\n                    bgColor = 0x0\n            }\n        }\n        \n        var buffer = this.buffer\n        var i\n        for (i=0 i<256*240 i++) {\n            buffer[i] = bgColor\n        }\n        var pixrendered = this.pixrendered\n        for (i=0 i<pixrendered.length i++) {\n            pixrendered[i]=65\n        }\n    },\n    \n    endFrame: function(){\n        var i, x, y\n        var buffer = this.buffer\n        \n        // Draw spr#0 hit coordinates:\n        if (this.showSpr0Hit) {\n            // Spr 0 position:\n            if (this.sprX[0] >= 0 && this.sprX[0] < 256 &&\n                    this.sprY[0] >= 0 && this.sprY[0] < 240) {\n                for (i=0 i<256 i++) {  \n                    buffer[(this.sprY[0]<<8)+i] = 0xFF5555\n                }\n                for (i=0 i<240 i++) {\n                    buffer[(i<<8)+this.sprX[0]] = 0xFF5555\n                }\n            }\n            // Hit position:\n            if (this.spr0HitX >= 0 && this.spr0HitX < 256 &&\n                    this.spr0HitY >= 0 && this.spr0HitY < 240) {\n                for (i=0 i<256 i++) {\n                    buffer[(this.spr0HitY<<8)+i] = 0x55FF55\n                }\n                for (i=0 i<240 i++) {\n                    buffer[(i<<8)+this.spr0HitX] = 0x55FF55\n                }\n            }\n        }\n        \n        // This is a bit lazy..\n        // if either the sprites or the background should be clipped,\n        // both are clipped after rendering is finished.\n        if (this.clipToTvSize || this.f_bgClipping === 0 || this.f_spClipping === 0) {\n            // Clip left 8-pixels column:\n            for (y=0y<240y++) {\n                for (x=0x<8x++) {\n                    buffer[(y<<8)+x] = 0\n                }\n            }\n        }\n        \n        if (this.clipToTvSize) {\n            // Clip right 8-pixels column too:\n            for (y=0 y<240 y++) {\n                for (x=0 x<8 x++) {\n                    buffer[(y<<8)+255-x] = 0\n                }\n            }\n        }\n        \n        // Clip top and bottom 8 pixels:\n        if (this.clipToTvSize) {\n            for (y=0 y<8 y++) {\n                for (x=0 x<256 x++) {\n                    buffer[(y<<8)+x] = 0\n                    buffer[((239-y)<<8)+x] = 0\n                }\n            }\n        }\n        \n        if (this.nes.opts.showDisplay) {\n            this.nes.ui.writeFrame(buffer, this.prevBuffer)\n        }\n    },\n    \n    updateControlReg1: function(value){\n        \n        this.triggerRendering()\n        \n        this.f_nmiOnVblank =    (value>>7)&1\n        this.f_spriteSize =     (value>>5)&1\n        this.f_bgPatternTable = (value>>4)&1\n        this.f_spPatternTable = (value>>3)&1\n        this.f_addrInc =        (value>>2)&1\n        this.f_nTblAddress =     value&3\n        \n        this.regV = (value>>1)&1\n        this.regH = value&1\n        this.regS = (value>>4)&1\n        \n    },\n    \n    updateControlReg2: function(value){\n        \n        this.triggerRendering()\n        \n        this.f_color =       (value>>5)&7\n        this.f_spVisibility = (value>>4)&1\n        this.f_bgVisibility = (value>>3)&1\n        this.f_spClipping =   (value>>2)&1\n        this.f_bgClipping =   (value>>1)&1\n        this.f_dispType =      value&1\n        \n        if (this.f_dispType === 0) {\n            this.palTable.setEmphasis(this.f_color)\n        }\n        this.updatePalettes()\n    },\n    \n    setStatusFlag: function(flag, value){\n        var n = 1<<flag\n        this.nes.cpu.mem[0x2002] = \n            ((this.nes.cpu.mem[0x2002] & (255-n)) | (value?n:0))\n    },\n    \n    // CPU Register $2002:\n    // Read the Status Register.\n    readStatusRegister: function(){\n        \n        var tmp = this.nes.cpu.mem[0x2002]\n        \n        // Reset scroll & VRAM Address toggle:\n        this.firstWrite = true\n        \n        // Clear VBlank flag:\n        this.setStatusFlag(this.STATUS_VBLANK,false)\n        \n        // Fetch status data:\n        return tmp\n        \n    },\n    \n    // CPU Register $2003:\n    // Write the SPR-RAM address that is used for sramWrite (Register 0x2004 in CPU memory map)\n    writeSRAMAddress: function(address) {\n        this.sramAddress = address\n    },\n    \n    // CPU Register $2004 (R):\n    // Read from SPR-RAM (Sprite RAM).\n    // The address should be set first.\n    sramLoad: function() {\n        =beginshort tmp = sprMem.load(sramAddress)\n        sramAddress++ // Increment address\n        sramAddress%=0x100\n        return tmp=end\n        return this.spriteMem[this.sramAddress]\n    },\n    \n    // CPU Register $2004 (W):\n    // Write to SPR-RAM (Sprite RAM).\n    // The address should be set first.\n    sramWrite: function(value){\n        this.spriteMem[this.sramAddress] = value\n        this.spriteRamWriteUpdate(this.sramAddress,value)\n        this.sramAddress++ // Increment address\n        this.sramAddress %= 0x100\n    },\n    \n    // CPU Register $2005:\n    // Write to scroll registers.\n    // The first write is the vertical offset, the second is the\n    // horizontal offset:\n    scrollWrite: function(value){\n        this.triggerRendering()\n        \n        if (this.firstWrite) {\n            // First write, horizontal scroll:\n            this.regHT = (value>>3)&31\n            this.regFH = value&7\n            \n        }else {\n            \n            // Second write, vertical scroll:\n            this.regFV = value&7\n            this.regVT = (value>>3)&31\n            \n        }\n        this.firstWrite = !this.firstWrite\n        \n    },\n    \n    // CPU Register $2006:\n    // Sets the adress used when reading/writing from/to VRAM.\n    // The first write sets the high byte, the second the low byte.\n    writeVRAMAddress: function(address){\n        \n        if (this.firstWrite) {\n            \n            this.regFV = (address>>4)&3\n            this.regV = (address>>3)&1\n            this.regH = (address>>2)&1\n            this.regVT = (this.regVT&7) | ((address&3)<<3)\n            \n        }else {\n            this.triggerRendering()\n            \n            this.regVT = (this.regVT&24) | ((address>>5)&7)\n            this.regHT = address&31\n            \n            this.cntFV = this.regFV\n            this.cntV = this.regV\n            this.cntH = this.regH\n            this.cntVT = this.regVT\n            this.cntHT = this.regHT\n            \n            this.checkSprite0(this.scanline-20)\n            \n        }\n        \n        this.firstWrite = !this.firstWrite\n        \n        // Invoke mapper latch:\n        this.cntsToAddress()\n        if (this.vramAddress < 0x2000) {\n            this.nes.mmap.latchAccess(this.vramAddress)\n        }   \n    },\n    \n    // CPU Register $2007(R):\n    // Read from PPU memory. The address should be set first.\n    vramLoad: function(){\n        var tmp\n        \n        this.cntsToAddress()\n        this.regsToAddress()\n        \n        // If address is in range 0x0000-0x3EFF, return buffered values:\n        if (this.vramAddress <= 0x3EFF) {\n            tmp = this.vramBufferedReadValue\n        \n            // Update buffered value:\n            if (this.vramAddress < 0x2000) {\n                this.vramBufferedReadValue = this.vramMem[this.vramAddress]\n            }\n            else {\n                this.vramBufferedReadValue = this.mirroredLoad(\n                    this.vramAddress\n                )\n            }\n            \n            // Mapper latch access:\n            if (this.vramAddress < 0x2000) {\n                this.nes.mmap.latchAccess(this.vramAddress)\n            }\n            \n            // Increment by either 1 or 32, depending on d2 of Control Register 1:\n            this.vramAddress += (this.f_addrInc == 1 ? 32 : 1)\n            \n            this.cntsFromAddress()\n            this.regsFromAddress()\n            \n            return tmp // Return the previous buffered value.\n        }\n            \n        // No buffering in this mem range. Read normally.\n        tmp = this.mirroredLoad(this.vramAddress)\n        \n        // Increment by either 1 or 32, depending on d2 of Control Register 1:\n        this.vramAddress += (this.f_addrInc == 1 ? 32 : 1) \n        \n        this.cntsFromAddress()\n        this.regsFromAddress()\n        \n        return tmp\n    },\n    \n    // CPU Register $2007(W):\n    // Write to PPU memory. The address should be set first.\n    vramWrite: function(value){\n        \n        this.triggerRendering()\n        this.cntsToAddress()\n        this.regsToAddress()\n        \n        if (this.vramAddress >= 0x2000) {\n            // Mirroring is used.\n            this.mirroredWrite(this.vramAddress,value)\n        }else {\n            \n            // Write normally.\n            this.writeMem(this.vramAddress,value)\n            \n            // Invoke mapper latch:\n            this.nes.mmap.latchAccess(this.vramAddress)\n            \n        }\n        \n        // Increment by either 1 or 32, depending on d2 of Control Register 1:\n        this.vramAddress += (this.f_addrInc==1?32:1)\n        this.regsFromAddress()\n        this.cntsFromAddress()\n        \n    },\n    \n    // CPU Register $4014:\n    // Write 256 bytes of main memory\n    // into Sprite RAM.\n    sramDMA: function(value){\n        var baseAddress = value * 0x100\n        var data\n        for (var i=this.sramAddress i < 256 i++) {\n            data = this.nes.cpu.mem[baseAddress+i]\n            this.spriteMem[i] = data\n            this.spriteRamWriteUpdate(i, data)\n        }\n        \n        this.nes.cpu.haltCycles(513)\n        \n    },\n    \n    // Updates the scroll registers from a new VRAM address.\n    regsFromAddress: function(){\n        \n        var address = (this.vramTmpAddress>>8)&0xFF\n        this.regFV = (address>>4)&7\n        this.regV = (address>>3)&1\n        this.regH = (address>>2)&1\n        this.regVT = (this.regVT&7) | ((address&3)<<3)\n        \n        address = this.vramTmpAddress&0xFF\n        this.regVT = (this.regVT&24) | ((address>>5)&7)\n        this.regHT = address&31\n    },\n    \n    // Updates the scroll registers from a new VRAM address.\n    cntsFromAddress: function(){\n        \n        var address = (this.vramAddress>>8)&0xFF\n        this.cntFV = (address>>4)&3\n        this.cntV = (address>>3)&1\n        this.cntH = (address>>2)&1\n        this.cntVT = (this.cntVT&7) | ((address&3)<<3)        \n        \n        address = this.vramAddress&0xFF\n        this.cntVT = (this.cntVT&24) | ((address>>5)&7)\n        this.cntHT = address&31\n        \n    },\n    \n    regsToAddress: function(){\n        var b1  = (this.regFV&7)<<4\n        b1 |= (this.regV&1)<<3\n        b1 |= (this.regH&1)<<2\n        b1 |= (this.regVT>>3)&3\n        \n        var b2  = (this.regVT&7)<<5\n        b2 |= this.regHT&31\n        \n        this.vramTmpAddress = ((b1<<8) | b2)&0x7FFF\n    },\n    \n    cntsToAddress: function(){\n        var b1  = (this.cntFV&7)<<4\n        b1 |= (this.cntV&1)<<3\n        b1 |= (this.cntH&1)<<2\n        b1 |= (this.cntVT>>3)&3\n        \n        var b2  = (this.cntVT&7)<<5\n        b2 |= this.cntHT&31\n        \n        this.vramAddress = ((b1<<8) | b2)&0x7FFF\n    },\n    \n    incTileCounter: function(count) { \n        for (var i=count i!==0 i--) {\n            this.cntHT++\n            if (this.cntHT == 32) {\n                this.cntHT = 0\n                this.cntVT++\n                if (this.cntVT >= 30) {\n                    this.cntH++\n                    if(this.cntH == 2) {\n                        this.cntH = 0\n                        this.cntV++\n                        if (this.cntV == 2) {\n                            this.cntV = 0\n                            this.cntFV++\n                            this.cntFV &= 0x7\n                        }\n                    }\n                }\n            }\n        }\n    },\n    \n    // Reads from memory, taking into account\n    // mirroring/mapping of address ranges.\n    mirroredLoad: function(address) {\n        return this.vramMem[this.vramMirrorTable[address]]\n    },\n    \n    // Writes to memory, taking into account\n    // mirroring/mapping of address ranges.\n    mirroredWrite: function(address, value){\n        if (address>=0x3f00 && address<0x3f20) {\n            // Palette write mirroring.\n            if (address==0x3F00 || address==0x3F10) {\n                this.writeMem(0x3F00,value)\n                this.writeMem(0x3F10,value)\n                \n            }else if (address==0x3F04 || address==0x3F14) {\n                \n                this.writeMem(0x3F04,value)\n                this.writeMem(0x3F14,value)\n                \n            }else if (address==0x3F08 || address==0x3F18) {\n                \n                this.writeMem(0x3F08,value)\n                this.writeMem(0x3F18,value)\n                \n            }else if (address==0x3F0C || address==0x3F1C) {\n                \n                this.writeMem(0x3F0C,value)\n                this.writeMem(0x3F1C,value)\n                \n            }else {\n                this.writeMem(address,value)\n            }\n            \n        }else {\n            \n            // Use lookup table for mirrored address:\n            if (address<this.vramMirrorTable.length) {\n                this.writeMem(this.vramMirrorTable[address],value)\n            }else {\n                // FIXME\n                alert(\"Invalid VRAM address: \"+address.toString(16))\n            }\n            \n        }\n    },\n    \n    triggerRendering: function(){\n        if (this.scanline >= 21 && this.scanline <= 260) {\n            // Render sprites, and combine:\n            this.renderFramePartially(\n                this.lastRenderedScanline+1,\n                this.scanline-21-this.lastRenderedScanline\n            )\n            \n            // Set last rendered scanline:\n            this.lastRenderedScanline = this.scanline-21\n        }\n    },\n    \n    renderFramePartially: function(startScan, scanCount){\n        if (this.f_spVisibility == 1) {\n            this.renderSpritesPartially(startScan,scanCount,true)\n        }\n        \n        if(this.f_bgVisibility == 1) {\n            var si = startScan<<8\n            var ei = (startScan+scanCount)<<8\n            if (ei > 0xF000) {\n                ei = 0xF000\n            }\n            var buffer = this.buffer\n            var bgbuffer = this.bgbuffer\n            var pixrendered = this.pixrendered\n            for (var destIndex=si destIndex<ei destIndex++) {\n                if (pixrendered[destIndex] > 0xFF) {\n                    buffer[destIndex] = bgbuffer[destIndex]\n                }\n            }\n        }\n        \n        if (this.f_spVisibility == 1) {\n            this.renderSpritesPartially(startScan, scanCount, false)\n        }\n        \n        this.validTileData = false\n    },\n    \n    renderBgScanline: function(bgbuffer, scan) {\n        var baseTile = (this.regS === 0 ? 0 : 256)\n        var destIndex = (scan<<8)-this.regFH\n\n        this.curNt = this.ntable1[this.cntV+this.cntV+this.cntH]\n        \n        this.cntHT = this.regHT\n        this.cntH = this.regH\n        this.curNt = this.ntable1[this.cntV+this.cntV+this.cntH]\n        \n        if (scan<240 && (scan-this.cntFV)>=0){\n            \n            var tscanoffset = this.cntFV<<3\n            var scantile = this.scantile\n            var attrib = this.attrib\n            var ptTile = this.ptTile\n            var nameTable = this.nameTable\n            var imgPalette = this.imgPalette\n            var pixrendered = this.pixrendered\n            var targetBuffer = bgbuffer ? this.bgbuffer : this.buffer\n\n            var t, tpix, att, col\n\n            for (var tile=0tile<32tile++) {\n                \n                if (scan>=0) {\n                \n                    // Fetch tile & attrib data:\n                    if (this.validTileData) {\n                        // Get data from array:\n                        t = scantile[tile]\n                        tpix = t.pix\n                        att = attrib[tile]\n                    }else {\n                        // Fetch data:\n                        t = ptTile[baseTile+nameTable[this.curNt].getTileIndex(this.cntHT,this.cntVT)]\n                        tpix = t.pix\n                        att = nameTable[this.curNt].getAttrib(this.cntHT,this.cntVT)\n                        scantile[tile] = t\n                        attrib[tile] = att\n                    }\n                    \n                    // Render tile scanline:\n                    var sx = 0\n                    var x = (tile<<3)-this.regFH\n\n                    if (x>-8) {\n                        if (x<0) {\n                            destIndex-=x\n                            sx = -x\n                        }\n                        if (t.opaque[this.cntFV]) {\n                            for (sx<8sx++) {\n                                targetBuffer[destIndex] = imgPalette[\n                                    tpix[tscanoffset+sx]+att\n                                ]\n                                pixrendered[destIndex] |= 256\n                                destIndex++\n                            }\n                        }else {\n                            for (sx<8sx++) {\n                                col = tpix[tscanoffset+sx]\n                                if(col !== 0) {\n                                    targetBuffer[destIndex] = imgPalette[\n                                        col+att\n                                    ]\n                                    pixrendered[destIndex] |= 256\n                                }\n                                destIndex++\n                            }\n                        }\n                    }\n                    \n                }\n                    \n                // Increase Horizontal Tile Counter:\n                if (++this.cntHT==32) {\n                    this.cntHT=0\n                    this.cntH++\n                    this.cntH%=2\n                    this.curNt = this.ntable1[(this.cntV<<1)+this.cntH]    \n                }\n                \n                \n            }\n            \n            // Tile data for one row should now have been fetched,\n            // so the data in the array is valid.\n            this.validTileData = true\n            \n        }\n        \n        // update vertical scroll:\n        this.cntFV++\n        if (this.cntFV==8) {\n            this.cntFV = 0\n            this.cntVT++\n            if (this.cntVT==30) {\n                this.cntVT = 0\n                this.cntV++\n                this.cntV%=2\n                this.curNt = this.ntable1[(this.cntV<<1)+this.cntH]\n            }else if (this.cntVT==32) {\n                this.cntVT = 0\n            }\n            \n            // Invalidate fetched data:\n            this.validTileData = false\n            \n        }\n    },\n    \n    renderSpritesPartially: function(startscan, scancount, bgPri){\n        if (this.f_spVisibility === 1) {\n            \n            for (var i=0i<64i++) {\n                if (this.bgPriority[i]==bgPri && this.sprX[i]>=0 && \n                        this.sprX[i]<256 && this.sprY[i]+8>=startscan && \n                        this.sprY[i]<startscan+scancount) {\n                    // Show sprite.\n                    if (this.f_spriteSize === 0) {\n                        // 8x8 sprites\n                        \n                        this.srcy1 = 0\n                        this.srcy2 = 8\n                        \n                        if (this.sprY[i]<startscan) {\n                            this.srcy1 = startscan - this.sprY[i]-1\n                        }\n                        \n                        if (this.sprY[i]+8 > startscan+scancount) {\n                            this.srcy2 = startscan+scancount-this.sprY[i]+1\n                        }\n                        \n                        if (this.f_spPatternTable===0) {\n                            this.ptTile[this.sprTile[i]].render(this.buffer, \n                                0, this.srcy1, 8, this.srcy2, this.sprX[i], \n                                this.sprY[i]+1, this.sprCol[i], this.sprPalette, \n                                this.horiFlip[i], this.vertFlip[i], i, \n                                this.pixrendered\n                            )\n                        }else {\n                            this.ptTile[this.sprTile[i]+256].render(this.buffer, 0, this.srcy1, 8, this.srcy2, this.sprX[i], this.sprY[i]+1, this.sprCol[i], this.sprPalette, this.horiFlip[i], this.vertFlip[i], i, this.pixrendered)\n                        }\n                    }else {\n                        // 8x16 sprites\n                        var top = this.sprTile[i]\n                        if ((top&1)!==0) {\n                            top = this.sprTile[i]-1+256\n                        }\n                        \n                        var srcy1 = 0\n                        var srcy2 = 8\n                        \n                        if (this.sprY[i]<startscan) {\n                            srcy1 = startscan - this.sprY[i]-1\n                        }\n                        \n                        if (this.sprY[i]+8 > startscan+scancount) {\n                            srcy2 = startscan+scancount-this.sprY[i]\n                        }\n                        \n                        this.ptTile[top+(this.vertFlip[i]?1:0)].render(\n                            this.buffer,\n                            0,\n                            srcy1,\n                            8,\n                            srcy2,\n                            this.sprX[i],\n                            this.sprY[i]+1,\n                            this.sprCol[i],\n                            this.sprPalette,\n                            this.horiFlip[i],\n                            this.vertFlip[i],\n                            i,\n                            this.pixrendered\n                        )\n                        \n                        srcy1 = 0\n                        srcy2 = 8\n                        \n                        if (this.sprY[i]+8<startscan) {\n                            srcy1 = startscan - (this.sprY[i]+8+1)\n                        }\n                        \n                        if (this.sprY[i]+16 > startscan+scancount) {\n                            srcy2 = startscan+scancount-(this.sprY[i]+8)\n                        }\n                        \n                        this.ptTile[top+(this.vertFlip[i]?0:1)].render(\n                            this.buffer,\n                            0,\n                            srcy1,\n                            8,\n                            srcy2,\n                            this.sprX[i],\n                            this.sprY[i]+1+8,\n                            this.sprCol[i],\n                            this.sprPalette,\n                            this.horiFlip[i],\n                            this.vertFlip[i],\n                            i,\n                            this.pixrendered\n                        )\n                        \n                    }\n                }\n            }\n        }\n    },\n    \n    checkSprite0: function(scan){\n        \n        this.spr0HitX = -1\n        this.spr0HitY = -1\n        \n        var toffset\n        var tIndexAdd = (this.f_spPatternTable === 0?0:256)\n        var x, y, t, i\n        var bufferIndex\n        var col\n        var bgPri\n        \n        x = this.sprX[0]\n        y = this.sprY[0]+1\n        \n        if (this.f_spriteSize === 0) {\n            // 8x8 sprites.\n\n            // Check range:\n            if (y <= scan && y + 8 > scan && x >= -7 && x < 256) {\n                \n                // Sprite is in range.\n                // Draw scanline:\n                t = this.ptTile[this.sprTile[0] + tIndexAdd]\n                col = this.sprCol[0]\n                bgPri = this.bgPriority[0]\n                \n                if (this.vertFlip[0]) {\n                    toffset = 7 - (scan -y)\n                }\n                else {\n                    toffset = scan - y\n                }\n                toffset *= 8\n                \n                bufferIndex = scan * 256 + x\n                if (this.horiFlip[0]) {\n                    for (i = 7 i >= 0 i--) {\n                        if (x >= 0 && x < 256) {\n                            if (bufferIndex>=0 && bufferIndex<61440 && \n                                    this.pixrendered[bufferIndex] !==0 ) {\n                                if (t.pix[toffset+i] !== 0) {\n                                    this.spr0HitX = bufferIndex % 256\n                                    this.spr0HitY = scan\n                                    return true\n                                }\n                            }\n                        }\n                        x++\n                        bufferIndex++\n                    }\n                }\n                else {\n                    for (i = 0 i < 8 i++) {\n                        if (x >= 0 && x < 256) {\n                            if (bufferIndex >= 0 && bufferIndex < 61440 && \n                                    this.pixrendered[bufferIndex] !==0 ) {\n                                if (t.pix[toffset+i] !== 0) {\n                                    this.spr0HitX = bufferIndex % 256\n                                    this.spr0HitY = scan\n                                    return true\n                                }\n                            }\n                        }\n                        x++\n                        bufferIndex++  \n                    }   \n                }\n            }\n        }\n        else {\n            // 8x16 sprites:\n        \n            // Check range:\n            if (y <= scan && y + 16 > scan && x >= -7 && x < 256) {\n                // Sprite is in range.\n                // Draw scanline:\n                \n                if (this.vertFlip[0]) {\n                    toffset = 15-(scan-y)\n                }else {\n                    toffset = scan-y\n                }\n                \n                if (toffset<8) {\n                    // first half of sprite.\n                    t = this.ptTile[this.sprTile[0]+(this.vertFlip[0]?1:0)+((this.sprTile[0]&1)!==0?255:0)]\n                }else {\n                    // second half of sprite.\n                    t = this.ptTile[this.sprTile[0]+(this.vertFlip[0]?0:1)+((this.sprTile[0]&1)!==0?255:0)]\n                    if (this.vertFlip[0]) {\n                        toffset = 15-toffset\n                    }\n                    else {\n                        toffset -= 8\n                    }\n                }\n                toffset*=8\n                col = this.sprCol[0]\n                bgPri = this.bgPriority[0]\n                \n                bufferIndex = scan*256+x\n                if (this.horiFlip[0]) {\n                    for (i=7i>=0i--) {\n                        if (x>=0 && x<256) {\n                            if (bufferIndex>=0 && bufferIndex<61440 && this.pixrendered[bufferIndex]!==0) {\n                                if (t.pix[toffset+i] !== 0) {\n                                    this.spr0HitX = bufferIndex%256\n                                    this.spr0HitY = scan\n                                    return true\n                                }\n                            }\n                        }\n                        x++\n                        bufferIndex++\n                    }\n                    \n                }\n                else {\n                    \n                    for (i=0i<8i++) {\n                        if (x>=0 && x<256) {\n                            if (bufferIndex>=0 && bufferIndex<61440 && this.pixrendered[bufferIndex]!==0) {\n                                if (t.pix[toffset+i] !== 0) {\n                                    this.spr0HitX = bufferIndex%256\n                                    this.spr0HitY = scan\n                                    return true\n                                }\n                            }\n                        }\n                        x++\n                        bufferIndex++\n                    }\n                    \n                }\n                \n            }\n            \n        }\n        \n        return false\n    },\n    \n    // This will write to PPU memory, and\n    // update internally buffered data\n    // appropriately.\n    writeMem: function(address, value){\n        this.vramMem[address] = value\n        \n        // Update internally buffered data:\n        if (address < 0x2000) {\n            this.vramMem[address] = value\n            this.patternWrite(address,value)\n        }\n        else if (address >=0x2000 && address <0x23c0) {    \n            this.nameTableWrite(this.ntable1[0], address - 0x2000, value)\n        }\n        else if (address >=0x23c0 && address <0x2400) {    \n            this.attribTableWrite(this.ntable1[0],address-0x23c0,value)\n        }\n        else if (address >=0x2400 && address <0x27c0) {    \n            this.nameTableWrite(this.ntable1[1],address-0x2400,value)\n        }\n        else if (address >=0x27c0 && address <0x2800) {    \n            this.attribTableWrite(this.ntable1[1],address-0x27c0,value)\n        }\n        else if (address >=0x2800 && address <0x2bc0) {    \n            this.nameTableWrite(this.ntable1[2],address-0x2800,value)\n        }\n        else if (address >=0x2bc0 && address <0x2c00) {    \n            this.attribTableWrite(this.ntable1[2],address-0x2bc0,value)\n        }\n        else if (address >=0x2c00 && address <0x2fc0) {    \n            this.nameTableWrite(this.ntable1[3],address-0x2c00,value)\n        }\n        else if (address >=0x2fc0 && address <0x3000) {\n            this.attribTableWrite(this.ntable1[3],address-0x2fc0,value)\n        }\n        else if (address >=0x3f00 && address <0x3f20) {\n            this.updatePalettes()\n        }\n    },\n    \n    // Reads data from $3f00 to $f20 \n    // into the two buffered palettes.\n    updatePalettes: function(){\n        var i\n        \n        for (i = 0 i < 16 i++) {\n            if (this.f_dispType === 0) {\n                this.imgPalette[i] = this.palTable.getEntry(\n                    this.vramMem[0x3f00 + i] & 63\n                )\n            }\n            else {\n                this.imgPalette[i] = this.palTable.getEntry(\n                    this.vramMem[0x3f00 + i] & 32\n                )\n            }\n        }\n        for (i = 0 i < 16 i++) {\n            if (this.f_dispType === 0) {\n                this.sprPalette[i] = this.palTable.getEntry(\n                    this.vramMem[0x3f10 + i] & 63\n                )\n            }\n            else {\n                this.sprPalette[i] = this.palTable.getEntry(\n                    this.vramMem[0x3f10 + i] & 32\n                )\n            }\n        }\n    },\n    \n    // Updates the internal pattern\n    // table buffers with this new byte.\n    // In vNES, there is a version of this with 4 arguments which isn't used.\n    patternWrite: function(address, value){\n        var tileIndex = Math.floor(address / 16)\n        var leftOver = address%16\n        if (leftOver<8) {\n            this.ptTile[tileIndex].setScanline(\n                leftOver,\n                value,\n                this.vramMem[address+8]\n            )\n        }\n        else {\n            this.ptTile[tileIndex].setScanline(\n                leftOver-8,\n                this.vramMem[address-8],\n                value\n            )\n        }\n    },\n\n    // Updates the internal name table buffers\n    // with this new byte.\n    nameTableWrite: function(index, address, value){\n        this.nameTable[index].tile[address] = value\n        \n        // Update Sprite #0 hit:\n        //updateSpr0Hit()\n        this.checkSprite0(this.scanline-20)\n    },\n    \n    // Updates the internal pattern\n    // table buffers with this new attribute\n    // table byte.\n    attribTableWrite: function(index, address, value){\n        this.nameTable[index].writeAttrib(address,value)\n    },\n    \n    // Updates the internally buffered sprite\n    // data with this new byte of info.\n    spriteRamWriteUpdate: function(address, value) {\n        var tIndex = Math.floor(address / 4)\n        \n        if (tIndex === 0) {\n            //updateSpr0Hit()\n            this.checkSprite0(this.scanline - 20)\n        }\n        \n        if (address % 4 === 0) {\n            // Y coordinate\n            this.sprY[tIndex] = value\n        }\n        else if (address % 4 == 1) {\n            // Tile index\n            this.sprTile[tIndex] = value\n        }\n        else if (address % 4 == 2) {\n            // Attributes\n            this.vertFlip[tIndex] = ((value & 0x80) !== 0)\n            this.horiFlip[tIndex] = ((value & 0x40) !==0 )\n            this.bgPriority[tIndex] = ((value & 0x20) !== 0)\n            this.sprCol[tIndex] = (value & 3) << 2\n            \n        }\n        else if (address % 4 == 3) {\n            // X coordinate\n            this.sprX[tIndex] = value\n        }\n    },\n    \n    doNMI: function() {\n        // Set VBlank flag:\n        this.setStatusFlag(this.STATUS_VBLANK,true)\n        //nes.getCpu().doNonMaskableInterrupt()\n        this.nes.cpu.requestIrq(this.nes.cpu.IRQ_NMI)\n    },\n    \n    JSON_PROPERTIES: [\n        // Memory\n        'vramMem', 'spriteMem',\n        // Counters\n        'cntFV', 'cntV', 'cntH', 'cntVT', 'cntHT',\n        // Registers\n        'regFV', 'regV', 'regH', 'regVT', 'regHT', 'regFH', 'regS',\n        // VRAM addr\n        'vramAddress', 'vramTmpAddress',\n        // Control/Status registers\n        'f_nmiOnVblank', 'f_spriteSize', 'f_bgPatternTable', 'f_spPatternTable', \n        'f_addrInc', 'f_nTblAddress', 'f_color', 'f_spVisibility', \n        'f_bgVisibility', 'f_spClipping', 'f_bgClipping', 'f_dispType',\n        // VRAM I/O\n        'vramBufferedReadValue', 'firstWrite',\n        // Mirroring\n        'currentMirroring', 'vramMirrorTable', 'ntable1',\n        // SPR-RAM I/O\n        'sramAddress',\n        // Sprites. Most sprite data is rebuilt from spriteMem\n        'hitSpr0',\n        // Palettes\n        'sprPalette', 'imgPalette',\n        // Rendering progression\n        'curX', 'scanline', 'lastRenderedScanline', 'curNt', 'scantile',\n        // Used during rendering\n        'attrib', 'buffer', 'bgbuffer', 'pixrendered',\n        // Misc\n        'requestEndFrame', 'nmiOk', 'dummyCycleToggle', 'nmiCounter', \n        'validTileData', 'scanlineAlreadyRendered'\n    ],\n    \n    toJSON: function() {\n        var i\n        var state = JSNES.Utils.toJSON(this)\n        \n        state.nameTable = []\n        for (i = 0 i < this.nameTable.length i++) {\n            state.nameTable[i] = this.nameTable[i].toJSON()\n        }\n        \n        state.ptTile = []\n        for (i = 0 i < this.ptTile.length i++) {\n            state.ptTile[i] = this.ptTile[i].toJSON()\n        }\n        \n        return state\n    },\n    \n    fromJSON: function(state) {\n        var i\n        \n        JSNES.Utils.fromJSON(this, state)\n        \n        for (i = 0 i < this.nameTable.length i++) {\n            this.nameTable[i].fromJSON(state.nameTable[i])\n        }\n        \n        for (i = 0 i < this.ptTile.length i++) {\n            this.ptTile[i].fromJSON(state.ptTile[i])\n        }\n        \n        // Sprite data:\n        for (i = 0 i < this.spriteMem.length i++) {\n            this.spriteRamWriteUpdate(i, this.spriteMem[i])\n        }\n    }\n}\n\nJSNES.PPU.NameTable = function(width, height, name) {   \n    this.width = width\n    this.height = height\n    this.name = name\n    \n    this.tile = new Array(width*height)\n    this.attrib = new Array(width*height)\n}\n\nJSNES.PPU.NameTable.prototype = {\n    getTileIndex: function(x, y){\n        return this.tile[y*this.width+x]\n    },\n\n    getAttrib: function(x, y){\n        return this.attrib[y*this.width+x]\n    },\n\n    writeAttrib: function(index, value){\n        var basex = (index % 8) * 4\n        var basey = Math.floor(index / 8) * 4\n        var add\n        var tx, ty\n        var attindex\n    \n        for (var sqy=0sqy<2sqy++) {\n            for (var sqx=0sqx<2sqx++) {\n                add = (value>>(2*(sqy*2+sqx)))&3\n                for (var y=0y<2y++) {\n                    for (var x=0x<2x++) {\n                        tx = basex+sqx*2+x\n                        ty = basey+sqy*2+y\n                        attindex = ty*this.width+tx\n                        this.attrib[ty*this.width+tx] = (add<<2)&12\n                    }\n                }\n            }\n        }\n    },\n    \n    toJSON: function() {\n        return {\n            'tile': this.tile,\n            'attrib': this.attrib\n        }\n    },\n    \n    fromJSON: function(s) {\n        this.tile = s.tile\n        this.attrib = s.attrib\n    }\n}\n\n\nJSNES.PPU.PaletteTable = function() {\n    this.curTable = new Array(64)\n    this.emphTable = new Array(8)\n    this.currentEmph = -1\n}\n\nJSNES.PPU.PaletteTable.prototype = {\n    reset: function() {\n        this.setEmphasis(0)\n    },\n    \n    loadNTSCPalette: function() {\n        this.curTable = [0x525252, 0xB40000, 0xA00000, 0xB1003D, 0x740069, 0x00005B, 0x00005F, 0x001840, 0x002F10, 0x084A08, 0x006700, 0x124200, 0x6D2800, 0x000000, 0x000000, 0x000000, 0xC4D5E7, 0xFF4000, 0xDC0E22, 0xFF476B, 0xD7009F, 0x680AD7, 0x0019BC, 0x0054B1, 0x006A5B, 0x008C03, 0x00AB00, 0x2C8800, 0xA47200, 0x000000, 0x000000, 0x000000, 0xF8F8F8, 0xFFAB3C, 0xFF7981, 0xFF5BC5, 0xFF48F2, 0xDF49FF, 0x476DFF, 0x00B4F7, 0x00E0FF, 0x00E375, 0x03F42B, 0x78B82E, 0xE5E218, 0x787878, 0x000000, 0x000000, 0xFFFFFF, 0xFFF2BE, 0xF8B8B8, 0xF8B8D8, 0xFFB6FF, 0xFFC3FF, 0xC7D1FF, 0x9ADAFF, 0x88EDF8, 0x83FFDD, 0xB8F8B8, 0xF5F8AC, 0xFFFFB0, 0xF8D8F8, 0x000000, 0x000000]\n        this.makeTables()\n        this.setEmphasis(0)\n    },\n    \n    loadPALPalette: function() {\n        this.curTable = [0x525252, 0xB40000, 0xA00000, 0xB1003D, 0x740069, 0x00005B, 0x00005F, 0x001840, 0x002F10, 0x084A08, 0x006700, 0x124200, 0x6D2800, 0x000000, 0x000000, 0x000000, 0xC4D5E7, 0xFF4000, 0xDC0E22, 0xFF476B, 0xD7009F, 0x680AD7, 0x0019BC, 0x0054B1, 0x006A5B, 0x008C03, 0x00AB00, 0x2C8800, 0xA47200, 0x000000, 0x000000, 0x000000, 0xF8F8F8, 0xFFAB3C, 0xFF7981, 0xFF5BC5, 0xFF48F2, 0xDF49FF, 0x476DFF, 0x00B4F7, 0x00E0FF, 0x00E375, 0x03F42B, 0x78B82E, 0xE5E218, 0x787878, 0x000000, 0x000000, 0xFFFFFF, 0xFFF2BE, 0xF8B8B8, 0xF8B8D8, 0xFFB6FF, 0xFFC3FF, 0xC7D1FF, 0x9ADAFF, 0x88EDF8, 0x83FFDD, 0xB8F8B8, 0xF5F8AC, 0xFFFFB0, 0xF8D8F8, 0x000000, 0x000000]\n        this.makeTables()\n        this.setEmphasis(0)\n    },\n    \n    makeTables: function(){\n        var r, g, b, col, i, rFactor, gFactor, bFactor\n        \n        // Calculate a table for each possible emphasis setting:\n        for (var emph = 0 emph < 8 emph++) {\n            \n            // Determine color component factors:\n            rFactor = 1.0\n            gFactor = 1.0\n            bFactor = 1.0\n            \n            if ((emph & 1) !== 0) {\n                rFactor = 0.75\n                bFactor = 0.75\n            }\n            if ((emph & 2) !== 0) {\n                rFactor = 0.75\n                gFactor = 0.75\n            }\n            if ((emph & 4) !== 0) {\n                gFactor = 0.75\n                bFactor = 0.75\n            }\n            \n            this.emphTable[emph] = new Array(64)\n            \n            // Calculate table:\n            for (i = 0 i < 64 i++) {\n                col = this.curTable[i]\n                r = Math.floor(this.getRed(col) * rFactor)\n                g = Math.floor(this.getGreen(col) * gFactor)\n                b = Math.floor(this.getBlue(col) * bFactor)\n                this.emphTable[emph][i] = this.getRgb(r, g, b)\n            }\n        }\n    },\n    \n    setEmphasis: function(emph){\n        if (emph != this.currentEmph) {\n            this.currentEmph = emph\n            for (var i = 0 i < 64 i++) {\n                this.curTable[i] = this.emphTable[emph][i]\n            }\n        }\n    },\n    \n    getEntry: function(yiq){\n        return this.curTable[yiq]\n    },\n    \n    getRed: function(rgb){\n        return (rgb>>16)&0xFF\n    },\n    \n    getGreen: function(rgb){\n        return (rgb>>8)&0xFF\n    },\n    \n    getBlue: function(rgb){\n        return rgb&0xFF\n    },\n    \n    getRgb: function(r, g, b){\n        return ((r<<16)|(g<<8)|(b))\n    },\n    \n    loadDefaultPalette: function(){\n        this.curTable[ 0] = this.getRgb(117,117,117)\n        this.curTable[ 1] = this.getRgb( 39, 27,143)\n        this.curTable[ 2] = this.getRgb(  0,  0,171)\n        this.curTable[ 3] = this.getRgb( 71,  0,159)\n        this.curTable[ 4] = this.getRgb(143,  0,119)\n        this.curTable[ 5] = this.getRgb(171,  0, 19)\n        this.curTable[ 6] = this.getRgb(167,  0,  0)\n        this.curTable[ 7] = this.getRgb(127, 11,  0)\n        this.curTable[ 8] = this.getRgb( 67, 47,  0)\n        this.curTable[ 9] = this.getRgb(  0, 71,  0)\n        this.curTable[10] = this.getRgb(  0, 81,  0)\n        this.curTable[11] = this.getRgb(  0, 63, 23)\n        this.curTable[12] = this.getRgb( 27, 63, 95)\n        this.curTable[13] = this.getRgb(  0,  0,  0)\n        this.curTable[14] = this.getRgb(  0,  0,  0)\n        this.curTable[15] = this.getRgb(  0,  0,  0)\n        this.curTable[16] = this.getRgb(188,188,188)\n        this.curTable[17] = this.getRgb(  0,115,239)\n        this.curTable[18] = this.getRgb( 35, 59,239)\n        this.curTable[19] = this.getRgb(131,  0,243)\n        this.curTable[20] = this.getRgb(191,  0,191)\n        this.curTable[21] = this.getRgb(231,  0, 91)\n        this.curTable[22] = this.getRgb(219, 43,  0)\n        this.curTable[23] = this.getRgb(203, 79, 15)\n        this.curTable[24] = this.getRgb(139,115,  0)\n        this.curTable[25] = this.getRgb(  0,151,  0)\n        this.curTable[26] = this.getRgb(  0,171,  0)\n        this.curTable[27] = this.getRgb(  0,147, 59)\n        this.curTable[28] = this.getRgb(  0,131,139)\n        this.curTable[29] = this.getRgb(  0,  0,  0)\n        this.curTable[30] = this.getRgb(  0,  0,  0)\n        this.curTable[31] = this.getRgb(  0,  0,  0)\n        this.curTable[32] = this.getRgb(255,255,255)\n        this.curTable[33] = this.getRgb( 63,191,255)\n        this.curTable[34] = this.getRgb( 95,151,255)\n        this.curTable[35] = this.getRgb(167,139,253)\n        this.curTable[36] = this.getRgb(247,123,255)\n        this.curTable[37] = this.getRgb(255,119,183)\n        this.curTable[38] = this.getRgb(255,119, 99)\n        this.curTable[39] = this.getRgb(255,155, 59)\n        this.curTable[40] = this.getRgb(243,191, 63)\n        this.curTable[41] = this.getRgb(131,211, 19)\n        this.curTable[42] = this.getRgb( 79,223, 75)\n        this.curTable[43] = this.getRgb( 88,248,152)\n        this.curTable[44] = this.getRgb(  0,235,219)\n        this.curTable[45] = this.getRgb(  0,  0,  0)\n        this.curTable[46] = this.getRgb(  0,  0,  0)\n        this.curTable[47] = this.getRgb(  0,  0,  0)\n        this.curTable[48] = this.getRgb(255,255,255)\n        this.curTable[49] = this.getRgb(171,231,255)\n        this.curTable[50] = this.getRgb(199,215,255)\n        this.curTable[51] = this.getRgb(215,203,255)\n        this.curTable[52] = this.getRgb(255,199,255)\n        this.curTable[53] = this.getRgb(255,199,219)\n        this.curTable[54] = this.getRgb(255,191,179)\n        this.curTable[55] = this.getRgb(255,219,171)\n        this.curTable[56] = this.getRgb(255,231,163)\n        this.curTable[57] = this.getRgb(227,255,163)\n        this.curTable[58] = this.getRgb(171,243,191)\n        this.curTable[59] = this.getRgb(179,255,207)\n        this.curTable[60] = this.getRgb(159,255,243)\n        this.curTable[61] = this.getRgb(  0,  0,  0)\n        this.curTable[62] = this.getRgb(  0,  0,  0)\n        this.curTable[63] = this.getRgb(  0,  0,  0)\n        \n        this.makeTables()\n        this.setEmphasis(0)\n    }\n}\n\nJSNES.PPU.Tile = function() {\n    // Tile data:\n    this.pix = new Array(64)\n    \n    this.fbIndex = null\n    this.tIndex = null\n    this.x = null\n    this.y = null\n    this.w = null\n    this.h = null\n    this.incX = null\n    this.incY = null\n    this.palIndex = null\n    this.tpri = null\n    this.c = null\n    this.initialized = false\n    this.opaque = new Array(8)\n}\n    \nJSNES.PPU.Tile.prototype = {\n    setBuffer: function(scanline){\n        for (this.y=0this.y<8this.y++) {\n            this.setScanline(this.y,scanline[this.y],scanline[this.y+8])\n        }\n    },\n    \n    setScanline: function(sline, b1, b2){\n        this.initialized = true\n        this.tIndex = sline<<3\n        for (this.x = 0 this.x < 8 this.x++) {\n            this.pix[this.tIndex + this.x] = ((b1 >> (7 - this.x)) & 1) +\n                    (((b2 >> (7 - this.x)) & 1) << 1)\n            if(this.pix[this.tIndex+this.x] === 0) {\n                this.opaque[sline] = false\n            }\n        }\n    },\n    \n    render: function(buffer, srcx1, srcy1, srcx2, srcy2, dx, dy, palAdd, palette, flipHorizontal, flipVertical, pri, priTable) {\n\n        if (dx<-7 || dx>=256 || dy<-7 || dy>=240) {\n            return\n        }\n\n        this.w=srcx2-srcx1\n        this.h=srcy2-srcy1\n    \n        if (dx<0) {\n            srcx1-=dx\n        }\n        if (dx+srcx2>=256) {\n            srcx2=256-dx\n        }\n    \n        if (dy<0) {\n            srcy1-=dy\n        }\n        if (dy+srcy2>=240) {\n            srcy2=240-dy\n        }\n    \n        if (!flipHorizontal && !flipVertical) {\n        \n            this.fbIndex = (dy<<8)+dx\n            this.tIndex = 0\n            for (this.y=0this.y<8this.y++) {\n                for (this.x=0this.x<8this.x++) {\n                    if (this.x>=srcx1 && this.x<srcx2 && this.y>=srcy1 && this.y<srcy2) {\n                        this.palIndex = this.pix[this.tIndex]\n                        this.tpri = priTable[this.fbIndex]\n                        if (this.palIndex!==0 && pri<=(this.tpri&0xFF)) {\n                            //console.log(\"Rendering upright tile to buffer\")\n                            buffer[this.fbIndex] = palette[this.palIndex+palAdd]\n                            this.tpri = (this.tpri&0xF00)|pri\n                            priTable[this.fbIndex] =this.tpri\n                        }\n                    }\n                    this.fbIndex++\n                    this.tIndex++\n                }\n                this.fbIndex-=8\n                this.fbIndex+=256\n            }\n        \n        }else if (flipHorizontal && !flipVertical) {\n        \n            this.fbIndex = (dy<<8)+dx\n            this.tIndex = 7\n            for (this.y=0this.y<8this.y++) {\n                for (this.x=0this.x<8this.x++) {\n                    if (this.x>=srcx1 && this.x<srcx2 && this.y>=srcy1 && this.y<srcy2) {\n                        this.palIndex = this.pix[this.tIndex]\n                        this.tpri = priTable[this.fbIndex]\n                        if (this.palIndex!==0 && pri<=(this.tpri&0xFF)) {\n                            buffer[this.fbIndex] = palette[this.palIndex+palAdd]\n                            this.tpri = (this.tpri&0xF00)|pri\n                            priTable[this.fbIndex] =this.tpri\n                        }\n                    }\n                    this.fbIndex++\n                    this.tIndex--\n                }\n                this.fbIndex-=8\n                this.fbIndex+=256\n                this.tIndex+=16\n            }\n        \n        }\n        else if(flipVertical && !flipHorizontal) {\n        \n            this.fbIndex = (dy<<8)+dx\n            this.tIndex = 56\n            for (this.y=0this.y<8this.y++) {\n                for (this.x=0this.x<8this.x++) {\n                    if (this.x>=srcx1 && this.x<srcx2 && this.y>=srcy1 && this.y<srcy2) {\n                        this.palIndex = this.pix[this.tIndex]\n                        this.tpri = priTable[this.fbIndex]\n                        if (this.palIndex!==0 && pri<=(this.tpri&0xFF)) {\n                            buffer[this.fbIndex] = palette[this.palIndex+palAdd]\n                            this.tpri = (this.tpri&0xF00)|pri\n                            priTable[this.fbIndex] =this.tpri\n                        }\n                    }\n                    this.fbIndex++\n                    this.tIndex++\n                }\n                this.fbIndex-=8\n                this.fbIndex+=256\n                this.tIndex-=16\n            }\n        \n        }\n        else {\n            this.fbIndex = (dy<<8)+dx\n            this.tIndex = 63\n            for (this.y=0this.y<8this.y++) {\n                for (this.x=0this.x<8this.x++) {\n                    if (this.x>=srcx1 && this.x<srcx2 && this.y>=srcy1 && this.y<srcy2) {\n                        this.palIndex = this.pix[this.tIndex]\n                        this.tpri = priTable[this.fbIndex]\n                        if (this.palIndex!==0 && pri<=(this.tpri&0xFF)) {\n                            buffer[this.fbIndex] = palette[this.palIndex+palAdd]\n                            this.tpri = (this.tpri&0xF00)|pri\n                            priTable[this.fbIndex] =this.tpri\n                        }\n                    }\n                    this.fbIndex++\n                    this.tIndex--\n                }\n                this.fbIndex-=8\n                this.fbIndex+=256\n            }\n        \n        }\n    \n    },\n    \n    isTransparent: function(x, y){\n        return (this.pix[(y << 3) + x] === 0)\n    },\n    \n    toJSON: function() {\n        return {\n            'opaque': this.opaque,\n            'pix': this.pix\n        }\n    },\n\n    fromJSON: function(s) {\n        this.opaque = s.opaque\n        this.pix = s.pix\n    }\n}\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/ppu.js",
			"file_size": 65929,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 65059,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin\nJSNES, based on Jamie Sanders' vNES\nCopyright (C) 2010 Ben Firshman\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n=end\n\nJSNES.ROM = function(nes) {\n    this.nes = nes\n    \n    this.mapperName = new Array(92)\n    \n    for (var i=0i<92i++) {\n        this.mapperName[i] = \"Unknown Mapper\"\n    }\n    this.mapperName[ 0] = \"Direct Access\"\n    this.mapperName[ 1] = \"Nintendo MMC1\"\n    this.mapperName[ 2] = \"UNROM\"\n    this.mapperName[ 3] = \"CNROM\"\n    this.mapperName[ 4] = \"Nintendo MMC3\"\n    this.mapperName[ 5] = \"Nintendo MMC5\"\n    this.mapperName[ 6] = \"FFE F4xxx\"\n    this.mapperName[ 7] = \"AOROM\"\n    this.mapperName[ 8] = \"FFE F3xxx\"\n    this.mapperName[ 9] = \"Nintendo MMC2\"\n    this.mapperName[10] = \"Nintendo MMC4\"\n    this.mapperName[11] = \"Color Dreams Chip\"\n    this.mapperName[12] = \"FFE F6xxx\"\n    this.mapperName[15] = \"100-in-1 switch\"\n    this.mapperName[16] = \"Bandai chip\"\n    this.mapperName[17] = \"FFE F8xxx\"\n    this.mapperName[18] = \"Jaleco SS8806 chip\"\n    this.mapperName[19] = \"Namcot 106 chip\"\n    this.mapperName[20] = \"Famicom Disk System\"\n    this.mapperName[21] = \"Konami VRC4a\"\n    this.mapperName[22] = \"Konami VRC2a\"\n    this.mapperName[23] = \"Konami VRC2a\"\n    this.mapperName[24] = \"Konami VRC6\"\n    this.mapperName[25] = \"Konami VRC4b\"\n    this.mapperName[32] = \"Irem G-101 chip\"\n    this.mapperName[33] = \"Taito TC0190/TC0350\"\n    this.mapperName[34] = \"32kB ROM switch\"\n    \n    this.mapperName[64] = \"Tengen RAMBO-1 chip\"\n    this.mapperName[65] = \"Irem H-3001 chip\"\n    this.mapperName[66] = \"GNROM switch\"\n    this.mapperName[67] = \"SunSoft3 chip\"\n    this.mapperName[68] = \"SunSoft4 chip\"\n    this.mapperName[69] = \"SunSoft5 FME-7 chip\"\n    this.mapperName[71] = \"Camerica chip\"\n    this.mapperName[78] = \"Irem 74HC161/32-based\"\n    this.mapperName[91] = \"Pirate HK-SF3 chip\"\n}\n\nJSNES.ROM.prototype = {\n    // Mirroring types:\n    VERTICAL_MIRRORING: 0,\n    HORIZONTAL_MIRRORING: 1,\n    FOURSCREEN_MIRRORING: 2,\n    SINGLESCREEN_MIRRORING: 3,\n    SINGLESCREEN_MIRRORING2: 4,\n    SINGLESCREEN_MIRRORING3: 5,\n    SINGLESCREEN_MIRRORING4: 6,\n    CHRROM_MIRRORING: 7,\n    \n    header: null,\n    rom: null,\n    vrom: null,\n    vromTile: null,\n    \n    romCount: null,\n    vromCount: null,\n    mirroring: null,\n    batteryRam: null,\n    trainer: null,\n    fourScreen: null,\n    mapperType: null,\n    valid: false,\n    \n    load: function(data) {\n        var i, j, v\n        \n        if (data.indexOf(\"NES\\x1a\") === -1) {\n            this.nes.ui.updateStatus(\"Not a valid NES ROM.\")\n            return\n        }\n        this.header = new Array(16)\n        for (i = 0 i < 16 i++) {\n            this.header[i] = data.charCodeAt(i) & 0xFF\n        }\n        this.romCount = this.header[4]\n        this.vromCount = this.header[5]*2 // Get the number of 4kB banks, not 8kB\n        this.mirroring = ((this.header[6] & 1) !== 0 ? 1 : 0)\n        this.batteryRam = (this.header[6] & 2) !== 0\n        this.trainer = (this.header[6] & 4) !== 0\n        this.fourScreen = (this.header[6] & 8) !== 0\n        this.mapperType = (this.header[6] >> 4) | (this.header[7] & 0xF0)\n        =begin TODO\n        if (this.batteryRam)\n            this.loadBatteryRam()=end\n        // Check whether byte 8-15 are zero's:\n        var foundError = false\n        for (i=8 i<16 i++) {\n            if (this.header[i] !== 0) {\n                foundError = true\n                break\n            }\n        }\n        if (foundError) {\n            this.mapperType &= 0xF // Ignore byte 7\n        }\n        // Load PRG-ROM banks:\n        this.rom = new Array(this.romCount)\n        var offset = 16\n        for (i=0 i < this.romCount i++) {\n            this.rom[i] = new Array(16384)\n            for (j=0 j < 16384 j++) {\n                if (offset+j >= data.length) {\n                    break\n                }\n                this.rom[i][j] = data.charCodeAt(offset + j) & 0xFF\n            }\n            offset += 16384\n        }\n        // Load CHR-ROM banks:\n        this.vrom = new Array(this.vromCount)\n        for (i=0 i < this.vromCount i++) {\n            this.vrom[i] = new Array(4096)\n            for (j=0 j < 4096 j++) {\n                if (offset+j >= data.length){\n                    break\n                }\n                this.vrom[i][j] = data.charCodeAt(offset + j) & 0xFF\n            }\n            offset += 4096\n        }\n        \n        // Create VROM tiles:\n        this.vromTile = new Array(this.vromCount)\n        for (i=0 i < this.vromCount i++) {\n            this.vromTile[i] = new Array(256)\n            for (j=0 j < 256 j++) {\n                this.vromTile[i][j] = new JSNES.PPU.Tile()\n            }\n        }\n        \n        // Convert CHR-ROM banks to tiles:\n        var tileIndex\n        var leftOver\n        for (v=0 v < this.vromCount v++) {\n            for (i=0 i < 4096 i++) {\n                tileIndex = i >> 4\n                leftOver = i % 16\n                if (leftOver < 8) {\n                    this.vromTile[v][tileIndex].setScanline(\n                        leftOver,\n                        this.vrom[v][i],\n                        this.vrom[v][i+8]\n                    )\n                }\n                else {\n                    this.vromTile[v][tileIndex].setScanline(\n                        leftOver-8,\n                        this.vrom[v][i-8],\n                        this.vrom[v][i]\n                    )\n                }\n            }\n        }\n        \n        this.valid = true\n    },\n    \n    getMirroringType: function() {\n        if (this.fourScreen) {\n            return this.FOURSCREEN_MIRRORING\n        }\n        if (this.mirroring === 0) {\n            return this.HORIZONTAL_MIRRORING\n        }\n        return this.VERTICAL_MIRRORING\n    },\n    \n    getMapperName: function() {\n        if (this.mapperType >= 0 && this.mapperType < this.mapperName.length) {\n            return this.mapperName[this.mapperType]\n        }\n        return \"Unknown Mapper, \"+this.mapperType\n    },\n    \n    mapperSupported: function() {\n        return typeof JSNES.Mappers[this.mapperType] !== 'undefined'\n    },\n    \n    createMapper: function() {\n        if (this.mapperSupported()) {\n            return new JSNES.Mappers[this.mapperType](this.nes)\n        }\n        else {\n            this.nes.ui.updateStatus(\"This ROM uses a mapper not supported by JSNES: \"+this.getMapperName()+\"(\"+this.mapperType+\")\")\n            return null\n        }\n    }\n}\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/rom.js",
			"file_size": 7066,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 6967,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin\nJSNES, based on Jamie Sanders' vNES\nCopyright (C) 2010 Ben Firshman\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n=end\n\nJSNES.DummyUI = function(nes) {\n    this.nes = nes\n    this.enable = function() {}\n    this.updateStatus = function() {}\n    this.writeAudio = function() {}\n    this.writeFrame = function() {}\n}\n\nif (typeof jQuery !== 'undefined') {\n    (function($) {\n        $.fn.JSNESUI = function(roms) {\n            var parent = this\n            var UI = function(nes) {\n                var self = this\n                self.nes = nes\n                \n                =begin\n                 * Create UI\n                 =end\n                self.root = $('<div></div>')\n                self.screen = $('<canvas class=\"nes-screen\" width=\"256\" height=\"240\"></canvas>').appendTo(self.root)\n                \n                if (!self.screen[0].getContext) {\n                    parent.html(\"Your browser doesn't support the <code>&ltcanvas&gt</code> tag. Try Google Chrome, Safari, Opera or Firefox!\")\n                    return\n                }\n                \n                self.romContainer = $('<div class=\"nes-roms\"></div>').appendTo(self.root)\n                self.romSelect = $('<select></select>').appendTo(self.romContainer)\n                \n                self.controls = $('<div class=\"nes-controls\"></div>').appendTo(self.root)\n                self.buttons = {\n                    pause: $('<input type=\"button\" value=\"pause\" class=\"nes-pause\" disabled=\"disabled\">').appendTo(self.controls),\n                    restart: $('<input type=\"button\" value=\"restart\" class=\"nes-restart\" disabled=\"disabled\">').appendTo(self.controls),\n                    sound: $('<input type=\"button\" value=\"enable sound\" class=\"nes-enablesound\">').appendTo(self.controls),\n                    zoom: $('<input type=\"button\" value=\"zoom in\" class=\"nes-zoom\">').appendTo(self.controls)\n                }\n                self.status = $('<p class=\"nes-status\">Booting up...</p>').appendTo(self.root)\n                self.root.appendTo(parent)\n                \n                =begin\n                 * ROM loading\n                 =end\n                self.romSelect.change(function() {\n                    self.loadROM()\n                })\n                \n                =begin\n                 * Buttons\n                 =end\n                self.buttons.pause.click(function() {\n                    if (self.nes.isRunning) {\n                        self.nes.stop()\n                        self.updateStatus(\"Paused\")\n                        self.buttons.pause.attr(\"value\", \"resume\")\n                    }\n                    else {\n                        self.nes.start()\n                        self.buttons.pause.attr(\"value\", \"pause\")\n                    }\n                })\n        \n                self.buttons.restart.click(function() {\n                    self.nes.reloadRom()\n                    self.nes.start()\n                })\n        \n                self.buttons.sound.click(function() {\n                    if (self.nes.opts.emulateSound) {\n                        self.nes.opts.emulateSound = false\n                        self.buttons.sound.attr(\"value\", \"enable sound\")\n                    }\n                    else {\n                        self.nes.opts.emulateSound = true\n                        self.buttons.sound.attr(\"value\", \"disable sound\")\n                    }\n                })\n        \n                self.zoomed = false\n                self.buttons.zoom.click(function() {\n                    if (self.zoomed) {\n                        self.screen.animate({\n                            width: '256px',\n                            height: '240px'\n                        })\n                        self.buttons.zoom.attr(\"value\", \"zoom in\")\n                        self.zoomed = false\n                    }\n                    else {\n                        self.screen.animate({\n                            width: '512px',\n                            height: '480px'\n                        })\n                        self.buttons.zoom.attr(\"value\", \"zoom out\")\n                        self.zoomed = true\n                    }\n                })\n                \n                =begin\n                 * Lightgun experiments with mouse\n                 * (Requires jquery.dimensions.js)\n                 =end\n                if ($.offset) {\n                    self.screen.mousedown(function(e) {\n                        if (self.nes.mmap) {\n                            self.nes.mmap.mousePressed = true\n                            // FIXME: does not take into account zoom\n                            self.nes.mmap.mouseX = e.pageX - self.screen.offset().left\n                            self.nes.mmap.mouseY = e.pageY - self.screen.offset().top\n                        }\n                    }).mouseup(function() {\n                        setTimeout(function() {\n                            if (self.nes.mmap) {\n                                self.nes.mmap.mousePressed = false\n                                self.nes.mmap.mouseX = 0\n                                self.nes.mmap.mouseY = 0\n                            }\n                        }, 500)\n                    })\n                }\n            \n                if (typeof roms != 'undefined') {\n                    self.setRoms(roms)\n                }\n            \n                =begin\n                 * Canvas\n                 =end\n                self.canvasContext = self.screen[0].getContext('2d')\n                \n                if (!self.canvasContext.getImageData) {\n                    parent.html(\"Your browser doesn't support writing pixels directly to the <code>&ltcanvas&gt</code> tag. Try the latest versions of Google Chrome, Safari, Opera or Firefox!\")\n                    return\n                }\n                \n                self.canvasImageData = self.canvasContext.getImageData(0, 0, 256, 240)\n                self.resetCanvas()\n            \n                =begin\n                 * Keyboard\n                 =end\n                $(document).\n                    bind('keydown', function(evt) {\n                        self.nes.keyboard.keyDown(evt) \n                    }).\n                    bind('keyup', function(evt) {\n                        self.nes.keyboard.keyUp(evt) \n                    }).\n                    bind('keypress', function(evt) {\n                        self.nes.keyboard.keyPress(evt)\n                    })\n            \n                =begin\n                 * Sound\n                 =end\n                self.dynamicaudio = new DynamicAudio({\n                    swf: nes.opts.swfPath+'dynamicaudio.swf'\n                })\n            }\n        \n            UI.prototype = {    \n                loadROM: function() {\n                    var self = this\n                    self.updateStatus(\"Downloading...\")\n                    $.ajax({\n                        url: escape(self.romSelect.val()),\n                        xhr: function() {\n                            var xhr = $.ajaxSettings.xhr()\n                            if (typeof xhr.overrideMimeType !== 'undefined') {\n                                // Download as binary\n                                xhr.overrideMimeType('text/plain charset=x-user-defined')\n                            }\n                            self.xhr = xhr\n                            return xhr\n                        },\n                        complete: function(xhr, status) {\n                            var i, data\n                            if (JSNES.Utils.isIE()) {\n                                var charCodes = JSNESBinaryToArray(\n                                    xhr.responseBody\n                                ).toArray()\n                                data = String.fromCharCode.apply(\n                                    undefined, \n                                    charCodes\n                                )\n                            }\n                            else {\n                                data = xhr.responseText\n                            }\n                            self.nes.loadRom(data)\n                            self.nes.start()\n                            self.enable()\n                        }\n                    })\n                },\n                \n                resetCanvas: function() {\n                    this.canvasContext.fillStyle = 'black'\n                    // set alpha to opaque\n                    this.canvasContext.fillRect(0, 0, 256, 240)\n\n                    // Set alpha\n                    for (var i = 3 i < this.canvasImageData.data.length-3 i += 4) {\n                        this.canvasImageData.data[i] = 0xFF\n                    }\n                },\n                \n                =begin\n                 * Enable and reset UI elements\n                 =end\n                enable: function() {\n                    this.buttons.pause.attr(\"disabled\", null)\n                    if (this.nes.isRunning) {\n                        this.buttons.pause.attr(\"value\", \"pause\")\n                    }\n                    else {\n                        this.buttons.pause.attr(\"value\", \"resume\")\n                    }\n                    this.buttons.restart.attr(\"disabled\", null)\n                    if (this.nes.opts.emulateSound) {\n                        this.buttons.sound.attr(\"value\", \"disable sound\")\n                    }\n                    else {\n                        this.buttons.sound.attr(\"value\", \"enable sound\")\n                    }\n                },\n            \n                updateStatus: function(s) {\n                    this.status.text(s)\n                },\n        \n                setRoms: function(roms) {\n                    this.romSelect.children().remove()\n                    $(\"<option>Select a ROM...</option>\").appendTo(this.romSelect)\n                    for (var groupName in roms) {\n                        if (roms.hasOwnProperty(groupName)) {\n                            var optgroup = $('<optgroup></optgroup>').\n                                attr(\"label\", groupName)\n                            for (var i = 0 i < roms[groupName].length i++) {\n                                $('<option>'+roms[groupName][i][0]+'</option>')\n                                    .attr(\"value\", roms[groupName][i][1])\n                                    .appendTo(optgroup)\n                            }\n                            this.romSelect.append(optgroup)\n                        }\n                    }\n                },\n            \n                writeAudio: function(samples) {\n                    return this.dynamicaudio.writeInt(samples)\n                },\n            \n                writeFrame: function(buffer, prevBuffer) {\n                    var imageData = this.canvasImageData.data\n                    var pixel, i, j\n\n                    for (i=0 i<256*240 i++) {\n                        pixel = buffer[i]\n\n                        if (pixel != prevBuffer[i]) {\n                            j = i*4\n                            imageData[j] = pixel & 0xFF\n                            imageData[j+1] = (pixel >> 8) & 0xFF\n                            imageData[j+2] = (pixel >> 16) & 0xFF\n                            prevBuffer[i] = pixel\n                        }\n                    }\n\n                    this.canvasContext.putImageData(this.canvasImageData, 0, 0)\n                }\n            }\n        \n            return UI\n        }\n    })(jQuery)\n}\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/ui.js",
			"file_size": 12127,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 12063,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin\nJSNES, based on Jamie Sanders' vNES\nCopyright (C) 2010 Ben Firshman\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n=end\n\nJSNES.Utils = {\n    copyArrayElements: function(src, srcPos, dest, destPos, length) {\n        for (var i = 0 i < length ++i) {\n            dest[destPos + i] = src[srcPos + i]\n        }\n    },\n    \n    copyArray: function(src) {\n        var dest = new Array(src.length)\n        for (var i = 0 i < src.length i++) {\n            dest[i] = src[i]\n        }\n        return dest\n    },\n    \n    fromJSON: function(obj, state) {\n        for (var i = 0 i < obj.JSON_PROPERTIES.length i++) {\n            obj[obj.JSON_PROPERTIES[i]] = state[obj.JSON_PROPERTIES[i]]\n        }\n    },\n    \n    toJSON: function(obj) {\n        var state = {}\n        for (var i = 0 i < obj.JSON_PROPERTIES.length i++) {\n            state[obj.JSON_PROPERTIES[i]] = obj[obj.JSON_PROPERTIES[i]]\n        }\n        return state\n    },\n    \n    isIE: function() {\n        return (/msie/i.test(navigator.userAgent) && !/opera/i.test(navigator.userAgent))\n    }\n}\n\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/utils.js",
			"file_size": 1632,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 1619,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin\nCopyright (c) 2008 Fred Palmer fred.palmer_at_gmail.com\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n=end\nfunction StringBuffer()\n{ \n    this.buffer = [] \n} \n\nStringBuffer.prototype.append = function append(string)\n{ \n    this.buffer.push(string) \n    return this \n} \n\nStringBuffer.prototype.toString = function toString()\n{ \n    return this.buffer.join(\"\") \n} \n\nvar Base64 =\n{\n    codex : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\n    encode : function (input)\n    {\n        var output = new StringBuffer()\n\n        var enumerator = new Utf8EncodeEnumerator(input)\n        while (enumerator.moveNext())\n        {\n            var chr1 = enumerator.current\n\n            enumerator.moveNext()\n            var chr2 = enumerator.current\n\n            enumerator.moveNext()\n            var chr3 = enumerator.current\n\n            var enc1 = chr1 >> 2\n            var enc2 = ((chr1 & 3) << 4) | (chr2 >> 4)\n            var enc3 = ((chr2 & 15) << 2) | (chr3 >> 6)\n            var enc4 = chr3 & 63\n\n            if (isNaN(chr2))\n            {\n                enc3 = enc4 = 64\n            }\n            else if (isNaN(chr3))\n            {\n                enc4 = 64\n            }\n\n            output.append(this.codex.charAt(enc1) + this.codex.charAt(enc2) + this.codex.charAt(enc3) + this.codex.charAt(enc4))\n        }\n\n        return output.toString()\n    },\n\n    decode : function (input)\n    {\n        var output = new StringBuffer()\n\n        var enumerator = new Base64DecodeEnumerator(input)\n        while (enumerator.moveNext())\n        {\n            var charCode = enumerator.current\n\n            if (charCode < 128)\n                output.append(String.fromCharCode(charCode))\n            else if ((charCode > 191) && (charCode < 224))\n            {\n                enumerator.moveNext()\n                var charCode2 = enumerator.current\n\n                output.append(String.fromCharCode(((charCode & 31) << 6) | (charCode2 & 63)))\n            }\n            else\n            {\n                enumerator.moveNext()\n                var charCode2 = enumerator.current\n\n                enumerator.moveNext()\n                var charCode3 = enumerator.current\n\n                output.append(String.fromCharCode(((charCode & 15) << 12) | ((charCode2 & 63) << 6) | (charCode3 & 63)))\n            }\n        }\n\n        return output.toString()\n    }\n}\n\n\nfunction Utf8EncodeEnumerator(input)\n{\n    this._input = input\n    this._index = -1\n    this._buffer = []\n}\n\nUtf8EncodeEnumerator.prototype =\n{\n    current: Number.NaN,\n\n    moveNext: function()\n    {\n        if (this._buffer.length > 0)\n        {\n            this.current = this._buffer.shift()\n            return true\n        }\n        else if (this._index >= (this._input.length - 1))\n        {\n            this.current = Number.NaN\n            return false\n        }\n        else\n        {\n            var charCode = this._input.charCodeAt(++this._index)\n\n            // \"\\r\\n\" -> \"\\n\"\n            //\n            if ((charCode == 13) && (this._input.charCodeAt(this._index + 1) == 10))\n            {\n                charCode = 10\n                this._index += 2\n            }\n\n            if (charCode < 128)\n            {\n                this.current = charCode\n            }\n            else if ((charCode > 127) && (charCode < 2048))\n            {\n                this.current = (charCode >> 6) | 192\n                this._buffer.push((charCode & 63) | 128)\n            }\n            else\n            {\n                this.current = (charCode >> 12) | 224\n                this._buffer.push(((charCode >> 6) & 63) | 128)\n                this._buffer.push((charCode & 63) | 128)\n            }\n\n            return true\n        }\n    }\n}\n\nfunction Base64DecodeEnumerator(input)\n{\n    this._input = input\n    this._index = -1\n    this._buffer = []\n}\n\nBase64DecodeEnumerator.prototype =\n{\n    current: 64,\n\n    moveNext: function()\n    {\n        if (this._buffer.length > 0)\n        {\n            this.current = this._buffer.shift()\n            return true\n        }\n        else if (this._index >= (this._input.length - 1))\n        {\n            this.current = 64\n            return false\n        }\n        else\n        {\n            var enc1 = Base64.codex.indexOf(this._input.charAt(++this._index))\n            var enc2 = Base64.codex.indexOf(this._input.charAt(++this._index))\n            var enc3 = Base64.codex.indexOf(this._input.charAt(++this._index))\n            var enc4 = Base64.codex.indexOf(this._input.charAt(++this._index))\n\n            var chr1 = (enc1 << 2) | (enc2 >> 4)\n            var chr2 = ((enc2 & 15) << 4) | (enc3 >> 2)\n            var chr3 = ((enc3 & 3) << 6) | enc4\n\n            this.current = chr1\n\n            if (enc3 != 64)\n                this._buffer.push(chr2)\n\n            if (enc4 != 64)\n                this._buffer.push(chr3)\n\n            return true\n        }\n    }\n}\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/test/base64.js",
			"file_size": 5932,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 5868,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/test/benchmark.html",
			"settings":
			{
				"buffer_size": 2854,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "=begin\nJSNES, based on Jamie Sanders' vNES\nCopyright (C) 2010 Ben Firshman\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n=end\n\n// Runs 100 frames of Concentration Room\nvar croomBenchmark = (function() {\n\n    =begin\n    This string is an iNES executable of Concentration Room 0.01 in base 64:\n    http://pineight.com/croom/\n    Copyright © 2010 Damian Yerrick <croom@pineight.com>\n    \n    Copying and distribution of this file, with or without modification, are \n    permitted in any medium without royalty provided the copyright notice and \n    this notice are preserved. This file is offered as-is, without any warranty.\n    \n    The accompanying program is free software: you can redistribute it and/or \n    modify it under the terms of the GNU General Public License, version 3 or \n    later. As a special exception, you may copy and distribute exact copies of \n    the program, as published by Damian Yerrick, in iNES or UNIF executable form \n    without source code.\n    \n    This product is not sponsored or endorsed by Nintendo, Ravensburger, Hasbro, \n    Mattel, Quaker Oats, NBC Universal, GameTek, or Apple.\n    =end\n    var croomRom = ''\n    \n    // Requires base64.js\n    if (typeof atob === 'undefined') {\n        croomRom = Base64.decode(croomRom)\n    }\n    else {\n        croomRom = atob(croomRom)\n    }\n    \n    return function() {\n        var i\n        var nes = new JSNES({\n            emulateSound: true,\n            ui: JSNES.DummyUI\n        })\n\n        nes.loadRom(croomRom)\n        nes.setLimitFrames(false)\n        nes.isRunning = true\n        \n        for (i=0 i<5 i++) {\n            nes.frame()\n        }\n    \n        // Hit enter on start screen to start scrolling\n        nes.keyboard.keyDown({keyCode: 13})\n        nes.frame()\n        nes.keyboard.keyUp({keyCode: 13})\n    \n        for (i=0 i<94 i++) {\n            nes.frame()\n        }\n    }\n})()\n",
			"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/test/benchmark.js",
			"file_size": 35244,
			"file_write_time": 1285511146000000,
			"settings":
			{
				"buffer_size": 35235,
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/cpu.rb",
			"settings":
			{
				"buffer_size": 33312,
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/opdata.rb",
			"settings":
			{
				"buffer_size": 15035,
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/papu.rb",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"ppu.rb",
			"",
			"<open files>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"tpri",
			"palIndex",
			"incY",
			"incX",
			"tIndex",
			"fbIndex",
			"@set_emphasis",
			"loadDefaultPalette",
			"getRgb",
			"getBlue",
			"getGreen",
			"getRed",
			"getEntry",
			"loadNTSCPalette",
			"loadPALPalette",
			"currentEmph",
			"emphTable",
			"curTable",
			"makeTables",
			"@makeTables",
			"requestIrq",
			"--",
			"targetBuffer",
			"bgbuffer",
			"nameTable",
			"@renderSpritesPartially",
			"self.write_mem ",
			"var",
			"@writeMem",
			"@mirroredWrite",
			"@reg_SFromAddress",
			"@cntsFromAddress",
			"@mirroredLoad",
			"@spriteRamWriteUpdate",
			"cpu.mem",
			"@updatePalettes",
			"setEmphasis",
			"palTable",
			"f_dispType",
			"@regS",
			"@triggerRendering",
			"prevBuffer",
			"f_spClipping",
			"clipToTvSize",
			"f_bgClipping",
			"showSpr0Hit",
			"show_spr",
			"pixrendered",
			"bgColor",
			"clockIrqCounter",
			"regH",
			"regV",
			"regFV",
			"cntH",
			"cntV",
			"cntFV",
			"@renderBgscan_line",
			"@checkSprite0",
			"@cntsToAddress",
			"@regsToAddress",
			"f_spVisibility",
			"f_bgVisibility",
			"@endFrame",
			"@setStatusFlag",
			"scanline",
			"++",
			"@defineMirrorRegion",
			"vramMirrorTable",
			"this.currentMirroring",
			"this.sramAddress",
			"this.firstWrite",
			"this.vramBufferedReadValue",
			"this.vramTmpAddress",
			"this.vramAddress",
			"@sprite_Mem",
			"this.spriteMem",
			"new Array",
			"t@vram_mem",
			"his.vramMem",
			"//",
			";",
			"*/",
			"/*"
		],
		"highlight": true,
		"in_selection": true,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"t_pri",
			"pal_index",
			"inc_Y",
			"inc_X",
			"t_index",
			"fb_index",
			"self.set_emphasis",
			"load_default_palette",
			"get_RGB",
			"get_blue",
			"get_green",
			"get_red",
			"get_entry",
			"load_NTSC_palette",
			"load_PAL_palette",
			"current_emph",
			"emph_table",
			"cur_table",
			"make_tables",
			"self.make_tables",
			"request_irq",
			"-=1",
			"target_buffer",
			"bg_buffer",
			"name_table",
			"self.render_sprites_partially",
			"",
			"self.write_mem",
			"self.mirrored_write",
			"self.reg_S_from_address",
			"self.cnts_from_address",
			"self.mirrored_load",
			"sprite_ram_write_update",
			"cpu.main_memory",
			"self.update_palettes",
			"set_emphasis",
			"pal_table",
			"f_disp_type",
			"@reg_S",
			"self.trigger_rendering",
			"prev_buffer",
			"f_sp_clipping",
			"clip_to_tv_size",
			"f_bg_clipping",
			"show_spr0_hit",
			"pix_rendered",
			"bg_color",
			"clock_irq_counter",
			"reg_H",
			"reg_V",
			"reg_FV",
			"cnt_H",
			"cnt_V",
			"cnt_FV",
			"self.render_bg_scan_line",
			"self.check_sprite0",
			"self.cnts_to_address",
			"self.regs_to_address",
			"f_sp_visibility",
			"f_bg_visibility",
			"self.end_frame",
			"self.set_status_flag",
			"scan_line",
			"+=1",
			"self.define_mirror_region",
			"vram_mirror_table",
			"@current_mirroring",
			"@sram_address",
			"@first_write",
			"@vram_buffered_read_value",
			"@vram_tmp_address",
			"@vram_address",
			"@sprite_Mem",
			"Array.new",
			"@vram_mem",
			"#",
			"",
			"=end",
			"=begin"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "nintendo.rb",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "source/ppu.rb",
					"settings":
					{
						"buffer_size": 62454,
						"regions":
						{
						},
						"selection":
						[
							[
								57693,
								57693
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 1.0,
						"translation.y": 27447.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/rexstjohn/Desktop/ruby.rb",
					"settings":
					{
						"buffer_size": 74,
						"regions":
						{
						},
						"selection":
						[
							[
								60,
								60
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"settings":
					{
						"buffer_size": 1312,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										175,
										189
									],
									[
										326,
										340
									],
									[
										372,
										386
									],
									[
										521,
										535
									],
									[
										686,
										700
									],
									[
										987,
										1001
									],
									[
										1165,
										1179
									],
									[
										1242,
										1256
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/index.html",
					"settings":
					{
						"buffer_size": 4299,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/LICENSE",
					"settings":
					{
						"buffer_size": 32459,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/lib/dynamicaudio-min.js",
					"settings":
					{
						"buffer_size": 11219,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/lib/jquery-1.4.2.min.js",
					"settings":
					{
						"buffer_size": 70952,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/lib/jquery.dimensions.min.js",
					"settings":
					{
						"buffer_size": 2486,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/roms/croom/README.html",
					"settings":
					{
						"buffer_size": 6235,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/roms/lj65/README.txt",
					"settings":
					{
						"buffer_size": 12503,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/cpu.js",
					"settings":
					{
						"buffer_size": 48410,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/header.js",
					"settings":
					{
						"buffer_size": 692,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/keyboard.js",
					"settings":
					{
						"buffer_size": 2981,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/mappers.js",
					"settings":
					{
						"buffer_size": 33996,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 17053.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/nes.js",
					"settings":
					{
						"buffer_size": 7180,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3044.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/papu.js",
					"settings":
					{
						"buffer_size": 43612,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 19534.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/ppu.js",
					"settings":
					{
						"buffer_size": 65059,
						"regions":
						{
						},
						"selection":
						[
							[
								27030,
								27037
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14074.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/rom.js",
					"settings":
					{
						"buffer_size": 6967,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2504.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/ui.js",
					"settings":
					{
						"buffer_size": 12063,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3689.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/source/utils.js",
					"settings":
					{
						"buffer_size": 1619,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 59.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 21,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/test/base64.js",
					"settings":
					{
						"buffer_size": 5868,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 22,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/test/benchmark.html",
					"settings":
					{
						"buffer_size": 2854,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 23,
					"file": "/Users/rexstjohn/Desktop/bfirsh-jsnes-8692a94/test/benchmark.js",
					"settings":
					{
						"buffer_size": 35235,
						"regions":
						{
						},
						"selection":
						[
							[
								6,
								6
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 24,
					"file": "source/cpu.rb",
					"settings":
					{
						"buffer_size": 33312,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 25,
					"file": "source/opdata.rb",
					"settings":
					{
						"buffer_size": 15035,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 26,
					"file": "source/papu.rb",
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 281.0,
	"status_bar_visible": true
}
